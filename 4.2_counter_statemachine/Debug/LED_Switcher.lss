
LED_Switcher.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002bb4  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000002c  20000000  00002bb4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bkupram      00000000  47000000  47000000  0002002c  2**0
                  CONTENTS
  3 .qspi         00000000  04000000  04000000  0002002c  2**0
                  CONTENTS
  4 .bss          00000088  2000002c  00002be0  0002002c  2**2
                  ALLOC
  5 .stack        00010004  200000b4  00002c68  0002002c  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  0002002c  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  0002005a  2**0
                  CONTENTS, READONLY
  8 .debug_info   000201e7  00000000  00000000  000200b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00002991  00000000  00000000  0004029a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00009a6a  00000000  00000000  00042c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001100  00000000  00000000  0004c695  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000fc8  00000000  00000000  0004d795  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00033131  00000000  00000000  0004e75d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00013261  00000000  00000000  0008188e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00118c99  00000000  00000000  00094aef  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00004718  00000000  00000000  001ad788  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b8 00 01 20 fd 04 00 00 99 05 00 00 99 05 00 00     ... ............
      10:	99 05 00 00 99 05 00 00 99 05 00 00 00 00 00 00     ................
	...
      2c:	99 05 00 00 99 05 00 00 00 00 00 00 99 05 00 00     ................
      3c:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      4c:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      5c:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      6c:	29 1a 00 00 99 05 00 00 99 05 00 00 99 05 00 00     )...............
      7c:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      8c:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      9c:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      ac:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      bc:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      cc:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
      dc:	99 05 00 00 99 05 00 00 99 05 00 00 00 00 00 00     ................
	...
      f4:	f9 17 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     104:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     114:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     124:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     134:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     144:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     154:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     164:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     174:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     184:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     194:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     1a4:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     1b4:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     1c4:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     1d4:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     1e4:	99 05 00 00 99 05 00 00 71 25 00 00 99 05 00 00     ........q%......
     1f4:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     204:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     214:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     224:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     234:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     244:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................
     254:	99 05 00 00 99 05 00 00 99 05 00 00 99 05 00 00     ................

00000264 <__do_global_dtors_aux>:
     264:	b510      	push	{r4, lr}
     266:	4c05      	ldr	r4, [pc, #20]	; (27c <__do_global_dtors_aux+0x18>)
     268:	7823      	ldrb	r3, [r4, #0]
     26a:	b933      	cbnz	r3, 27a <__do_global_dtors_aux+0x16>
     26c:	4b04      	ldr	r3, [pc, #16]	; (280 <__do_global_dtors_aux+0x1c>)
     26e:	b113      	cbz	r3, 276 <__do_global_dtors_aux+0x12>
     270:	4804      	ldr	r0, [pc, #16]	; (284 <__do_global_dtors_aux+0x20>)
     272:	f3af 8000 	nop.w
     276:	2301      	movs	r3, #1
     278:	7023      	strb	r3, [r4, #0]
     27a:	bd10      	pop	{r4, pc}
     27c:	2000002c 	.word	0x2000002c
     280:	00000000 	.word	0x00000000
     284:	00002bb4 	.word	0x00002bb4

00000288 <frame_dummy>:
     288:	4b0c      	ldr	r3, [pc, #48]	; (2bc <frame_dummy+0x34>)
     28a:	b143      	cbz	r3, 29e <frame_dummy+0x16>
     28c:	480c      	ldr	r0, [pc, #48]	; (2c0 <frame_dummy+0x38>)
     28e:	490d      	ldr	r1, [pc, #52]	; (2c4 <frame_dummy+0x3c>)
     290:	b510      	push	{r4, lr}
     292:	f3af 8000 	nop.w
     296:	480c      	ldr	r0, [pc, #48]	; (2c8 <frame_dummy+0x40>)
     298:	6803      	ldr	r3, [r0, #0]
     29a:	b923      	cbnz	r3, 2a6 <frame_dummy+0x1e>
     29c:	bd10      	pop	{r4, pc}
     29e:	480a      	ldr	r0, [pc, #40]	; (2c8 <frame_dummy+0x40>)
     2a0:	6803      	ldr	r3, [r0, #0]
     2a2:	b933      	cbnz	r3, 2b2 <frame_dummy+0x2a>
     2a4:	4770      	bx	lr
     2a6:	4b09      	ldr	r3, [pc, #36]	; (2cc <frame_dummy+0x44>)
     2a8:	2b00      	cmp	r3, #0
     2aa:	d0f7      	beq.n	29c <frame_dummy+0x14>
     2ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     2b0:	4718      	bx	r3
     2b2:	4b06      	ldr	r3, [pc, #24]	; (2cc <frame_dummy+0x44>)
     2b4:	2b00      	cmp	r3, #0
     2b6:	d0f5      	beq.n	2a4 <frame_dummy+0x1c>
     2b8:	4718      	bx	r3
     2ba:	bf00      	nop
     2bc:	00000000 	.word	0x00000000
     2c0:	00002bb4 	.word	0x00002bb4
     2c4:	20000030 	.word	0x20000030
     2c8:	00002bb4 	.word	0x00002bb4
     2cc:	00000000 	.word	0x00000000

000002d0 <atmel_start_init>:
     2d0:	b580      	push	{r7, lr}
     2d2:	af00      	add	r7, sp, #0
     2d4:	4b01      	ldr	r3, [pc, #4]	; (2dc <atmel_start_init+0xc>)
     2d6:	4798      	blx	r3
     2d8:	bf00      	nop
     2da:	bd80      	pop	{r7, pc}
     2dc:	00000d19 	.word	0x00000d19

000002e0 <HandleEvent>:
#include <custom_functions.h>

int HandleEvent(int number){
     2e0:	b4b0      	push	{r4, r5, r7}
     2e2:	b08d      	sub	sp, #52	; 0x34
     2e4:	af00      	add	r7, sp, #0
     2e6:	6078      	str	r0, [r7, #4]
	
	static char CurrentState = 0;
	static int count = 0;
	
	int up_pattern[] = {0,4,6,2,0};
     2e8:	4b5d      	ldr	r3, [pc, #372]	; (460 <HandleEvent+0x180>)
     2ea:	f107 041c 	add.w	r4, r7, #28
     2ee:	461d      	mov	r5, r3
     2f0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     2f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     2f4:	682b      	ldr	r3, [r5, #0]
     2f6:	6023      	str	r3, [r4, #0]
	int down_pattern[] = {0,4,5,1,0};
     2f8:	4b5a      	ldr	r3, [pc, #360]	; (464 <HandleEvent+0x184>)
     2fa:	f107 0408 	add.w	r4, r7, #8
     2fe:	461d      	mov	r5, r3
     300:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
     302:	c40f      	stmia	r4!, {r0, r1, r2, r3}
     304:	682b      	ldr	r3, [r5, #0]
     306:	6023      	str	r3, [r4, #0]
	
	switch (CurrentState){
     308:	4b57      	ldr	r3, [pc, #348]	; (468 <HandleEvent+0x188>)
     30a:	781b      	ldrb	r3, [r3, #0]
     30c:	2b08      	cmp	r3, #8
     30e:	f200 809f 	bhi.w	450 <HandleEvent+0x170>
     312:	a201      	add	r2, pc, #4	; (adr r2, 318 <HandleEvent+0x38>)
     314:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
     318:	0000033d 	.word	0x0000033d
     31c:	00000355 	.word	0x00000355
     320:	0000036d 	.word	0x0000036d
     324:	00000395 	.word	0x00000395
     328:	000003ad 	.word	0x000003ad
     32c:	000003cf 	.word	0x000003cf
     330:	000003f3 	.word	0x000003f3
     334:	0000040b 	.word	0x0000040b
     338:	0000042d 	.word	0x0000042d
		case 0:
		if(number == up_pattern[0]){
     33c:	69fa      	ldr	r2, [r7, #28]
     33e:	687b      	ldr	r3, [r7, #4]
     340:	429a      	cmp	r2, r3
     342:	d103      	bne.n	34c <HandleEvent+0x6c>
			CurrentState = 1;
     344:	4b48      	ldr	r3, [pc, #288]	; (468 <HandleEvent+0x188>)
     346:	2201      	movs	r2, #1
     348:	701a      	strb	r2, [r3, #0]
			}else{
			CurrentState = 0;
		}
		break;
     34a:	e081      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     34c:	4b46      	ldr	r3, [pc, #280]	; (468 <HandleEvent+0x188>)
     34e:	2200      	movs	r2, #0
     350:	701a      	strb	r2, [r3, #0]
		break;
     352:	e07d      	b.n	450 <HandleEvent+0x170>
		case 1:
		if(number == up_pattern[1]){
     354:	6a3a      	ldr	r2, [r7, #32]
     356:	687b      	ldr	r3, [r7, #4]
     358:	429a      	cmp	r2, r3
     35a:	d103      	bne.n	364 <HandleEvent+0x84>
			CurrentState = 2;
     35c:	4b42      	ldr	r3, [pc, #264]	; (468 <HandleEvent+0x188>)
     35e:	2202      	movs	r2, #2
     360:	701a      	strb	r2, [r3, #0]
			}else{
			CurrentState = 0;
		}
		break;
     362:	e075      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     364:	4b40      	ldr	r3, [pc, #256]	; (468 <HandleEvent+0x188>)
     366:	2200      	movs	r2, #0
     368:	701a      	strb	r2, [r3, #0]
		break;
     36a:	e071      	b.n	450 <HandleEvent+0x170>
		case 2:
		if(number == up_pattern[2]){
     36c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
     36e:	687b      	ldr	r3, [r7, #4]
     370:	429a      	cmp	r2, r3
     372:	d103      	bne.n	37c <HandleEvent+0x9c>
			CurrentState = 3;
     374:	4b3c      	ldr	r3, [pc, #240]	; (468 <HandleEvent+0x188>)
     376:	2203      	movs	r2, #3
     378:	701a      	strb	r2, [r3, #0]
			CurrentState = 6;
		}
		else{
			CurrentState = 0;
		}
		break;
     37a:	e069      	b.n	450 <HandleEvent+0x170>
		else if(number == down_pattern[2]){
     37c:	693a      	ldr	r2, [r7, #16]
     37e:	687b      	ldr	r3, [r7, #4]
     380:	429a      	cmp	r2, r3
     382:	d103      	bne.n	38c <HandleEvent+0xac>
			CurrentState = 6;
     384:	4b38      	ldr	r3, [pc, #224]	; (468 <HandleEvent+0x188>)
     386:	2206      	movs	r2, #6
     388:	701a      	strb	r2, [r3, #0]
		break;
     38a:	e061      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     38c:	4b36      	ldr	r3, [pc, #216]	; (468 <HandleEvent+0x188>)
     38e:	2200      	movs	r2, #0
     390:	701a      	strb	r2, [r3, #0]
		break;
     392:	e05d      	b.n	450 <HandleEvent+0x170>
		case 3:
		if(number == up_pattern[3]){
     394:	6aba      	ldr	r2, [r7, #40]	; 0x28
     396:	687b      	ldr	r3, [r7, #4]
     398:	429a      	cmp	r2, r3
     39a:	d103      	bne.n	3a4 <HandleEvent+0xc4>
			CurrentState = 4;
     39c:	4b32      	ldr	r3, [pc, #200]	; (468 <HandleEvent+0x188>)
     39e:	2204      	movs	r2, #4
     3a0:	701a      	strb	r2, [r3, #0]
			}else{
			CurrentState = 0;
		}
		break;
     3a2:	e055      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     3a4:	4b30      	ldr	r3, [pc, #192]	; (468 <HandleEvent+0x188>)
     3a6:	2200      	movs	r2, #0
     3a8:	701a      	strb	r2, [r3, #0]
		break;
     3aa:	e051      	b.n	450 <HandleEvent+0x170>
		case 4:
		if(number == up_pattern[4]){
     3ac:	6afa      	ldr	r2, [r7, #44]	; 0x2c
     3ae:	687b      	ldr	r3, [r7, #4]
     3b0:	429a      	cmp	r2, r3
     3b2:	d108      	bne.n	3c6 <HandleEvent+0xe6>
			CurrentState = 5;
     3b4:	4b2c      	ldr	r3, [pc, #176]	; (468 <HandleEvent+0x188>)
     3b6:	2205      	movs	r2, #5
     3b8:	701a      	strb	r2, [r3, #0]
			count += 1;
     3ba:	4b2c      	ldr	r3, [pc, #176]	; (46c <HandleEvent+0x18c>)
     3bc:	681b      	ldr	r3, [r3, #0]
     3be:	3301      	adds	r3, #1
     3c0:	4a2a      	ldr	r2, [pc, #168]	; (46c <HandleEvent+0x18c>)
     3c2:	6013      	str	r3, [r2, #0]
			}else{
			CurrentState = 0;
		}
		break;
     3c4:	e044      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     3c6:	4b28      	ldr	r3, [pc, #160]	; (468 <HandleEvent+0x188>)
     3c8:	2200      	movs	r2, #0
     3ca:	701a      	strb	r2, [r3, #0]
		break;
     3cc:	e040      	b.n	450 <HandleEvent+0x170>
		case 5:
		if(number == 0){
     3ce:	687b      	ldr	r3, [r7, #4]
     3d0:	2b00      	cmp	r3, #0
     3d2:	d103      	bne.n	3dc <HandleEvent+0xfc>
			CurrentState = 1;
     3d4:	4b24      	ldr	r3, [pc, #144]	; (468 <HandleEvent+0x188>)
     3d6:	2201      	movs	r2, #1
     3d8:	701a      	strb	r2, [r3, #0]
		else if(number == 4){
			CurrentState = 2;
			}else{
			CurrentState = 0;
		}
		break;
     3da:	e039      	b.n	450 <HandleEvent+0x170>
		else if(number == 4){
     3dc:	687b      	ldr	r3, [r7, #4]
     3de:	2b04      	cmp	r3, #4
     3e0:	d103      	bne.n	3ea <HandleEvent+0x10a>
			CurrentState = 2;
     3e2:	4b21      	ldr	r3, [pc, #132]	; (468 <HandleEvent+0x188>)
     3e4:	2202      	movs	r2, #2
     3e6:	701a      	strb	r2, [r3, #0]
		break;
     3e8:	e032      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     3ea:	4b1f      	ldr	r3, [pc, #124]	; (468 <HandleEvent+0x188>)
     3ec:	2200      	movs	r2, #0
     3ee:	701a      	strb	r2, [r3, #0]
		break;
     3f0:	e02e      	b.n	450 <HandleEvent+0x170>
		case 6:
		if(number == down_pattern[3]){
     3f2:	697a      	ldr	r2, [r7, #20]
     3f4:	687b      	ldr	r3, [r7, #4]
     3f6:	429a      	cmp	r2, r3
     3f8:	d103      	bne.n	402 <HandleEvent+0x122>
			CurrentState = 7;
     3fa:	4b1b      	ldr	r3, [pc, #108]	; (468 <HandleEvent+0x188>)
     3fc:	2207      	movs	r2, #7
     3fe:	701a      	strb	r2, [r3, #0]
			}else{
			CurrentState = 0;
		}
		break;
     400:	e026      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     402:	4b19      	ldr	r3, [pc, #100]	; (468 <HandleEvent+0x188>)
     404:	2200      	movs	r2, #0
     406:	701a      	strb	r2, [r3, #0]
		break;
     408:	e022      	b.n	450 <HandleEvent+0x170>
		case 7:
		if(number == down_pattern[4]){
     40a:	69ba      	ldr	r2, [r7, #24]
     40c:	687b      	ldr	r3, [r7, #4]
     40e:	429a      	cmp	r2, r3
     410:	d108      	bne.n	424 <HandleEvent+0x144>
			CurrentState = 8;
     412:	4b15      	ldr	r3, [pc, #84]	; (468 <HandleEvent+0x188>)
     414:	2208      	movs	r2, #8
     416:	701a      	strb	r2, [r3, #0]
			count -= 1;
     418:	4b14      	ldr	r3, [pc, #80]	; (46c <HandleEvent+0x18c>)
     41a:	681b      	ldr	r3, [r3, #0]
     41c:	3b01      	subs	r3, #1
     41e:	4a13      	ldr	r2, [pc, #76]	; (46c <HandleEvent+0x18c>)
     420:	6013      	str	r3, [r2, #0]
		}
		else{
			CurrentState = 0;
		}
		break;
     422:	e015      	b.n	450 <HandleEvent+0x170>
			CurrentState = 0;
     424:	4b10      	ldr	r3, [pc, #64]	; (468 <HandleEvent+0x188>)
     426:	2200      	movs	r2, #0
     428:	701a      	strb	r2, [r3, #0]
		break;
     42a:	e011      	b.n	450 <HandleEvent+0x170>
		case 8:
		if(number == 0){
     42c:	687b      	ldr	r3, [r7, #4]
     42e:	2b00      	cmp	r3, #0
     430:	d103      	bne.n	43a <HandleEvent+0x15a>
			CurrentState = 1;
     432:	4b0d      	ldr	r3, [pc, #52]	; (468 <HandleEvent+0x188>)
     434:	2201      	movs	r2, #1
     436:	701a      	strb	r2, [r3, #0]
		else if(number == 4){
			CurrentState = 2;
			}else{
			CurrentState = 0;
		}
		break;
     438:	e009      	b.n	44e <HandleEvent+0x16e>
		else if(number == 4){
     43a:	687b      	ldr	r3, [r7, #4]
     43c:	2b04      	cmp	r3, #4
     43e:	d103      	bne.n	448 <HandleEvent+0x168>
			CurrentState = 2;
     440:	4b09      	ldr	r3, [pc, #36]	; (468 <HandleEvent+0x188>)
     442:	2202      	movs	r2, #2
     444:	701a      	strb	r2, [r3, #0]
		break;
     446:	e002      	b.n	44e <HandleEvent+0x16e>
			CurrentState = 0;
     448:	4b07      	ldr	r3, [pc, #28]	; (468 <HandleEvent+0x188>)
     44a:	2200      	movs	r2, #0
     44c:	701a      	strb	r2, [r3, #0]
		break;
     44e:	bf00      	nop
	}
	return count;
     450:	4b06      	ldr	r3, [pc, #24]	; (46c <HandleEvent+0x18c>)
     452:	681b      	ldr	r3, [r3, #0]
}
     454:	4618      	mov	r0, r3
     456:	3734      	adds	r7, #52	; 0x34
     458:	46bd      	mov	sp, r7
     45a:	bcb0      	pop	{r4, r5, r7}
     45c:	4770      	bx	lr
     45e:	bf00      	nop
     460:	00002a48 	.word	0x00002a48
     464:	00002a5c 	.word	0x00002a5c
     468:	20000048 	.word	0x20000048
     46c:	2000004c 	.word	0x2000004c

00000470 <edge_detector>:

bool edge_detector(void){
     470:	b480      	push	{r7}
     472:	b083      	sub	sp, #12
     474:	af00      	add	r7, sp, #0

	static char clock_state = 0;
	bool edge_input = (PORT->Group[SW0/32].IN.reg & (1<<(SW0%32)));
     476:	4b1f      	ldr	r3, [pc, #124]	; (4f4 <edge_detector+0x84>)
     478:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
     47c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
     480:	2b00      	cmp	r3, #0
     482:	bf14      	ite	ne
     484:	2301      	movne	r3, #1
     486:	2300      	moveq	r3, #0
     488:	71bb      	strb	r3, [r7, #6]
	
	bool edge_detected = 0;
     48a:	2300      	movs	r3, #0
     48c:	71fb      	strb	r3, [r7, #7]
	
	
	switch(clock_state){
     48e:	4b1a      	ldr	r3, [pc, #104]	; (4f8 <edge_detector+0x88>)
     490:	781b      	ldrb	r3, [r3, #0]
     492:	2b00      	cmp	r3, #0
     494:	d002      	beq.n	49c <edge_detector+0x2c>
     496:	2b01      	cmp	r3, #1
     498:	d012      	beq.n	4c0 <edge_detector+0x50>
     49a:	e023      	b.n	4e4 <edge_detector+0x74>
		case 0:
		if(edge_input == 0){
     49c:	79bb      	ldrb	r3, [r7, #6]
     49e:	f083 0301 	eor.w	r3, r3, #1
     4a2:	b2db      	uxtb	r3, r3
     4a4:	2b00      	cmp	r3, #0
     4a6:	d005      	beq.n	4b4 <edge_detector+0x44>
			clock_state = 1;
     4a8:	4b13      	ldr	r3, [pc, #76]	; (4f8 <edge_detector+0x88>)
     4aa:	2201      	movs	r2, #1
     4ac:	701a      	strb	r2, [r3, #0]
			edge_detected = 1;
     4ae:	2301      	movs	r3, #1
     4b0:	71fb      	strb	r3, [r7, #7]
			}else{
			clock_state = 0;
			edge_detected = 0;
		}
		break;
     4b2:	e017      	b.n	4e4 <edge_detector+0x74>
			clock_state = 0;
     4b4:	4b10      	ldr	r3, [pc, #64]	; (4f8 <edge_detector+0x88>)
     4b6:	2200      	movs	r2, #0
     4b8:	701a      	strb	r2, [r3, #0]
			edge_detected = 0;
     4ba:	2300      	movs	r3, #0
     4bc:	71fb      	strb	r3, [r7, #7]
		break;
     4be:	e011      	b.n	4e4 <edge_detector+0x74>
		case 1:
		if(edge_input == 0){
     4c0:	79bb      	ldrb	r3, [r7, #6]
     4c2:	f083 0301 	eor.w	r3, r3, #1
     4c6:	b2db      	uxtb	r3, r3
     4c8:	2b00      	cmp	r3, #0
     4ca:	d005      	beq.n	4d8 <edge_detector+0x68>
			clock_state = 1;
     4cc:	4b0a      	ldr	r3, [pc, #40]	; (4f8 <edge_detector+0x88>)
     4ce:	2201      	movs	r2, #1
     4d0:	701a      	strb	r2, [r3, #0]
			edge_detected = 0;
     4d2:	2300      	movs	r3, #0
     4d4:	71fb      	strb	r3, [r7, #7]
			}else{
			clock_state = 0;
			edge_detected = 0;
		}
		break;
     4d6:	e004      	b.n	4e2 <edge_detector+0x72>
			clock_state = 0;
     4d8:	4b07      	ldr	r3, [pc, #28]	; (4f8 <edge_detector+0x88>)
     4da:	2200      	movs	r2, #0
     4dc:	701a      	strb	r2, [r3, #0]
			edge_detected = 0;
     4de:	2300      	movs	r3, #0
     4e0:	71fb      	strb	r3, [r7, #7]
		break;
     4e2:	bf00      	nop
	}
	return edge_detected;
     4e4:	79fb      	ldrb	r3, [r7, #7]
     4e6:	4618      	mov	r0, r3
     4e8:	370c      	adds	r7, #12
     4ea:	46bd      	mov	sp, r7
     4ec:	f85d 7b04 	ldr.w	r7, [sp], #4
     4f0:	4770      	bx	lr
     4f2:	bf00      	nop
     4f4:	41008000 	.word	0x41008000
     4f8:	20000050 	.word	0x20000050

000004fc <Reset_Handler>:
     4fc:	b580      	push	{r7, lr}
     4fe:	b082      	sub	sp, #8
     500:	af00      	add	r7, sp, #0
     502:	4b1c      	ldr	r3, [pc, #112]	; (574 <Reset_Handler+0x78>)
     504:	607b      	str	r3, [r7, #4]
     506:	4b1c      	ldr	r3, [pc, #112]	; (578 <Reset_Handler+0x7c>)
     508:	603b      	str	r3, [r7, #0]
     50a:	687a      	ldr	r2, [r7, #4]
     50c:	683b      	ldr	r3, [r7, #0]
     50e:	429a      	cmp	r2, r3
     510:	d00c      	beq.n	52c <Reset_Handler+0x30>
     512:	e007      	b.n	524 <Reset_Handler+0x28>
     514:	683b      	ldr	r3, [r7, #0]
     516:	1d1a      	adds	r2, r3, #4
     518:	603a      	str	r2, [r7, #0]
     51a:	687a      	ldr	r2, [r7, #4]
     51c:	1d11      	adds	r1, r2, #4
     51e:	6079      	str	r1, [r7, #4]
     520:	6812      	ldr	r2, [r2, #0]
     522:	601a      	str	r2, [r3, #0]
     524:	683b      	ldr	r3, [r7, #0]
     526:	4a15      	ldr	r2, [pc, #84]	; (57c <Reset_Handler+0x80>)
     528:	4293      	cmp	r3, r2
     52a:	d3f3      	bcc.n	514 <Reset_Handler+0x18>
     52c:	4b14      	ldr	r3, [pc, #80]	; (580 <Reset_Handler+0x84>)
     52e:	603b      	str	r3, [r7, #0]
     530:	e004      	b.n	53c <Reset_Handler+0x40>
     532:	683b      	ldr	r3, [r7, #0]
     534:	1d1a      	adds	r2, r3, #4
     536:	603a      	str	r2, [r7, #0]
     538:	2200      	movs	r2, #0
     53a:	601a      	str	r2, [r3, #0]
     53c:	683b      	ldr	r3, [r7, #0]
     53e:	4a11      	ldr	r2, [pc, #68]	; (584 <Reset_Handler+0x88>)
     540:	4293      	cmp	r3, r2
     542:	d3f6      	bcc.n	532 <Reset_Handler+0x36>
     544:	4b10      	ldr	r3, [pc, #64]	; (588 <Reset_Handler+0x8c>)
     546:	607b      	str	r3, [r7, #4]
     548:	4a10      	ldr	r2, [pc, #64]	; (58c <Reset_Handler+0x90>)
     54a:	687b      	ldr	r3, [r7, #4]
     54c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
     550:	6093      	str	r3, [r2, #8]
     552:	4a0e      	ldr	r2, [pc, #56]	; (58c <Reset_Handler+0x90>)
     554:	4b0d      	ldr	r3, [pc, #52]	; (58c <Reset_Handler+0x90>)
     556:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
     55a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
     55e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     562:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     566:	f3bf 8f6f 	isb	sy
     56a:	4b09      	ldr	r3, [pc, #36]	; (590 <Reset_Handler+0x94>)
     56c:	4798      	blx	r3
     56e:	4b09      	ldr	r3, [pc, #36]	; (594 <Reset_Handler+0x98>)
     570:	4798      	blx	r3
     572:	e7fe      	b.n	572 <Reset_Handler+0x76>
     574:	00002bb4 	.word	0x00002bb4
     578:	20000000 	.word	0x20000000
     57c:	2000002c 	.word	0x2000002c
     580:	2000002c 	.word	0x2000002c
     584:	200000b4 	.word	0x200000b4
     588:	00000000 	.word	0x00000000
     58c:	e000ed00 	.word	0xe000ed00
     590:	00002a01 	.word	0x00002a01
     594:	00002749 	.word	0x00002749

00000598 <Dummy_Handler>:
     598:	b480      	push	{r7}
     59a:	af00      	add	r7, sp, #0
     59c:	e7fe      	b.n	59c <Dummy_Handler+0x4>

0000059e <hri_gclk_write_PCHCTRL_reg>:
     59e:	b480      	push	{r7}
     5a0:	b085      	sub	sp, #20
     5a2:	af00      	add	r7, sp, #0
     5a4:	60f8      	str	r0, [r7, #12]
     5a6:	460b      	mov	r3, r1
     5a8:	607a      	str	r2, [r7, #4]
     5aa:	72fb      	strb	r3, [r7, #11]
     5ac:	7afa      	ldrb	r2, [r7, #11]
     5ae:	68fb      	ldr	r3, [r7, #12]
     5b0:	3220      	adds	r2, #32
     5b2:	6879      	ldr	r1, [r7, #4]
     5b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
     5b8:	bf00      	nop
     5ba:	3714      	adds	r7, #20
     5bc:	46bd      	mov	sp, r7
     5be:	f85d 7b04 	ldr.w	r7, [sp], #4
     5c2:	4770      	bx	lr

000005c4 <hri_mclk_set_APBAMASK_RTC_bit>:
     5c4:	b480      	push	{r7}
     5c6:	b083      	sub	sp, #12
     5c8:	af00      	add	r7, sp, #0
     5ca:	6078      	str	r0, [r7, #4]
     5cc:	687b      	ldr	r3, [r7, #4]
     5ce:	695b      	ldr	r3, [r3, #20]
     5d0:	f443 7200 	orr.w	r2, r3, #512	; 0x200
     5d4:	687b      	ldr	r3, [r7, #4]
     5d6:	615a      	str	r2, [r3, #20]
     5d8:	bf00      	nop
     5da:	370c      	adds	r7, #12
     5dc:	46bd      	mov	sp, r7
     5de:	f85d 7b04 	ldr.w	r7, [sp], #4
     5e2:	4770      	bx	lr

000005e4 <hri_mclk_set_APBAMASK_SERCOM0_bit>:
     5e4:	b480      	push	{r7}
     5e6:	b083      	sub	sp, #12
     5e8:	af00      	add	r7, sp, #0
     5ea:	6078      	str	r0, [r7, #4]
     5ec:	687b      	ldr	r3, [r7, #4]
     5ee:	695b      	ldr	r3, [r3, #20]
     5f0:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
     5f4:	687b      	ldr	r3, [r7, #4]
     5f6:	615a      	str	r2, [r3, #20]
     5f8:	bf00      	nop
     5fa:	370c      	adds	r7, #12
     5fc:	46bd      	mov	sp, r7
     5fe:	f85d 7b04 	ldr.w	r7, [sp], #4
     602:	4770      	bx	lr

00000604 <hri_mclk_set_APBAMASK_TC0_bit>:
     604:	b480      	push	{r7}
     606:	b083      	sub	sp, #12
     608:	af00      	add	r7, sp, #0
     60a:	6078      	str	r0, [r7, #4]
     60c:	687b      	ldr	r3, [r7, #4]
     60e:	695b      	ldr	r3, [r3, #20]
     610:	f443 4280 	orr.w	r2, r3, #16384	; 0x4000
     614:	687b      	ldr	r3, [r7, #4]
     616:	615a      	str	r2, [r3, #20]
     618:	bf00      	nop
     61a:	370c      	adds	r7, #12
     61c:	46bd      	mov	sp, r7
     61e:	f85d 7b04 	ldr.w	r7, [sp], #4
     622:	4770      	bx	lr

00000624 <hri_port_set_DIR_reg>:
     624:	b480      	push	{r7}
     626:	b085      	sub	sp, #20
     628:	af00      	add	r7, sp, #0
     62a:	60f8      	str	r0, [r7, #12]
     62c:	460b      	mov	r3, r1
     62e:	607a      	str	r2, [r7, #4]
     630:	72fb      	strb	r3, [r7, #11]
     632:	7afb      	ldrb	r3, [r7, #11]
     634:	68fa      	ldr	r2, [r7, #12]
     636:	01db      	lsls	r3, r3, #7
     638:	4413      	add	r3, r2
     63a:	3308      	adds	r3, #8
     63c:	687a      	ldr	r2, [r7, #4]
     63e:	601a      	str	r2, [r3, #0]
     640:	bf00      	nop
     642:	3714      	adds	r7, #20
     644:	46bd      	mov	sp, r7
     646:	f85d 7b04 	ldr.w	r7, [sp], #4
     64a:	4770      	bx	lr

0000064c <hri_port_clear_DIR_reg>:
     64c:	b480      	push	{r7}
     64e:	b085      	sub	sp, #20
     650:	af00      	add	r7, sp, #0
     652:	60f8      	str	r0, [r7, #12]
     654:	460b      	mov	r3, r1
     656:	607a      	str	r2, [r7, #4]
     658:	72fb      	strb	r3, [r7, #11]
     65a:	7afb      	ldrb	r3, [r7, #11]
     65c:	68fa      	ldr	r2, [r7, #12]
     65e:	01db      	lsls	r3, r3, #7
     660:	4413      	add	r3, r2
     662:	3304      	adds	r3, #4
     664:	687a      	ldr	r2, [r7, #4]
     666:	601a      	str	r2, [r3, #0]
     668:	bf00      	nop
     66a:	3714      	adds	r7, #20
     66c:	46bd      	mov	sp, r7
     66e:	f85d 7b04 	ldr.w	r7, [sp], #4
     672:	4770      	bx	lr

00000674 <hri_port_set_OUT_reg>:
     674:	b480      	push	{r7}
     676:	b085      	sub	sp, #20
     678:	af00      	add	r7, sp, #0
     67a:	60f8      	str	r0, [r7, #12]
     67c:	460b      	mov	r3, r1
     67e:	607a      	str	r2, [r7, #4]
     680:	72fb      	strb	r3, [r7, #11]
     682:	7afb      	ldrb	r3, [r7, #11]
     684:	68fa      	ldr	r2, [r7, #12]
     686:	01db      	lsls	r3, r3, #7
     688:	4413      	add	r3, r2
     68a:	3318      	adds	r3, #24
     68c:	687a      	ldr	r2, [r7, #4]
     68e:	601a      	str	r2, [r3, #0]
     690:	bf00      	nop
     692:	3714      	adds	r7, #20
     694:	46bd      	mov	sp, r7
     696:	f85d 7b04 	ldr.w	r7, [sp], #4
     69a:	4770      	bx	lr

0000069c <hri_port_clear_OUT_reg>:
     69c:	b480      	push	{r7}
     69e:	b085      	sub	sp, #20
     6a0:	af00      	add	r7, sp, #0
     6a2:	60f8      	str	r0, [r7, #12]
     6a4:	460b      	mov	r3, r1
     6a6:	607a      	str	r2, [r7, #4]
     6a8:	72fb      	strb	r3, [r7, #11]
     6aa:	7afb      	ldrb	r3, [r7, #11]
     6ac:	68fa      	ldr	r2, [r7, #12]
     6ae:	01db      	lsls	r3, r3, #7
     6b0:	4413      	add	r3, r2
     6b2:	3314      	adds	r3, #20
     6b4:	687a      	ldr	r2, [r7, #4]
     6b6:	601a      	str	r2, [r3, #0]
     6b8:	bf00      	nop
     6ba:	3714      	adds	r7, #20
     6bc:	46bd      	mov	sp, r7
     6be:	f85d 7b04 	ldr.w	r7, [sp], #4
     6c2:	4770      	bx	lr

000006c4 <hri_port_write_PMUX_PMUXE_bf>:
     6c4:	b480      	push	{r7}
     6c6:	b085      	sub	sp, #20
     6c8:	af00      	add	r7, sp, #0
     6ca:	6078      	str	r0, [r7, #4]
     6cc:	4608      	mov	r0, r1
     6ce:	4611      	mov	r1, r2
     6d0:	461a      	mov	r2, r3
     6d2:	4603      	mov	r3, r0
     6d4:	70fb      	strb	r3, [r7, #3]
     6d6:	460b      	mov	r3, r1
     6d8:	70bb      	strb	r3, [r7, #2]
     6da:	4613      	mov	r3, r2
     6dc:	707b      	strb	r3, [r7, #1]
     6de:	78fa      	ldrb	r2, [r7, #3]
     6e0:	78bb      	ldrb	r3, [r7, #2]
     6e2:	6879      	ldr	r1, [r7, #4]
     6e4:	01d2      	lsls	r2, r2, #7
     6e6:	440a      	add	r2, r1
     6e8:	4413      	add	r3, r2
     6ea:	3330      	adds	r3, #48	; 0x30
     6ec:	781b      	ldrb	r3, [r3, #0]
     6ee:	73fb      	strb	r3, [r7, #15]
     6f0:	7bfb      	ldrb	r3, [r7, #15]
     6f2:	f023 030f 	bic.w	r3, r3, #15
     6f6:	73fb      	strb	r3, [r7, #15]
     6f8:	787b      	ldrb	r3, [r7, #1]
     6fa:	f003 030f 	and.w	r3, r3, #15
     6fe:	b2da      	uxtb	r2, r3
     700:	7bfb      	ldrb	r3, [r7, #15]
     702:	4313      	orrs	r3, r2
     704:	73fb      	strb	r3, [r7, #15]
     706:	78fa      	ldrb	r2, [r7, #3]
     708:	78bb      	ldrb	r3, [r7, #2]
     70a:	6879      	ldr	r1, [r7, #4]
     70c:	01d2      	lsls	r2, r2, #7
     70e:	440a      	add	r2, r1
     710:	4413      	add	r3, r2
     712:	3330      	adds	r3, #48	; 0x30
     714:	7bfa      	ldrb	r2, [r7, #15]
     716:	701a      	strb	r2, [r3, #0]
     718:	bf00      	nop
     71a:	3714      	adds	r7, #20
     71c:	46bd      	mov	sp, r7
     71e:	f85d 7b04 	ldr.w	r7, [sp], #4
     722:	4770      	bx	lr

00000724 <hri_port_write_PMUX_PMUXO_bf>:
     724:	b480      	push	{r7}
     726:	b085      	sub	sp, #20
     728:	af00      	add	r7, sp, #0
     72a:	6078      	str	r0, [r7, #4]
     72c:	4608      	mov	r0, r1
     72e:	4611      	mov	r1, r2
     730:	461a      	mov	r2, r3
     732:	4603      	mov	r3, r0
     734:	70fb      	strb	r3, [r7, #3]
     736:	460b      	mov	r3, r1
     738:	70bb      	strb	r3, [r7, #2]
     73a:	4613      	mov	r3, r2
     73c:	707b      	strb	r3, [r7, #1]
     73e:	78fa      	ldrb	r2, [r7, #3]
     740:	78bb      	ldrb	r3, [r7, #2]
     742:	6879      	ldr	r1, [r7, #4]
     744:	01d2      	lsls	r2, r2, #7
     746:	440a      	add	r2, r1
     748:	4413      	add	r3, r2
     74a:	3330      	adds	r3, #48	; 0x30
     74c:	781b      	ldrb	r3, [r3, #0]
     74e:	73fb      	strb	r3, [r7, #15]
     750:	7bfb      	ldrb	r3, [r7, #15]
     752:	f003 030f 	and.w	r3, r3, #15
     756:	73fb      	strb	r3, [r7, #15]
     758:	787b      	ldrb	r3, [r7, #1]
     75a:	011b      	lsls	r3, r3, #4
     75c:	b2da      	uxtb	r2, r3
     75e:	7bfb      	ldrb	r3, [r7, #15]
     760:	4313      	orrs	r3, r2
     762:	73fb      	strb	r3, [r7, #15]
     764:	78fa      	ldrb	r2, [r7, #3]
     766:	78bb      	ldrb	r3, [r7, #2]
     768:	6879      	ldr	r1, [r7, #4]
     76a:	01d2      	lsls	r2, r2, #7
     76c:	440a      	add	r2, r1
     76e:	4413      	add	r3, r2
     770:	3330      	adds	r3, #48	; 0x30
     772:	7bfa      	ldrb	r2, [r7, #15]
     774:	701a      	strb	r2, [r3, #0]
     776:	bf00      	nop
     778:	3714      	adds	r7, #20
     77a:	46bd      	mov	sp, r7
     77c:	f85d 7b04 	ldr.w	r7, [sp], #4
     780:	4770      	bx	lr

00000782 <hri_port_write_PINCFG_PMUXEN_bit>:
     782:	b480      	push	{r7}
     784:	b085      	sub	sp, #20
     786:	af00      	add	r7, sp, #0
     788:	6078      	str	r0, [r7, #4]
     78a:	4608      	mov	r0, r1
     78c:	4611      	mov	r1, r2
     78e:	461a      	mov	r2, r3
     790:	4603      	mov	r3, r0
     792:	70fb      	strb	r3, [r7, #3]
     794:	460b      	mov	r3, r1
     796:	70bb      	strb	r3, [r7, #2]
     798:	4613      	mov	r3, r2
     79a:	707b      	strb	r3, [r7, #1]
     79c:	78fa      	ldrb	r2, [r7, #3]
     79e:	78bb      	ldrb	r3, [r7, #2]
     7a0:	6879      	ldr	r1, [r7, #4]
     7a2:	01d2      	lsls	r2, r2, #7
     7a4:	440a      	add	r2, r1
     7a6:	4413      	add	r3, r2
     7a8:	3340      	adds	r3, #64	; 0x40
     7aa:	781b      	ldrb	r3, [r3, #0]
     7ac:	73fb      	strb	r3, [r7, #15]
     7ae:	7bfb      	ldrb	r3, [r7, #15]
     7b0:	f023 0301 	bic.w	r3, r3, #1
     7b4:	73fb      	strb	r3, [r7, #15]
     7b6:	787a      	ldrb	r2, [r7, #1]
     7b8:	7bfb      	ldrb	r3, [r7, #15]
     7ba:	4313      	orrs	r3, r2
     7bc:	73fb      	strb	r3, [r7, #15]
     7be:	78fa      	ldrb	r2, [r7, #3]
     7c0:	78bb      	ldrb	r3, [r7, #2]
     7c2:	6879      	ldr	r1, [r7, #4]
     7c4:	01d2      	lsls	r2, r2, #7
     7c6:	440a      	add	r2, r1
     7c8:	4413      	add	r3, r2
     7ca:	3340      	adds	r3, #64	; 0x40
     7cc:	7bfa      	ldrb	r2, [r7, #15]
     7ce:	701a      	strb	r2, [r3, #0]
     7d0:	bf00      	nop
     7d2:	3714      	adds	r7, #20
     7d4:	46bd      	mov	sp, r7
     7d6:	f85d 7b04 	ldr.w	r7, [sp], #4
     7da:	4770      	bx	lr

000007dc <hri_port_set_PINCFG_PULLEN_bit>:
     7dc:	b490      	push	{r4, r7}
     7de:	b082      	sub	sp, #8
     7e0:	af00      	add	r7, sp, #0
     7e2:	6078      	str	r0, [r7, #4]
     7e4:	460b      	mov	r3, r1
     7e6:	70fb      	strb	r3, [r7, #3]
     7e8:	4613      	mov	r3, r2
     7ea:	70bb      	strb	r3, [r7, #2]
     7ec:	78fa      	ldrb	r2, [r7, #3]
     7ee:	78bb      	ldrb	r3, [r7, #2]
     7f0:	78f8      	ldrb	r0, [r7, #3]
     7f2:	78b9      	ldrb	r1, [r7, #2]
     7f4:	687c      	ldr	r4, [r7, #4]
     7f6:	01c0      	lsls	r0, r0, #7
     7f8:	4420      	add	r0, r4
     7fa:	4401      	add	r1, r0
     7fc:	3140      	adds	r1, #64	; 0x40
     7fe:	7809      	ldrb	r1, [r1, #0]
     800:	b2c9      	uxtb	r1, r1
     802:	f041 0104 	orr.w	r1, r1, #4
     806:	b2c8      	uxtb	r0, r1
     808:	6879      	ldr	r1, [r7, #4]
     80a:	01d2      	lsls	r2, r2, #7
     80c:	440a      	add	r2, r1
     80e:	4413      	add	r3, r2
     810:	3340      	adds	r3, #64	; 0x40
     812:	4602      	mov	r2, r0
     814:	701a      	strb	r2, [r3, #0]
     816:	bf00      	nop
     818:	3708      	adds	r7, #8
     81a:	46bd      	mov	sp, r7
     81c:	bc90      	pop	{r4, r7}
     81e:	4770      	bx	lr

00000820 <hri_port_clear_PINCFG_PULLEN_bit>:
     820:	b490      	push	{r4, r7}
     822:	b082      	sub	sp, #8
     824:	af00      	add	r7, sp, #0
     826:	6078      	str	r0, [r7, #4]
     828:	460b      	mov	r3, r1
     82a:	70fb      	strb	r3, [r7, #3]
     82c:	4613      	mov	r3, r2
     82e:	70bb      	strb	r3, [r7, #2]
     830:	78fa      	ldrb	r2, [r7, #3]
     832:	78bb      	ldrb	r3, [r7, #2]
     834:	78f8      	ldrb	r0, [r7, #3]
     836:	78b9      	ldrb	r1, [r7, #2]
     838:	687c      	ldr	r4, [r7, #4]
     83a:	01c0      	lsls	r0, r0, #7
     83c:	4420      	add	r0, r4
     83e:	4401      	add	r1, r0
     840:	3140      	adds	r1, #64	; 0x40
     842:	7809      	ldrb	r1, [r1, #0]
     844:	b2c9      	uxtb	r1, r1
     846:	f021 0104 	bic.w	r1, r1, #4
     84a:	b2c8      	uxtb	r0, r1
     84c:	6879      	ldr	r1, [r7, #4]
     84e:	01d2      	lsls	r2, r2, #7
     850:	440a      	add	r2, r1
     852:	4413      	add	r3, r2
     854:	3340      	adds	r3, #64	; 0x40
     856:	4602      	mov	r2, r0
     858:	701a      	strb	r2, [r3, #0]
     85a:	bf00      	nop
     85c:	3708      	adds	r7, #8
     85e:	46bd      	mov	sp, r7
     860:	bc90      	pop	{r4, r7}
     862:	4770      	bx	lr

00000864 <hri_port_write_WRCONFIG_reg>:
     864:	b480      	push	{r7}
     866:	b085      	sub	sp, #20
     868:	af00      	add	r7, sp, #0
     86a:	60f8      	str	r0, [r7, #12]
     86c:	460b      	mov	r3, r1
     86e:	607a      	str	r2, [r7, #4]
     870:	72fb      	strb	r3, [r7, #11]
     872:	7afb      	ldrb	r3, [r7, #11]
     874:	68fa      	ldr	r2, [r7, #12]
     876:	01db      	lsls	r3, r3, #7
     878:	4413      	add	r3, r2
     87a:	3328      	adds	r3, #40	; 0x28
     87c:	687a      	ldr	r2, [r7, #4]
     87e:	601a      	str	r2, [r3, #0]
     880:	bf00      	nop
     882:	3714      	adds	r7, #20
     884:	46bd      	mov	sp, r7
     886:	f85d 7b04 	ldr.w	r7, [sp], #4
     88a:	4770      	bx	lr

0000088c <_gpio_set_direction>:
     88c:	b580      	push	{r7, lr}
     88e:	b082      	sub	sp, #8
     890:	af00      	add	r7, sp, #0
     892:	4603      	mov	r3, r0
     894:	6039      	str	r1, [r7, #0]
     896:	71fb      	strb	r3, [r7, #7]
     898:	4613      	mov	r3, r2
     89a:	71bb      	strb	r3, [r7, #6]
     89c:	79bb      	ldrb	r3, [r7, #6]
     89e:	2b01      	cmp	r3, #1
     8a0:	d01c      	beq.n	8dc <_gpio_set_direction+0x50>
     8a2:	2b02      	cmp	r3, #2
     8a4:	d037      	beq.n	916 <_gpio_set_direction+0x8a>
     8a6:	2b00      	cmp	r3, #0
     8a8:	d14e      	bne.n	948 <_gpio_set_direction+0xbc>
     8aa:	79fb      	ldrb	r3, [r7, #7]
     8ac:	683a      	ldr	r2, [r7, #0]
     8ae:	4619      	mov	r1, r3
     8b0:	482a      	ldr	r0, [pc, #168]	; (95c <_gpio_set_direction+0xd0>)
     8b2:	4b2b      	ldr	r3, [pc, #172]	; (960 <_gpio_set_direction+0xd4>)
     8b4:	4798      	blx	r3
     8b6:	683b      	ldr	r3, [r7, #0]
     8b8:	b29b      	uxth	r3, r3
     8ba:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
     8be:	79fb      	ldrb	r3, [r7, #7]
     8c0:	4619      	mov	r1, r3
     8c2:	4826      	ldr	r0, [pc, #152]	; (95c <_gpio_set_direction+0xd0>)
     8c4:	4b27      	ldr	r3, [pc, #156]	; (964 <_gpio_set_direction+0xd8>)
     8c6:	4798      	blx	r3
     8c8:	683b      	ldr	r3, [r7, #0]
     8ca:	0c1b      	lsrs	r3, r3, #16
     8cc:	f043 4240 	orr.w	r2, r3, #3221225472	; 0xc0000000
     8d0:	79fb      	ldrb	r3, [r7, #7]
     8d2:	4619      	mov	r1, r3
     8d4:	4821      	ldr	r0, [pc, #132]	; (95c <_gpio_set_direction+0xd0>)
     8d6:	4b23      	ldr	r3, [pc, #140]	; (964 <_gpio_set_direction+0xd8>)
     8d8:	4798      	blx	r3
     8da:	e03a      	b.n	952 <_gpio_set_direction+0xc6>
     8dc:	79fb      	ldrb	r3, [r7, #7]
     8de:	683a      	ldr	r2, [r7, #0]
     8e0:	4619      	mov	r1, r3
     8e2:	481e      	ldr	r0, [pc, #120]	; (95c <_gpio_set_direction+0xd0>)
     8e4:	4b1e      	ldr	r3, [pc, #120]	; (960 <_gpio_set_direction+0xd4>)
     8e6:	4798      	blx	r3
     8e8:	683b      	ldr	r3, [r7, #0]
     8ea:	b29b      	uxth	r3, r3
     8ec:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
     8f0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
     8f4:	79f9      	ldrb	r1, [r7, #7]
     8f6:	461a      	mov	r2, r3
     8f8:	4818      	ldr	r0, [pc, #96]	; (95c <_gpio_set_direction+0xd0>)
     8fa:	4b1a      	ldr	r3, [pc, #104]	; (964 <_gpio_set_direction+0xd8>)
     8fc:	4798      	blx	r3
     8fe:	683b      	ldr	r3, [r7, #0]
     900:	0c1b      	lsrs	r3, r3, #16
     902:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
     906:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
     90a:	79f9      	ldrb	r1, [r7, #7]
     90c:	461a      	mov	r2, r3
     90e:	4813      	ldr	r0, [pc, #76]	; (95c <_gpio_set_direction+0xd0>)
     910:	4b14      	ldr	r3, [pc, #80]	; (964 <_gpio_set_direction+0xd8>)
     912:	4798      	blx	r3
     914:	e01d      	b.n	952 <_gpio_set_direction+0xc6>
     916:	79fb      	ldrb	r3, [r7, #7]
     918:	683a      	ldr	r2, [r7, #0]
     91a:	4619      	mov	r1, r3
     91c:	480f      	ldr	r0, [pc, #60]	; (95c <_gpio_set_direction+0xd0>)
     91e:	4b12      	ldr	r3, [pc, #72]	; (968 <_gpio_set_direction+0xdc>)
     920:	4798      	blx	r3
     922:	683b      	ldr	r3, [r7, #0]
     924:	b29b      	uxth	r3, r3
     926:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
     92a:	79fb      	ldrb	r3, [r7, #7]
     92c:	4619      	mov	r1, r3
     92e:	480b      	ldr	r0, [pc, #44]	; (95c <_gpio_set_direction+0xd0>)
     930:	4b0c      	ldr	r3, [pc, #48]	; (964 <_gpio_set_direction+0xd8>)
     932:	4798      	blx	r3
     934:	683b      	ldr	r3, [r7, #0]
     936:	0c1b      	lsrs	r3, r3, #16
     938:	f043 4240 	orr.w	r2, r3, #3221225472	; 0xc0000000
     93c:	79fb      	ldrb	r3, [r7, #7]
     93e:	4619      	mov	r1, r3
     940:	4806      	ldr	r0, [pc, #24]	; (95c <_gpio_set_direction+0xd0>)
     942:	4b08      	ldr	r3, [pc, #32]	; (964 <_gpio_set_direction+0xd8>)
     944:	4798      	blx	r3
     946:	e004      	b.n	952 <_gpio_set_direction+0xc6>
     948:	2246      	movs	r2, #70	; 0x46
     94a:	4908      	ldr	r1, [pc, #32]	; (96c <_gpio_set_direction+0xe0>)
     94c:	2000      	movs	r0, #0
     94e:	4b08      	ldr	r3, [pc, #32]	; (970 <_gpio_set_direction+0xe4>)
     950:	4798      	blx	r3
     952:	bf00      	nop
     954:	3708      	adds	r7, #8
     956:	46bd      	mov	sp, r7
     958:	bd80      	pop	{r7, pc}
     95a:	bf00      	nop
     95c:	41008000 	.word	0x41008000
     960:	0000064d 	.word	0x0000064d
     964:	00000865 	.word	0x00000865
     968:	00000625 	.word	0x00000625
     96c:	00002a70 	.word	0x00002a70
     970:	00001425 	.word	0x00001425

00000974 <_gpio_set_level>:
     974:	b580      	push	{r7, lr}
     976:	b082      	sub	sp, #8
     978:	af00      	add	r7, sp, #0
     97a:	4603      	mov	r3, r0
     97c:	6039      	str	r1, [r7, #0]
     97e:	71fb      	strb	r3, [r7, #7]
     980:	4613      	mov	r3, r2
     982:	71bb      	strb	r3, [r7, #6]
     984:	79bb      	ldrb	r3, [r7, #6]
     986:	2b00      	cmp	r3, #0
     988:	d006      	beq.n	998 <_gpio_set_level+0x24>
     98a:	79fb      	ldrb	r3, [r7, #7]
     98c:	683a      	ldr	r2, [r7, #0]
     98e:	4619      	mov	r1, r3
     990:	4806      	ldr	r0, [pc, #24]	; (9ac <_gpio_set_level+0x38>)
     992:	4b07      	ldr	r3, [pc, #28]	; (9b0 <_gpio_set_level+0x3c>)
     994:	4798      	blx	r3
     996:	e005      	b.n	9a4 <_gpio_set_level+0x30>
     998:	79fb      	ldrb	r3, [r7, #7]
     99a:	683a      	ldr	r2, [r7, #0]
     99c:	4619      	mov	r1, r3
     99e:	4803      	ldr	r0, [pc, #12]	; (9ac <_gpio_set_level+0x38>)
     9a0:	4b04      	ldr	r3, [pc, #16]	; (9b4 <_gpio_set_level+0x40>)
     9a2:	4798      	blx	r3
     9a4:	bf00      	nop
     9a6:	3708      	adds	r7, #8
     9a8:	46bd      	mov	sp, r7
     9aa:	bd80      	pop	{r7, pc}
     9ac:	41008000 	.word	0x41008000
     9b0:	00000675 	.word	0x00000675
     9b4:	0000069d 	.word	0x0000069d

000009b8 <_gpio_set_pin_pull_mode>:
     9b8:	b580      	push	{r7, lr}
     9ba:	b082      	sub	sp, #8
     9bc:	af00      	add	r7, sp, #0
     9be:	4603      	mov	r3, r0
     9c0:	71fb      	strb	r3, [r7, #7]
     9c2:	460b      	mov	r3, r1
     9c4:	71bb      	strb	r3, [r7, #6]
     9c6:	4613      	mov	r3, r2
     9c8:	717b      	strb	r3, [r7, #5]
     9ca:	797b      	ldrb	r3, [r7, #5]
     9cc:	2b01      	cmp	r3, #1
     9ce:	d00a      	beq.n	9e6 <_gpio_set_pin_pull_mode+0x2e>
     9d0:	2b02      	cmp	r3, #2
     9d2:	d01f      	beq.n	a14 <_gpio_set_pin_pull_mode+0x5c>
     9d4:	2b00      	cmp	r3, #0
     9d6:	d134      	bne.n	a42 <_gpio_set_pin_pull_mode+0x8a>
     9d8:	79ba      	ldrb	r2, [r7, #6]
     9da:	79fb      	ldrb	r3, [r7, #7]
     9dc:	4619      	mov	r1, r3
     9de:	481e      	ldr	r0, [pc, #120]	; (a58 <_gpio_set_pin_pull_mode+0xa0>)
     9e0:	4b1e      	ldr	r3, [pc, #120]	; (a5c <_gpio_set_pin_pull_mode+0xa4>)
     9e2:	4798      	blx	r3
     9e4:	e033      	b.n	a4e <_gpio_set_pin_pull_mode+0x96>
     9e6:	79bb      	ldrb	r3, [r7, #6]
     9e8:	2201      	movs	r2, #1
     9ea:	409a      	lsls	r2, r3
     9ec:	79fb      	ldrb	r3, [r7, #7]
     9ee:	4619      	mov	r1, r3
     9f0:	4819      	ldr	r0, [pc, #100]	; (a58 <_gpio_set_pin_pull_mode+0xa0>)
     9f2:	4b1b      	ldr	r3, [pc, #108]	; (a60 <_gpio_set_pin_pull_mode+0xa8>)
     9f4:	4798      	blx	r3
     9f6:	79ba      	ldrb	r2, [r7, #6]
     9f8:	79fb      	ldrb	r3, [r7, #7]
     9fa:	4619      	mov	r1, r3
     9fc:	4816      	ldr	r0, [pc, #88]	; (a58 <_gpio_set_pin_pull_mode+0xa0>)
     9fe:	4b19      	ldr	r3, [pc, #100]	; (a64 <_gpio_set_pin_pull_mode+0xac>)
     a00:	4798      	blx	r3
     a02:	79bb      	ldrb	r3, [r7, #6]
     a04:	2201      	movs	r2, #1
     a06:	409a      	lsls	r2, r3
     a08:	79fb      	ldrb	r3, [r7, #7]
     a0a:	4619      	mov	r1, r3
     a0c:	4812      	ldr	r0, [pc, #72]	; (a58 <_gpio_set_pin_pull_mode+0xa0>)
     a0e:	4b16      	ldr	r3, [pc, #88]	; (a68 <_gpio_set_pin_pull_mode+0xb0>)
     a10:	4798      	blx	r3
     a12:	e01c      	b.n	a4e <_gpio_set_pin_pull_mode+0x96>
     a14:	79bb      	ldrb	r3, [r7, #6]
     a16:	2201      	movs	r2, #1
     a18:	409a      	lsls	r2, r3
     a1a:	79fb      	ldrb	r3, [r7, #7]
     a1c:	4619      	mov	r1, r3
     a1e:	480e      	ldr	r0, [pc, #56]	; (a58 <_gpio_set_pin_pull_mode+0xa0>)
     a20:	4b0f      	ldr	r3, [pc, #60]	; (a60 <_gpio_set_pin_pull_mode+0xa8>)
     a22:	4798      	blx	r3
     a24:	79ba      	ldrb	r2, [r7, #6]
     a26:	79fb      	ldrb	r3, [r7, #7]
     a28:	4619      	mov	r1, r3
     a2a:	480b      	ldr	r0, [pc, #44]	; (a58 <_gpio_set_pin_pull_mode+0xa0>)
     a2c:	4b0d      	ldr	r3, [pc, #52]	; (a64 <_gpio_set_pin_pull_mode+0xac>)
     a2e:	4798      	blx	r3
     a30:	79bb      	ldrb	r3, [r7, #6]
     a32:	2201      	movs	r2, #1
     a34:	409a      	lsls	r2, r3
     a36:	79fb      	ldrb	r3, [r7, #7]
     a38:	4619      	mov	r1, r3
     a3a:	4807      	ldr	r0, [pc, #28]	; (a58 <_gpio_set_pin_pull_mode+0xa0>)
     a3c:	4b0b      	ldr	r3, [pc, #44]	; (a6c <_gpio_set_pin_pull_mode+0xb4>)
     a3e:	4798      	blx	r3
     a40:	e005      	b.n	a4e <_gpio_set_pin_pull_mode+0x96>
     a42:	2289      	movs	r2, #137	; 0x89
     a44:	490a      	ldr	r1, [pc, #40]	; (a70 <_gpio_set_pin_pull_mode+0xb8>)
     a46:	2000      	movs	r0, #0
     a48:	4b0a      	ldr	r3, [pc, #40]	; (a74 <_gpio_set_pin_pull_mode+0xbc>)
     a4a:	4798      	blx	r3
     a4c:	bf00      	nop
     a4e:	bf00      	nop
     a50:	3708      	adds	r7, #8
     a52:	46bd      	mov	sp, r7
     a54:	bd80      	pop	{r7, pc}
     a56:	bf00      	nop
     a58:	41008000 	.word	0x41008000
     a5c:	00000821 	.word	0x00000821
     a60:	0000064d 	.word	0x0000064d
     a64:	000007dd 	.word	0x000007dd
     a68:	00000675 	.word	0x00000675
     a6c:	0000069d 	.word	0x0000069d
     a70:	00002a70 	.word	0x00002a70
     a74:	00001425 	.word	0x00001425

00000a78 <_gpio_set_pin_function>:
     a78:	b590      	push	{r4, r7, lr}
     a7a:	b085      	sub	sp, #20
     a7c:	af00      	add	r7, sp, #0
     a7e:	6078      	str	r0, [r7, #4]
     a80:	6039      	str	r1, [r7, #0]
     a82:	687b      	ldr	r3, [r7, #4]
     a84:	095b      	lsrs	r3, r3, #5
     a86:	73fb      	strb	r3, [r7, #15]
     a88:	687b      	ldr	r3, [r7, #4]
     a8a:	b2db      	uxtb	r3, r3
     a8c:	f003 031f 	and.w	r3, r3, #31
     a90:	73bb      	strb	r3, [r7, #14]
     a92:	683b      	ldr	r3, [r7, #0]
     a94:	f1b3 3fff 	cmp.w	r3, #4294967295
     a98:	d106      	bne.n	aa8 <_gpio_set_pin_function+0x30>
     a9a:	7bba      	ldrb	r2, [r7, #14]
     a9c:	7bf9      	ldrb	r1, [r7, #15]
     a9e:	2300      	movs	r3, #0
     aa0:	4812      	ldr	r0, [pc, #72]	; (aec <_gpio_set_pin_function+0x74>)
     aa2:	4c13      	ldr	r4, [pc, #76]	; (af0 <_gpio_set_pin_function+0x78>)
     aa4:	47a0      	blx	r4
     aa6:	e01d      	b.n	ae4 <_gpio_set_pin_function+0x6c>
     aa8:	7bba      	ldrb	r2, [r7, #14]
     aaa:	7bf9      	ldrb	r1, [r7, #15]
     aac:	2301      	movs	r3, #1
     aae:	480f      	ldr	r0, [pc, #60]	; (aec <_gpio_set_pin_function+0x74>)
     ab0:	4c0f      	ldr	r4, [pc, #60]	; (af0 <_gpio_set_pin_function+0x78>)
     ab2:	47a0      	blx	r4
     ab4:	7bbb      	ldrb	r3, [r7, #14]
     ab6:	f003 0301 	and.w	r3, r3, #1
     aba:	2b00      	cmp	r3, #0
     abc:	d009      	beq.n	ad2 <_gpio_set_pin_function+0x5a>
     abe:	7bbb      	ldrb	r3, [r7, #14]
     ac0:	085b      	lsrs	r3, r3, #1
     ac2:	b2da      	uxtb	r2, r3
     ac4:	683b      	ldr	r3, [r7, #0]
     ac6:	b2db      	uxtb	r3, r3
     ac8:	7bf9      	ldrb	r1, [r7, #15]
     aca:	4808      	ldr	r0, [pc, #32]	; (aec <_gpio_set_pin_function+0x74>)
     acc:	4c09      	ldr	r4, [pc, #36]	; (af4 <_gpio_set_pin_function+0x7c>)
     ace:	47a0      	blx	r4
     ad0:	e008      	b.n	ae4 <_gpio_set_pin_function+0x6c>
     ad2:	7bbb      	ldrb	r3, [r7, #14]
     ad4:	085b      	lsrs	r3, r3, #1
     ad6:	b2da      	uxtb	r2, r3
     ad8:	683b      	ldr	r3, [r7, #0]
     ada:	b2db      	uxtb	r3, r3
     adc:	7bf9      	ldrb	r1, [r7, #15]
     ade:	4803      	ldr	r0, [pc, #12]	; (aec <_gpio_set_pin_function+0x74>)
     ae0:	4c05      	ldr	r4, [pc, #20]	; (af8 <_gpio_set_pin_function+0x80>)
     ae2:	47a0      	blx	r4
     ae4:	bf00      	nop
     ae6:	3714      	adds	r7, #20
     ae8:	46bd      	mov	sp, r7
     aea:	bd90      	pop	{r4, r7, pc}
     aec:	41008000 	.word	0x41008000
     af0:	00000783 	.word	0x00000783
     af4:	00000725 	.word	0x00000725
     af8:	000006c5 	.word	0x000006c5

00000afc <gpio_set_pin_pull_mode>:
     afc:	b580      	push	{r7, lr}
     afe:	b082      	sub	sp, #8
     b00:	af00      	add	r7, sp, #0
     b02:	4603      	mov	r3, r0
     b04:	460a      	mov	r2, r1
     b06:	71fb      	strb	r3, [r7, #7]
     b08:	4613      	mov	r3, r2
     b0a:	71bb      	strb	r3, [r7, #6]
     b0c:	79fb      	ldrb	r3, [r7, #7]
     b0e:	095b      	lsrs	r3, r3, #5
     b10:	b2d8      	uxtb	r0, r3
     b12:	79fb      	ldrb	r3, [r7, #7]
     b14:	f003 031f 	and.w	r3, r3, #31
     b18:	b2db      	uxtb	r3, r3
     b1a:	79ba      	ldrb	r2, [r7, #6]
     b1c:	4619      	mov	r1, r3
     b1e:	4b03      	ldr	r3, [pc, #12]	; (b2c <gpio_set_pin_pull_mode+0x30>)
     b20:	4798      	blx	r3
     b22:	bf00      	nop
     b24:	3708      	adds	r7, #8
     b26:	46bd      	mov	sp, r7
     b28:	bd80      	pop	{r7, pc}
     b2a:	bf00      	nop
     b2c:	000009b9 	.word	0x000009b9

00000b30 <gpio_set_pin_function>:
     b30:	b580      	push	{r7, lr}
     b32:	b082      	sub	sp, #8
     b34:	af00      	add	r7, sp, #0
     b36:	6078      	str	r0, [r7, #4]
     b38:	6039      	str	r1, [r7, #0]
     b3a:	6839      	ldr	r1, [r7, #0]
     b3c:	6878      	ldr	r0, [r7, #4]
     b3e:	4b03      	ldr	r3, [pc, #12]	; (b4c <gpio_set_pin_function+0x1c>)
     b40:	4798      	blx	r3
     b42:	bf00      	nop
     b44:	3708      	adds	r7, #8
     b46:	46bd      	mov	sp, r7
     b48:	bd80      	pop	{r7, pc}
     b4a:	bf00      	nop
     b4c:	00000a79 	.word	0x00000a79

00000b50 <gpio_set_pin_direction>:
     b50:	b580      	push	{r7, lr}
     b52:	b082      	sub	sp, #8
     b54:	af00      	add	r7, sp, #0
     b56:	4603      	mov	r3, r0
     b58:	460a      	mov	r2, r1
     b5a:	71fb      	strb	r3, [r7, #7]
     b5c:	4613      	mov	r3, r2
     b5e:	71bb      	strb	r3, [r7, #6]
     b60:	79fb      	ldrb	r3, [r7, #7]
     b62:	095b      	lsrs	r3, r3, #5
     b64:	b2d8      	uxtb	r0, r3
     b66:	79fb      	ldrb	r3, [r7, #7]
     b68:	f003 031f 	and.w	r3, r3, #31
     b6c:	2201      	movs	r2, #1
     b6e:	fa02 f303 	lsl.w	r3, r2, r3
     b72:	79ba      	ldrb	r2, [r7, #6]
     b74:	4619      	mov	r1, r3
     b76:	4b03      	ldr	r3, [pc, #12]	; (b84 <gpio_set_pin_direction+0x34>)
     b78:	4798      	blx	r3
     b7a:	bf00      	nop
     b7c:	3708      	adds	r7, #8
     b7e:	46bd      	mov	sp, r7
     b80:	bd80      	pop	{r7, pc}
     b82:	bf00      	nop
     b84:	0000088d 	.word	0x0000088d

00000b88 <gpio_set_pin_level>:
     b88:	b580      	push	{r7, lr}
     b8a:	b082      	sub	sp, #8
     b8c:	af00      	add	r7, sp, #0
     b8e:	4603      	mov	r3, r0
     b90:	460a      	mov	r2, r1
     b92:	71fb      	strb	r3, [r7, #7]
     b94:	4613      	mov	r3, r2
     b96:	71bb      	strb	r3, [r7, #6]
     b98:	79fb      	ldrb	r3, [r7, #7]
     b9a:	095b      	lsrs	r3, r3, #5
     b9c:	b2d8      	uxtb	r0, r3
     b9e:	79fb      	ldrb	r3, [r7, #7]
     ba0:	f003 031f 	and.w	r3, r3, #31
     ba4:	2201      	movs	r2, #1
     ba6:	fa02 f303 	lsl.w	r3, r2, r3
     baa:	79ba      	ldrb	r2, [r7, #6]
     bac:	4619      	mov	r1, r3
     bae:	4b03      	ldr	r3, [pc, #12]	; (bbc <gpio_set_pin_level+0x34>)
     bb0:	4798      	blx	r3
     bb2:	bf00      	nop
     bb4:	3708      	adds	r7, #8
     bb6:	46bd      	mov	sp, r7
     bb8:	bd80      	pop	{r7, pc}
     bba:	bf00      	nop
     bbc:	00000975 	.word	0x00000975

00000bc0 <init_mcu>:
     bc0:	b580      	push	{r7, lr}
     bc2:	af00      	add	r7, sp, #0
     bc4:	4b01      	ldr	r3, [pc, #4]	; (bcc <init_mcu+0xc>)
     bc6:	4798      	blx	r3
     bc8:	bf00      	nop
     bca:	bd80      	pop	{r7, pc}
     bcc:	00001565 	.word	0x00001565

00000bd0 <TIMER_0_init>:
     bd0:	b580      	push	{r7, lr}
     bd2:	af00      	add	r7, sp, #0
     bd4:	4806      	ldr	r0, [pc, #24]	; (bf0 <TIMER_0_init+0x20>)
     bd6:	4b07      	ldr	r3, [pc, #28]	; (bf4 <TIMER_0_init+0x24>)
     bd8:	4798      	blx	r3
     bda:	4b07      	ldr	r3, [pc, #28]	; (bf8 <TIMER_0_init+0x28>)
     bdc:	4798      	blx	r3
     bde:	4603      	mov	r3, r0
     be0:	461a      	mov	r2, r3
     be2:	4906      	ldr	r1, [pc, #24]	; (bfc <TIMER_0_init+0x2c>)
     be4:	4806      	ldr	r0, [pc, #24]	; (c00 <TIMER_0_init+0x30>)
     be6:	4b07      	ldr	r3, [pc, #28]	; (c04 <TIMER_0_init+0x34>)
     be8:	4798      	blx	r3
     bea:	bf00      	nop
     bec:	bd80      	pop	{r7, pc}
     bee:	bf00      	nop
     bf0:	40000800 	.word	0x40000800
     bf4:	000005c5 	.word	0x000005c5
     bf8:	00001a19 	.word	0x00001a19
     bfc:	40002400 	.word	0x40002400
     c00:	20000088 	.word	0x20000088
     c04:	0000108d 	.word	0x0000108d

00000c08 <USART_0_PORT_init>:
     c08:	b580      	push	{r7, lr}
     c0a:	af00      	add	r7, sp, #0
     c0c:	4904      	ldr	r1, [pc, #16]	; (c20 <USART_0_PORT_init+0x18>)
     c0e:	2004      	movs	r0, #4
     c10:	4b04      	ldr	r3, [pc, #16]	; (c24 <USART_0_PORT_init+0x1c>)
     c12:	4798      	blx	r3
     c14:	4904      	ldr	r1, [pc, #16]	; (c28 <USART_0_PORT_init+0x20>)
     c16:	2005      	movs	r0, #5
     c18:	4b02      	ldr	r3, [pc, #8]	; (c24 <USART_0_PORT_init+0x1c>)
     c1a:	4798      	blx	r3
     c1c:	bf00      	nop
     c1e:	bd80      	pop	{r7, pc}
     c20:	00040003 	.word	0x00040003
     c24:	00000b31 	.word	0x00000b31
     c28:	00050003 	.word	0x00050003

00000c2c <USART_0_CLOCK_init>:
     c2c:	b580      	push	{r7, lr}
     c2e:	af00      	add	r7, sp, #0
     c30:	2240      	movs	r2, #64	; 0x40
     c32:	2107      	movs	r1, #7
     c34:	4806      	ldr	r0, [pc, #24]	; (c50 <USART_0_CLOCK_init+0x24>)
     c36:	4b07      	ldr	r3, [pc, #28]	; (c54 <USART_0_CLOCK_init+0x28>)
     c38:	4798      	blx	r3
     c3a:	2243      	movs	r2, #67	; 0x43
     c3c:	2103      	movs	r1, #3
     c3e:	4804      	ldr	r0, [pc, #16]	; (c50 <USART_0_CLOCK_init+0x24>)
     c40:	4b04      	ldr	r3, [pc, #16]	; (c54 <USART_0_CLOCK_init+0x28>)
     c42:	4798      	blx	r3
     c44:	4804      	ldr	r0, [pc, #16]	; (c58 <USART_0_CLOCK_init+0x2c>)
     c46:	4b05      	ldr	r3, [pc, #20]	; (c5c <USART_0_CLOCK_init+0x30>)
     c48:	4798      	blx	r3
     c4a:	bf00      	nop
     c4c:	bd80      	pop	{r7, pc}
     c4e:	bf00      	nop
     c50:	40001c00 	.word	0x40001c00
     c54:	0000059f 	.word	0x0000059f
     c58:	40000800 	.word	0x40000800
     c5c:	000005e5 	.word	0x000005e5

00000c60 <USART_0_init>:
     c60:	b580      	push	{r7, lr}
     c62:	af00      	add	r7, sp, #0
     c64:	4b05      	ldr	r3, [pc, #20]	; (c7c <USART_0_init+0x1c>)
     c66:	4798      	blx	r3
     c68:	2200      	movs	r2, #0
     c6a:	4905      	ldr	r1, [pc, #20]	; (c80 <USART_0_init+0x20>)
     c6c:	4805      	ldr	r0, [pc, #20]	; (c84 <USART_0_init+0x24>)
     c6e:	4b06      	ldr	r3, [pc, #24]	; (c88 <USART_0_init+0x28>)
     c70:	4798      	blx	r3
     c72:	4b06      	ldr	r3, [pc, #24]	; (c8c <USART_0_init+0x2c>)
     c74:	4798      	blx	r3
     c76:	bf00      	nop
     c78:	bd80      	pop	{r7, pc}
     c7a:	bf00      	nop
     c7c:	00000c2d 	.word	0x00000c2d
     c80:	40003000 	.word	0x40003000
     c84:	2000007c 	.word	0x2000007c
     c88:	00001259 	.word	0x00001259
     c8c:	00000c09 	.word	0x00000c09

00000c90 <delay_driver_init>:
     c90:	b580      	push	{r7, lr}
     c92:	af00      	add	r7, sp, #0
     c94:	4802      	ldr	r0, [pc, #8]	; (ca0 <delay_driver_init+0x10>)
     c96:	4b03      	ldr	r3, [pc, #12]	; (ca4 <delay_driver_init+0x14>)
     c98:	4798      	blx	r3
     c9a:	bf00      	nop
     c9c:	bd80      	pop	{r7, pc}
     c9e:	bf00      	nop
     ca0:	e000e010 	.word	0xe000e010
     ca4:	00000f7d 	.word	0x00000f7d

00000ca8 <PWM_0_PORT_init>:
     ca8:	b480      	push	{r7}
     caa:	af00      	add	r7, sp, #0
     cac:	bf00      	nop
     cae:	46bd      	mov	sp, r7
     cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
     cb4:	4770      	bx	lr
	...

00000cb8 <PWM_0_CLOCK_init>:
     cb8:	b580      	push	{r7, lr}
     cba:	af00      	add	r7, sp, #0
     cbc:	4804      	ldr	r0, [pc, #16]	; (cd0 <PWM_0_CLOCK_init+0x18>)
     cbe:	4b05      	ldr	r3, [pc, #20]	; (cd4 <PWM_0_CLOCK_init+0x1c>)
     cc0:	4798      	blx	r3
     cc2:	2240      	movs	r2, #64	; 0x40
     cc4:	2109      	movs	r1, #9
     cc6:	4804      	ldr	r0, [pc, #16]	; (cd8 <PWM_0_CLOCK_init+0x20>)
     cc8:	4b04      	ldr	r3, [pc, #16]	; (cdc <PWM_0_CLOCK_init+0x24>)
     cca:	4798      	blx	r3
     ccc:	bf00      	nop
     cce:	bd80      	pop	{r7, pc}
     cd0:	40000800 	.word	0x40000800
     cd4:	00000605 	.word	0x00000605
     cd8:	40001c00 	.word	0x40001c00
     cdc:	0000059f 	.word	0x0000059f

00000ce0 <PWM_0_init>:
     ce0:	b580      	push	{r7, lr}
     ce2:	af00      	add	r7, sp, #0
     ce4:	4b06      	ldr	r3, [pc, #24]	; (d00 <PWM_0_init+0x20>)
     ce6:	4798      	blx	r3
     ce8:	4b06      	ldr	r3, [pc, #24]	; (d04 <PWM_0_init+0x24>)
     cea:	4798      	blx	r3
     cec:	4b06      	ldr	r3, [pc, #24]	; (d08 <PWM_0_init+0x28>)
     cee:	4798      	blx	r3
     cf0:	4603      	mov	r3, r0
     cf2:	461a      	mov	r2, r3
     cf4:	4905      	ldr	r1, [pc, #20]	; (d0c <PWM_0_init+0x2c>)
     cf6:	4806      	ldr	r0, [pc, #24]	; (d10 <PWM_0_init+0x30>)
     cf8:	4b06      	ldr	r3, [pc, #24]	; (d14 <PWM_0_init+0x34>)
     cfa:	4798      	blx	r3
     cfc:	bf00      	nop
     cfe:	bd80      	pop	{r7, pc}
     d00:	00000cb9 	.word	0x00000cb9
     d04:	00000ca9 	.word	0x00000ca9
     d08:	000024f5 	.word	0x000024f5
     d0c:	40003800 	.word	0x40003800
     d10:	20000060 	.word	0x20000060
     d14:	00000fa5 	.word	0x00000fa5

00000d18 <system_init>:
     d18:	b580      	push	{r7, lr}
     d1a:	af00      	add	r7, sp, #0
     d1c:	4b8e      	ldr	r3, [pc, #568]	; (f58 <system_init+0x240>)
     d1e:	4798      	blx	r3
     d20:	2101      	movs	r1, #1
     d22:	2003      	movs	r0, #3
     d24:	4b8d      	ldr	r3, [pc, #564]	; (f5c <system_init+0x244>)
     d26:	4798      	blx	r3
     d28:	2101      	movs	r1, #1
     d2a:	2003      	movs	r0, #3
     d2c:	4b8c      	ldr	r3, [pc, #560]	; (f60 <system_init+0x248>)
     d2e:	4798      	blx	r3
     d30:	f04f 31ff 	mov.w	r1, #4294967295
     d34:	2003      	movs	r0, #3
     d36:	4b8b      	ldr	r3, [pc, #556]	; (f64 <system_init+0x24c>)
     d38:	4798      	blx	r3
     d3a:	2101      	movs	r1, #1
     d3c:	2021      	movs	r0, #33	; 0x21
     d3e:	4b87      	ldr	r3, [pc, #540]	; (f5c <system_init+0x244>)
     d40:	4798      	blx	r3
     d42:	2100      	movs	r1, #0
     d44:	2021      	movs	r0, #33	; 0x21
     d46:	4b86      	ldr	r3, [pc, #536]	; (f60 <system_init+0x248>)
     d48:	4798      	blx	r3
     d4a:	f04f 31ff 	mov.w	r1, #4294967295
     d4e:	2021      	movs	r0, #33	; 0x21
     d50:	4b84      	ldr	r3, [pc, #528]	; (f64 <system_init+0x24c>)
     d52:	4798      	blx	r3
     d54:	2101      	movs	r1, #1
     d56:	2024      	movs	r0, #36	; 0x24
     d58:	4b80      	ldr	r3, [pc, #512]	; (f5c <system_init+0x244>)
     d5a:	4798      	blx	r3
     d5c:	2101      	movs	r1, #1
     d5e:	2024      	movs	r0, #36	; 0x24
     d60:	4b7f      	ldr	r3, [pc, #508]	; (f60 <system_init+0x248>)
     d62:	4798      	blx	r3
     d64:	f04f 31ff 	mov.w	r1, #4294967295
     d68:	2024      	movs	r0, #36	; 0x24
     d6a:	4b7e      	ldr	r3, [pc, #504]	; (f64 <system_init+0x24c>)
     d6c:	4798      	blx	r3
     d6e:	2101      	movs	r1, #1
     d70:	2025      	movs	r0, #37	; 0x25
     d72:	4b7a      	ldr	r3, [pc, #488]	; (f5c <system_init+0x244>)
     d74:	4798      	blx	r3
     d76:	2101      	movs	r1, #1
     d78:	2025      	movs	r0, #37	; 0x25
     d7a:	4b79      	ldr	r3, [pc, #484]	; (f60 <system_init+0x248>)
     d7c:	4798      	blx	r3
     d7e:	f04f 31ff 	mov.w	r1, #4294967295
     d82:	2025      	movs	r0, #37	; 0x25
     d84:	4b77      	ldr	r3, [pc, #476]	; (f64 <system_init+0x24c>)
     d86:	4798      	blx	r3
     d88:	2101      	movs	r1, #1
     d8a:	2026      	movs	r0, #38	; 0x26
     d8c:	4b73      	ldr	r3, [pc, #460]	; (f5c <system_init+0x244>)
     d8e:	4798      	blx	r3
     d90:	2101      	movs	r1, #1
     d92:	2026      	movs	r0, #38	; 0x26
     d94:	4b72      	ldr	r3, [pc, #456]	; (f60 <system_init+0x248>)
     d96:	4798      	blx	r3
     d98:	f04f 31ff 	mov.w	r1, #4294967295
     d9c:	2026      	movs	r0, #38	; 0x26
     d9e:	4b71      	ldr	r3, [pc, #452]	; (f64 <system_init+0x24c>)
     da0:	4798      	blx	r3
     da2:	2101      	movs	r1, #1
     da4:	2027      	movs	r0, #39	; 0x27
     da6:	4b6d      	ldr	r3, [pc, #436]	; (f5c <system_init+0x244>)
     da8:	4798      	blx	r3
     daa:	2101      	movs	r1, #1
     dac:	2027      	movs	r0, #39	; 0x27
     dae:	4b6c      	ldr	r3, [pc, #432]	; (f60 <system_init+0x248>)
     db0:	4798      	blx	r3
     db2:	f04f 31ff 	mov.w	r1, #4294967295
     db6:	2027      	movs	r0, #39	; 0x27
     db8:	4b6a      	ldr	r3, [pc, #424]	; (f64 <system_init+0x24c>)
     dba:	4798      	blx	r3
     dbc:	2100      	movs	r1, #0
     dbe:	2028      	movs	r0, #40	; 0x28
     dc0:	4b69      	ldr	r3, [pc, #420]	; (f68 <system_init+0x250>)
     dc2:	4798      	blx	r3
     dc4:	2102      	movs	r1, #2
     dc6:	2028      	movs	r0, #40	; 0x28
     dc8:	4b64      	ldr	r3, [pc, #400]	; (f5c <system_init+0x244>)
     dca:	4798      	blx	r3
     dcc:	f04f 31ff 	mov.w	r1, #4294967295
     dd0:	2028      	movs	r0, #40	; 0x28
     dd2:	4b64      	ldr	r3, [pc, #400]	; (f64 <system_init+0x24c>)
     dd4:	4798      	blx	r3
     dd6:	2100      	movs	r1, #0
     dd8:	2029      	movs	r0, #41	; 0x29
     dda:	4b63      	ldr	r3, [pc, #396]	; (f68 <system_init+0x250>)
     ddc:	4798      	blx	r3
     dde:	2102      	movs	r1, #2
     de0:	2029      	movs	r0, #41	; 0x29
     de2:	4b5e      	ldr	r3, [pc, #376]	; (f5c <system_init+0x244>)
     de4:	4798      	blx	r3
     de6:	f04f 31ff 	mov.w	r1, #4294967295
     dea:	2029      	movs	r0, #41	; 0x29
     dec:	4b5d      	ldr	r3, [pc, #372]	; (f64 <system_init+0x24c>)
     dee:	4798      	blx	r3
     df0:	2100      	movs	r1, #0
     df2:	202a      	movs	r0, #42	; 0x2a
     df4:	4b5c      	ldr	r3, [pc, #368]	; (f68 <system_init+0x250>)
     df6:	4798      	blx	r3
     df8:	2102      	movs	r1, #2
     dfa:	202a      	movs	r0, #42	; 0x2a
     dfc:	4b57      	ldr	r3, [pc, #348]	; (f5c <system_init+0x244>)
     dfe:	4798      	blx	r3
     e00:	f04f 31ff 	mov.w	r1, #4294967295
     e04:	202a      	movs	r0, #42	; 0x2a
     e06:	4b57      	ldr	r3, [pc, #348]	; (f64 <system_init+0x24c>)
     e08:	4798      	blx	r3
     e0a:	2100      	movs	r1, #0
     e0c:	202b      	movs	r0, #43	; 0x2b
     e0e:	4b56      	ldr	r3, [pc, #344]	; (f68 <system_init+0x250>)
     e10:	4798      	blx	r3
     e12:	2102      	movs	r1, #2
     e14:	202b      	movs	r0, #43	; 0x2b
     e16:	4b51      	ldr	r3, [pc, #324]	; (f5c <system_init+0x244>)
     e18:	4798      	blx	r3
     e1a:	f04f 31ff 	mov.w	r1, #4294967295
     e1e:	202b      	movs	r0, #43	; 0x2b
     e20:	4b50      	ldr	r3, [pc, #320]	; (f64 <system_init+0x24c>)
     e22:	4798      	blx	r3
     e24:	2100      	movs	r1, #0
     e26:	202c      	movs	r0, #44	; 0x2c
     e28:	4b4f      	ldr	r3, [pc, #316]	; (f68 <system_init+0x250>)
     e2a:	4798      	blx	r3
     e2c:	2102      	movs	r1, #2
     e2e:	202c      	movs	r0, #44	; 0x2c
     e30:	4b4a      	ldr	r3, [pc, #296]	; (f5c <system_init+0x244>)
     e32:	4798      	blx	r3
     e34:	f04f 31ff 	mov.w	r1, #4294967295
     e38:	202c      	movs	r0, #44	; 0x2c
     e3a:	4b4a      	ldr	r3, [pc, #296]	; (f64 <system_init+0x24c>)
     e3c:	4798      	blx	r3
     e3e:	2100      	movs	r1, #0
     e40:	202d      	movs	r0, #45	; 0x2d
     e42:	4b49      	ldr	r3, [pc, #292]	; (f68 <system_init+0x250>)
     e44:	4798      	blx	r3
     e46:	2102      	movs	r1, #2
     e48:	202d      	movs	r0, #45	; 0x2d
     e4a:	4b44      	ldr	r3, [pc, #272]	; (f5c <system_init+0x244>)
     e4c:	4798      	blx	r3
     e4e:	f04f 31ff 	mov.w	r1, #4294967295
     e52:	202d      	movs	r0, #45	; 0x2d
     e54:	4b43      	ldr	r3, [pc, #268]	; (f64 <system_init+0x24c>)
     e56:	4798      	blx	r3
     e58:	2100      	movs	r1, #0
     e5a:	202e      	movs	r0, #46	; 0x2e
     e5c:	4b42      	ldr	r3, [pc, #264]	; (f68 <system_init+0x250>)
     e5e:	4798      	blx	r3
     e60:	2102      	movs	r1, #2
     e62:	202e      	movs	r0, #46	; 0x2e
     e64:	4b3d      	ldr	r3, [pc, #244]	; (f5c <system_init+0x244>)
     e66:	4798      	blx	r3
     e68:	f04f 31ff 	mov.w	r1, #4294967295
     e6c:	202e      	movs	r0, #46	; 0x2e
     e6e:	4b3d      	ldr	r3, [pc, #244]	; (f64 <system_init+0x24c>)
     e70:	4798      	blx	r3
     e72:	2100      	movs	r1, #0
     e74:	202f      	movs	r0, #47	; 0x2f
     e76:	4b3c      	ldr	r3, [pc, #240]	; (f68 <system_init+0x250>)
     e78:	4798      	blx	r3
     e7a:	2102      	movs	r1, #2
     e7c:	202f      	movs	r0, #47	; 0x2f
     e7e:	4b37      	ldr	r3, [pc, #220]	; (f5c <system_init+0x244>)
     e80:	4798      	blx	r3
     e82:	f04f 31ff 	mov.w	r1, #4294967295
     e86:	202f      	movs	r0, #47	; 0x2f
     e88:	4b36      	ldr	r3, [pc, #216]	; (f64 <system_init+0x24c>)
     e8a:	4798      	blx	r3
     e8c:	2100      	movs	r1, #0
     e8e:	203a      	movs	r0, #58	; 0x3a
     e90:	4b35      	ldr	r3, [pc, #212]	; (f68 <system_init+0x250>)
     e92:	4798      	blx	r3
     e94:	2102      	movs	r1, #2
     e96:	203a      	movs	r0, #58	; 0x3a
     e98:	4b30      	ldr	r3, [pc, #192]	; (f5c <system_init+0x244>)
     e9a:	4798      	blx	r3
     e9c:	f04f 31ff 	mov.w	r1, #4294967295
     ea0:	203a      	movs	r0, #58	; 0x3a
     ea2:	4b30      	ldr	r3, [pc, #192]	; (f64 <system_init+0x24c>)
     ea4:	4798      	blx	r3
     ea6:	2100      	movs	r1, #0
     ea8:	203b      	movs	r0, #59	; 0x3b
     eaa:	4b2f      	ldr	r3, [pc, #188]	; (f68 <system_init+0x250>)
     eac:	4798      	blx	r3
     eae:	2102      	movs	r1, #2
     eb0:	203b      	movs	r0, #59	; 0x3b
     eb2:	4b2a      	ldr	r3, [pc, #168]	; (f5c <system_init+0x244>)
     eb4:	4798      	blx	r3
     eb6:	f04f 31ff 	mov.w	r1, #4294967295
     eba:	203b      	movs	r0, #59	; 0x3b
     ebc:	4b29      	ldr	r3, [pc, #164]	; (f64 <system_init+0x24c>)
     ebe:	4798      	blx	r3
     ec0:	2100      	movs	r1, #0
     ec2:	203c      	movs	r0, #60	; 0x3c
     ec4:	4b28      	ldr	r3, [pc, #160]	; (f68 <system_init+0x250>)
     ec6:	4798      	blx	r3
     ec8:	2102      	movs	r1, #2
     eca:	203c      	movs	r0, #60	; 0x3c
     ecc:	4b23      	ldr	r3, [pc, #140]	; (f5c <system_init+0x244>)
     ece:	4798      	blx	r3
     ed0:	f04f 31ff 	mov.w	r1, #4294967295
     ed4:	203c      	movs	r0, #60	; 0x3c
     ed6:	4b23      	ldr	r3, [pc, #140]	; (f64 <system_init+0x24c>)
     ed8:	4798      	blx	r3
     eda:	2101      	movs	r1, #1
     edc:	203f      	movs	r0, #63	; 0x3f
     ede:	4b1f      	ldr	r3, [pc, #124]	; (f5c <system_init+0x244>)
     ee0:	4798      	blx	r3
     ee2:	2101      	movs	r1, #1
     ee4:	203f      	movs	r0, #63	; 0x3f
     ee6:	4b1e      	ldr	r3, [pc, #120]	; (f60 <system_init+0x248>)
     ee8:	4798      	blx	r3
     eea:	f04f 31ff 	mov.w	r1, #4294967295
     eee:	203f      	movs	r0, #63	; 0x3f
     ef0:	4b1c      	ldr	r3, [pc, #112]	; (f64 <system_init+0x24c>)
     ef2:	4798      	blx	r3
     ef4:	2101      	movs	r1, #1
     ef6:	2042      	movs	r0, #66	; 0x42
     ef8:	4b18      	ldr	r3, [pc, #96]	; (f5c <system_init+0x244>)
     efa:	4798      	blx	r3
     efc:	2100      	movs	r1, #0
     efe:	2042      	movs	r0, #66	; 0x42
     f00:	4b17      	ldr	r3, [pc, #92]	; (f60 <system_init+0x248>)
     f02:	4798      	blx	r3
     f04:	f04f 31ff 	mov.w	r1, #4294967295
     f08:	2042      	movs	r0, #66	; 0x42
     f0a:	4b16      	ldr	r3, [pc, #88]	; (f64 <system_init+0x24c>)
     f0c:	4798      	blx	r3
     f0e:	2101      	movs	r1, #1
     f10:	2043      	movs	r0, #67	; 0x43
     f12:	4b12      	ldr	r3, [pc, #72]	; (f5c <system_init+0x244>)
     f14:	4798      	blx	r3
     f16:	2101      	movs	r1, #1
     f18:	2043      	movs	r0, #67	; 0x43
     f1a:	4b11      	ldr	r3, [pc, #68]	; (f60 <system_init+0x248>)
     f1c:	4798      	blx	r3
     f1e:	f04f 31ff 	mov.w	r1, #4294967295
     f22:	2043      	movs	r0, #67	; 0x43
     f24:	4b0f      	ldr	r3, [pc, #60]	; (f64 <system_init+0x24c>)
     f26:	4798      	blx	r3
     f28:	2101      	movs	r1, #1
     f2a:	2052      	movs	r0, #82	; 0x52
     f2c:	4b0e      	ldr	r3, [pc, #56]	; (f68 <system_init+0x250>)
     f2e:	4798      	blx	r3
     f30:	2102      	movs	r1, #2
     f32:	2052      	movs	r0, #82	; 0x52
     f34:	4b09      	ldr	r3, [pc, #36]	; (f5c <system_init+0x244>)
     f36:	4798      	blx	r3
     f38:	f04f 31ff 	mov.w	r1, #4294967295
     f3c:	2052      	movs	r0, #82	; 0x52
     f3e:	4b09      	ldr	r3, [pc, #36]	; (f64 <system_init+0x24c>)
     f40:	4798      	blx	r3
     f42:	4b0a      	ldr	r3, [pc, #40]	; (f6c <system_init+0x254>)
     f44:	4798      	blx	r3
     f46:	4b0a      	ldr	r3, [pc, #40]	; (f70 <system_init+0x258>)
     f48:	4798      	blx	r3
     f4a:	4b0a      	ldr	r3, [pc, #40]	; (f74 <system_init+0x25c>)
     f4c:	4798      	blx	r3
     f4e:	4b0a      	ldr	r3, [pc, #40]	; (f78 <system_init+0x260>)
     f50:	4798      	blx	r3
     f52:	bf00      	nop
     f54:	bd80      	pop	{r7, pc}
     f56:	bf00      	nop
     f58:	00000bc1 	.word	0x00000bc1
     f5c:	00000b51 	.word	0x00000b51
     f60:	00000afd 	.word	0x00000afd
     f64:	00000b31 	.word	0x00000b31
     f68:	00000b89 	.word	0x00000b89
     f6c:	00000bd1 	.word	0x00000bd1
     f70:	00000c61 	.word	0x00000c61
     f74:	00000c91 	.word	0x00000c91
     f78:	00000ce1 	.word	0x00000ce1

00000f7c <delay_init>:
     f7c:	b580      	push	{r7, lr}
     f7e:	b082      	sub	sp, #8
     f80:	af00      	add	r7, sp, #0
     f82:	6078      	str	r0, [r7, #4]
     f84:	4a05      	ldr	r2, [pc, #20]	; (f9c <delay_init+0x20>)
     f86:	687b      	ldr	r3, [r7, #4]
     f88:	6013      	str	r3, [r2, #0]
     f8a:	4b04      	ldr	r3, [pc, #16]	; (f9c <delay_init+0x20>)
     f8c:	681b      	ldr	r3, [r3, #0]
     f8e:	4618      	mov	r0, r3
     f90:	4b03      	ldr	r3, [pc, #12]	; (fa0 <delay_init+0x24>)
     f92:	4798      	blx	r3
     f94:	bf00      	nop
     f96:	3708      	adds	r7, #8
     f98:	46bd      	mov	sp, r7
     f9a:	bd80      	pop	{r7, pc}
     f9c:	20000054 	.word	0x20000054
     fa0:	00001ff1 	.word	0x00001ff1

00000fa4 <pwm_init>:
     fa4:	b580      	push	{r7, lr}
     fa6:	b084      	sub	sp, #16
     fa8:	af00      	add	r7, sp, #0
     faa:	60f8      	str	r0, [r7, #12]
     fac:	60b9      	str	r1, [r7, #8]
     fae:	607a      	str	r2, [r7, #4]
     fb0:	68fb      	ldr	r3, [r7, #12]
     fb2:	2b00      	cmp	r3, #0
     fb4:	d004      	beq.n	fc0 <pwm_init+0x1c>
     fb6:	68bb      	ldr	r3, [r7, #8]
     fb8:	2b00      	cmp	r3, #0
     fba:	d001      	beq.n	fc0 <pwm_init+0x1c>
     fbc:	2301      	movs	r3, #1
     fbe:	e000      	b.n	fc2 <pwm_init+0x1e>
     fc0:	2300      	movs	r3, #0
     fc2:	f003 0301 	and.w	r3, r3, #1
     fc6:	b2db      	uxtb	r3, r3
     fc8:	2233      	movs	r2, #51	; 0x33
     fca:	490a      	ldr	r1, [pc, #40]	; (ff4 <pwm_init+0x50>)
     fcc:	4618      	mov	r0, r3
     fce:	4b0a      	ldr	r3, [pc, #40]	; (ff8 <pwm_init+0x54>)
     fd0:	4798      	blx	r3
     fd2:	68fb      	ldr	r3, [r7, #12]
     fd4:	68b9      	ldr	r1, [r7, #8]
     fd6:	4618      	mov	r0, r3
     fd8:	4b08      	ldr	r3, [pc, #32]	; (ffc <pwm_init+0x58>)
     fda:	4798      	blx	r3
     fdc:	68fb      	ldr	r3, [r7, #12]
     fde:	4a08      	ldr	r2, [pc, #32]	; (1000 <pwm_init+0x5c>)
     fe0:	601a      	str	r2, [r3, #0]
     fe2:	68fb      	ldr	r3, [r7, #12]
     fe4:	4a07      	ldr	r2, [pc, #28]	; (1004 <pwm_init+0x60>)
     fe6:	605a      	str	r2, [r3, #4]
     fe8:	2300      	movs	r3, #0
     fea:	4618      	mov	r0, r3
     fec:	3710      	adds	r7, #16
     fee:	46bd      	mov	sp, r7
     ff0:	bd80      	pop	{r7, pc}
     ff2:	bf00      	nop
     ff4:	00002a8c 	.word	0x00002a8c
     ff8:	00001425 	.word	0x00001425
     ffc:	000022d9 	.word	0x000022d9
    1000:	00001009 	.word	0x00001009
    1004:	0000102d 	.word	0x0000102d

00001008 <pwm_period_expired>:
    1008:	b580      	push	{r7, lr}
    100a:	b084      	sub	sp, #16
    100c:	af00      	add	r7, sp, #0
    100e:	6078      	str	r0, [r7, #4]
    1010:	687b      	ldr	r3, [r7, #4]
    1012:	60fb      	str	r3, [r7, #12]
    1014:	68fb      	ldr	r3, [r7, #12]
    1016:	695b      	ldr	r3, [r3, #20]
    1018:	2b00      	cmp	r3, #0
    101a:	d003      	beq.n	1024 <pwm_period_expired+0x1c>
    101c:	68fb      	ldr	r3, [r7, #12]
    101e:	695b      	ldr	r3, [r3, #20]
    1020:	68f8      	ldr	r0, [r7, #12]
    1022:	4798      	blx	r3
    1024:	bf00      	nop
    1026:	3710      	adds	r7, #16
    1028:	46bd      	mov	sp, r7
    102a:	bd80      	pop	{r7, pc}

0000102c <pwm_detect_fault>:
    102c:	b580      	push	{r7, lr}
    102e:	b084      	sub	sp, #16
    1030:	af00      	add	r7, sp, #0
    1032:	6078      	str	r0, [r7, #4]
    1034:	687b      	ldr	r3, [r7, #4]
    1036:	60fb      	str	r3, [r7, #12]
    1038:	68fb      	ldr	r3, [r7, #12]
    103a:	699b      	ldr	r3, [r3, #24]
    103c:	2b00      	cmp	r3, #0
    103e:	d003      	beq.n	1048 <pwm_detect_fault+0x1c>
    1040:	68fb      	ldr	r3, [r7, #12]
    1042:	699b      	ldr	r3, [r3, #24]
    1044:	68f8      	ldr	r0, [r7, #12]
    1046:	4798      	blx	r3
    1048:	bf00      	nop
    104a:	3710      	adds	r7, #16
    104c:	46bd      	mov	sp, r7
    104e:	bd80      	pop	{r7, pc}

00001050 <list_get_head>:
    1050:	b480      	push	{r7}
    1052:	b083      	sub	sp, #12
    1054:	af00      	add	r7, sp, #0
    1056:	6078      	str	r0, [r7, #4]
    1058:	687b      	ldr	r3, [r7, #4]
    105a:	681b      	ldr	r3, [r3, #0]
    105c:	4618      	mov	r0, r3
    105e:	370c      	adds	r7, #12
    1060:	46bd      	mov	sp, r7
    1062:	f85d 7b04 	ldr.w	r7, [sp], #4
    1066:	4770      	bx	lr

00001068 <list_get_next_element>:
    1068:	b480      	push	{r7}
    106a:	b083      	sub	sp, #12
    106c:	af00      	add	r7, sp, #0
    106e:	6078      	str	r0, [r7, #4]
    1070:	687b      	ldr	r3, [r7, #4]
    1072:	2b00      	cmp	r3, #0
    1074:	d002      	beq.n	107c <list_get_next_element+0x14>
    1076:	687b      	ldr	r3, [r7, #4]
    1078:	681b      	ldr	r3, [r3, #0]
    107a:	e000      	b.n	107e <list_get_next_element+0x16>
    107c:	2300      	movs	r3, #0
    107e:	4618      	mov	r0, r3
    1080:	370c      	adds	r7, #12
    1082:	46bd      	mov	sp, r7
    1084:	f85d 7b04 	ldr.w	r7, [sp], #4
    1088:	4770      	bx	lr
	...

0000108c <timer_init>:
    108c:	b580      	push	{r7, lr}
    108e:	b084      	sub	sp, #16
    1090:	af00      	add	r7, sp, #0
    1092:	60f8      	str	r0, [r7, #12]
    1094:	60b9      	str	r1, [r7, #8]
    1096:	607a      	str	r2, [r7, #4]
    1098:	68fb      	ldr	r3, [r7, #12]
    109a:	2b00      	cmp	r3, #0
    109c:	d004      	beq.n	10a8 <timer_init+0x1c>
    109e:	68bb      	ldr	r3, [r7, #8]
    10a0:	2b00      	cmp	r3, #0
    10a2:	d001      	beq.n	10a8 <timer_init+0x1c>
    10a4:	2301      	movs	r3, #1
    10a6:	e000      	b.n	10aa <timer_init+0x1e>
    10a8:	2300      	movs	r3, #0
    10aa:	f003 0301 	and.w	r3, r3, #1
    10ae:	b2db      	uxtb	r3, r3
    10b0:	223b      	movs	r2, #59	; 0x3b
    10b2:	490a      	ldr	r1, [pc, #40]	; (10dc <timer_init+0x50>)
    10b4:	4618      	mov	r0, r3
    10b6:	4b0a      	ldr	r3, [pc, #40]	; (10e0 <timer_init+0x54>)
    10b8:	4798      	blx	r3
    10ba:	68fb      	ldr	r3, [r7, #12]
    10bc:	68b9      	ldr	r1, [r7, #8]
    10be:	4618      	mov	r0, r3
    10c0:	4b08      	ldr	r3, [pc, #32]	; (10e4 <timer_init+0x58>)
    10c2:	4798      	blx	r3
    10c4:	68fb      	ldr	r3, [r7, #12]
    10c6:	2200      	movs	r2, #0
    10c8:	611a      	str	r2, [r3, #16]
    10ca:	68fb      	ldr	r3, [r7, #12]
    10cc:	4a06      	ldr	r2, [pc, #24]	; (10e8 <timer_init+0x5c>)
    10ce:	601a      	str	r2, [r3, #0]
    10d0:	2300      	movs	r3, #0
    10d2:	4618      	mov	r0, r3
    10d4:	3710      	adds	r7, #16
    10d6:	46bd      	mov	sp, r7
    10d8:	bd80      	pop	{r7, pc}
    10da:	bf00      	nop
    10dc:	00002aa4 	.word	0x00002aa4
    10e0:	00001425 	.word	0x00001425
    10e4:	0000193d 	.word	0x0000193d
    10e8:	0000119d 	.word	0x0000119d

000010ec <timer_add_timer_task>:
    10ec:	b580      	push	{r7, lr}
    10ee:	b088      	sub	sp, #32
    10f0:	af00      	add	r7, sp, #0
    10f2:	60f8      	str	r0, [r7, #12]
    10f4:	60b9      	str	r1, [r7, #8]
    10f6:	607a      	str	r2, [r7, #4]
    10f8:	2300      	movs	r3, #0
    10fa:	61bb      	str	r3, [r7, #24]
    10fc:	68f8      	ldr	r0, [r7, #12]
    10fe:	4b23      	ldr	r3, [pc, #140]	; (118c <timer_add_timer_task+0xa0>)
    1100:	4798      	blx	r3
    1102:	6138      	str	r0, [r7, #16]
    1104:	693b      	ldr	r3, [r7, #16]
    1106:	2b00      	cmp	r3, #0
    1108:	d104      	bne.n	1114 <timer_add_timer_task+0x28>
    110a:	68b9      	ldr	r1, [r7, #8]
    110c:	68f8      	ldr	r0, [r7, #12]
    110e:	4b20      	ldr	r3, [pc, #128]	; (1190 <timer_add_timer_task+0xa4>)
    1110:	4798      	blx	r3
    1112:	e037      	b.n	1184 <timer_add_timer_task+0x98>
    1114:	693b      	ldr	r3, [r7, #16]
    1116:	61fb      	str	r3, [r7, #28]
    1118:	e022      	b.n	1160 <timer_add_timer_task+0x74>
    111a:	69fb      	ldr	r3, [r7, #28]
    111c:	685a      	ldr	r2, [r3, #4]
    111e:	687b      	ldr	r3, [r7, #4]
    1120:	429a      	cmp	r2, r3
    1122:	d808      	bhi.n	1136 <timer_add_timer_task+0x4a>
    1124:	69fb      	ldr	r3, [r7, #28]
    1126:	689a      	ldr	r2, [r3, #8]
    1128:	69fb      	ldr	r3, [r7, #28]
    112a:	6859      	ldr	r1, [r3, #4]
    112c:	687b      	ldr	r3, [r7, #4]
    112e:	1acb      	subs	r3, r1, r3
    1130:	4413      	add	r3, r2
    1132:	617b      	str	r3, [r7, #20]
    1134:	e009      	b.n	114a <timer_add_timer_task+0x5e>
    1136:	69fb      	ldr	r3, [r7, #28]
    1138:	689a      	ldr	r2, [r3, #8]
    113a:	69fb      	ldr	r3, [r7, #28]
    113c:	685b      	ldr	r3, [r3, #4]
    113e:	441a      	add	r2, r3
    1140:	687b      	ldr	r3, [r7, #4]
    1142:	425b      	negs	r3, r3
    1144:	4413      	add	r3, r2
    1146:	3301      	adds	r3, #1
    1148:	617b      	str	r3, [r7, #20]
    114a:	68bb      	ldr	r3, [r7, #8]
    114c:	689a      	ldr	r2, [r3, #8]
    114e:	697b      	ldr	r3, [r7, #20]
    1150:	429a      	cmp	r2, r3
    1152:	d909      	bls.n	1168 <timer_add_timer_task+0x7c>
    1154:	69fb      	ldr	r3, [r7, #28]
    1156:	61bb      	str	r3, [r7, #24]
    1158:	69f8      	ldr	r0, [r7, #28]
    115a:	4b0e      	ldr	r3, [pc, #56]	; (1194 <timer_add_timer_task+0xa8>)
    115c:	4798      	blx	r3
    115e:	61f8      	str	r0, [r7, #28]
    1160:	69fb      	ldr	r3, [r7, #28]
    1162:	2b00      	cmp	r3, #0
    1164:	d1d9      	bne.n	111a <timer_add_timer_task+0x2e>
    1166:	e000      	b.n	116a <timer_add_timer_task+0x7e>
    1168:	bf00      	nop
    116a:	69fa      	ldr	r2, [r7, #28]
    116c:	693b      	ldr	r3, [r7, #16]
    116e:	429a      	cmp	r2, r3
    1170:	d104      	bne.n	117c <timer_add_timer_task+0x90>
    1172:	68b9      	ldr	r1, [r7, #8]
    1174:	68f8      	ldr	r0, [r7, #12]
    1176:	4b06      	ldr	r3, [pc, #24]	; (1190 <timer_add_timer_task+0xa4>)
    1178:	4798      	blx	r3
    117a:	e003      	b.n	1184 <timer_add_timer_task+0x98>
    117c:	68b9      	ldr	r1, [r7, #8]
    117e:	69b8      	ldr	r0, [r7, #24]
    1180:	4b05      	ldr	r3, [pc, #20]	; (1198 <timer_add_timer_task+0xac>)
    1182:	4798      	blx	r3
    1184:	3720      	adds	r7, #32
    1186:	46bd      	mov	sp, r7
    1188:	bd80      	pop	{r7, pc}
    118a:	bf00      	nop
    118c:	00001051 	.word	0x00001051
    1190:	00001485 	.word	0x00001485
    1194:	00001069 	.word	0x00001069
    1198:	000014dd 	.word	0x000014dd

0000119c <timer_process_counted>:
    119c:	b580      	push	{r7, lr}
    119e:	b086      	sub	sp, #24
    11a0:	af00      	add	r7, sp, #0
    11a2:	6078      	str	r0, [r7, #4]
    11a4:	687b      	ldr	r3, [r7, #4]
    11a6:	613b      	str	r3, [r7, #16]
    11a8:	693b      	ldr	r3, [r7, #16]
    11aa:	3314      	adds	r3, #20
    11ac:	4618      	mov	r0, r3
    11ae:	4b27      	ldr	r3, [pc, #156]	; (124c <timer_process_counted+0xb0>)
    11b0:	4798      	blx	r3
    11b2:	6178      	str	r0, [r7, #20]
    11b4:	693b      	ldr	r3, [r7, #16]
    11b6:	691b      	ldr	r3, [r3, #16]
    11b8:	1c5a      	adds	r2, r3, #1
    11ba:	693b      	ldr	r3, [r7, #16]
    11bc:	611a      	str	r2, [r3, #16]
    11be:	693b      	ldr	r3, [r7, #16]
    11c0:	691b      	ldr	r3, [r3, #16]
    11c2:	60fb      	str	r3, [r7, #12]
    11c4:	693b      	ldr	r3, [r7, #16]
    11c6:	7e1b      	ldrb	r3, [r3, #24]
    11c8:	b2db      	uxtb	r3, r3
    11ca:	f003 0301 	and.w	r3, r3, #1
    11ce:	2b00      	cmp	r3, #0
    11d0:	d106      	bne.n	11e0 <timer_process_counted+0x44>
    11d2:	693b      	ldr	r3, [r7, #16]
    11d4:	7e1b      	ldrb	r3, [r3, #24]
    11d6:	b2db      	uxtb	r3, r3
    11d8:	f003 0302 	and.w	r3, r3, #2
    11dc:	2b00      	cmp	r3, #0
    11de:	d027      	beq.n	1230 <timer_process_counted+0x94>
    11e0:	693b      	ldr	r3, [r7, #16]
    11e2:	7e1b      	ldrb	r3, [r3, #24]
    11e4:	b2db      	uxtb	r3, r3
    11e6:	f043 0302 	orr.w	r3, r3, #2
    11ea:	b2da      	uxtb	r2, r3
    11ec:	693b      	ldr	r3, [r7, #16]
    11ee:	761a      	strb	r2, [r3, #24]
    11f0:	e029      	b.n	1246 <timer_process_counted+0xaa>
    11f2:	697b      	ldr	r3, [r7, #20]
    11f4:	60bb      	str	r3, [r7, #8]
    11f6:	693b      	ldr	r3, [r7, #16]
    11f8:	3314      	adds	r3, #20
    11fa:	4618      	mov	r0, r3
    11fc:	4b14      	ldr	r3, [pc, #80]	; (1250 <timer_process_counted+0xb4>)
    11fe:	4798      	blx	r3
    1200:	68bb      	ldr	r3, [r7, #8]
    1202:	7c1b      	ldrb	r3, [r3, #16]
    1204:	2b01      	cmp	r3, #1
    1206:	d109      	bne.n	121c <timer_process_counted+0x80>
    1208:	68bb      	ldr	r3, [r7, #8]
    120a:	68fa      	ldr	r2, [r7, #12]
    120c:	605a      	str	r2, [r3, #4]
    120e:	693b      	ldr	r3, [r7, #16]
    1210:	3314      	adds	r3, #20
    1212:	68fa      	ldr	r2, [r7, #12]
    1214:	68b9      	ldr	r1, [r7, #8]
    1216:	4618      	mov	r0, r3
    1218:	4b0e      	ldr	r3, [pc, #56]	; (1254 <timer_process_counted+0xb8>)
    121a:	4798      	blx	r3
    121c:	693b      	ldr	r3, [r7, #16]
    121e:	3314      	adds	r3, #20
    1220:	4618      	mov	r0, r3
    1222:	4b0a      	ldr	r3, [pc, #40]	; (124c <timer_process_counted+0xb0>)
    1224:	4798      	blx	r3
    1226:	6178      	str	r0, [r7, #20]
    1228:	68bb      	ldr	r3, [r7, #8]
    122a:	68db      	ldr	r3, [r3, #12]
    122c:	68b8      	ldr	r0, [r7, #8]
    122e:	4798      	blx	r3
    1230:	697b      	ldr	r3, [r7, #20]
    1232:	2b00      	cmp	r3, #0
    1234:	d007      	beq.n	1246 <timer_process_counted+0xaa>
    1236:	697b      	ldr	r3, [r7, #20]
    1238:	685b      	ldr	r3, [r3, #4]
    123a:	68fa      	ldr	r2, [r7, #12]
    123c:	1ad2      	subs	r2, r2, r3
    123e:	697b      	ldr	r3, [r7, #20]
    1240:	689b      	ldr	r3, [r3, #8]
    1242:	429a      	cmp	r2, r3
    1244:	d2d5      	bcs.n	11f2 <timer_process_counted+0x56>
    1246:	3718      	adds	r7, #24
    1248:	46bd      	mov	sp, r7
    124a:	bd80      	pop	{r7, pc}
    124c:	00001051 	.word	0x00001051
    1250:	00001501 	.word	0x00001501
    1254:	000010ed 	.word	0x000010ed

00001258 <usart_sync_init>:
    1258:	b580      	push	{r7, lr}
    125a:	b086      	sub	sp, #24
    125c:	af00      	add	r7, sp, #0
    125e:	60f8      	str	r0, [r7, #12]
    1260:	60b9      	str	r1, [r7, #8]
    1262:	607a      	str	r2, [r7, #4]
    1264:	68fb      	ldr	r3, [r7, #12]
    1266:	2b00      	cmp	r3, #0
    1268:	d004      	beq.n	1274 <usart_sync_init+0x1c>
    126a:	68bb      	ldr	r3, [r7, #8]
    126c:	2b00      	cmp	r3, #0
    126e:	d001      	beq.n	1274 <usart_sync_init+0x1c>
    1270:	2301      	movs	r3, #1
    1272:	e000      	b.n	1276 <usart_sync_init+0x1e>
    1274:	2300      	movs	r3, #0
    1276:	f003 0301 	and.w	r3, r3, #1
    127a:	b2db      	uxtb	r3, r3
    127c:	2234      	movs	r2, #52	; 0x34
    127e:	490d      	ldr	r1, [pc, #52]	; (12b4 <usart_sync_init+0x5c>)
    1280:	4618      	mov	r0, r3
    1282:	4b0d      	ldr	r3, [pc, #52]	; (12b8 <usart_sync_init+0x60>)
    1284:	4798      	blx	r3
    1286:	68fb      	ldr	r3, [r7, #12]
    1288:	3308      	adds	r3, #8
    128a:	68b9      	ldr	r1, [r7, #8]
    128c:	4618      	mov	r0, r3
    128e:	4b0b      	ldr	r3, [pc, #44]	; (12bc <usart_sync_init+0x64>)
    1290:	4798      	blx	r3
    1292:	6178      	str	r0, [r7, #20]
    1294:	697b      	ldr	r3, [r7, #20]
    1296:	2b00      	cmp	r3, #0
    1298:	d001      	beq.n	129e <usart_sync_init+0x46>
    129a:	697b      	ldr	r3, [r7, #20]
    129c:	e006      	b.n	12ac <usart_sync_init+0x54>
    129e:	68fb      	ldr	r3, [r7, #12]
    12a0:	4a07      	ldr	r2, [pc, #28]	; (12c0 <usart_sync_init+0x68>)
    12a2:	605a      	str	r2, [r3, #4]
    12a4:	68fb      	ldr	r3, [r7, #12]
    12a6:	4a07      	ldr	r2, [pc, #28]	; (12c4 <usart_sync_init+0x6c>)
    12a8:	601a      	str	r2, [r3, #0]
    12aa:	2300      	movs	r3, #0
    12ac:	4618      	mov	r0, r3
    12ae:	3718      	adds	r7, #24
    12b0:	46bd      	mov	sp, r7
    12b2:	bd80      	pop	{r7, pc}
    12b4:	00002abc 	.word	0x00002abc
    12b8:	00001425 	.word	0x00001425
    12bc:	00001c59 	.word	0x00001c59
    12c0:	00001391 	.word	0x00001391
    12c4:	000012c9 	.word	0x000012c9

000012c8 <usart_sync_write>:
    12c8:	b580      	push	{r7, lr}
    12ca:	b086      	sub	sp, #24
    12cc:	af00      	add	r7, sp, #0
    12ce:	60f8      	str	r0, [r7, #12]
    12d0:	60b9      	str	r1, [r7, #8]
    12d2:	4613      	mov	r3, r2
    12d4:	80fb      	strh	r3, [r7, #6]
    12d6:	2300      	movs	r3, #0
    12d8:	617b      	str	r3, [r7, #20]
    12da:	68fb      	ldr	r3, [r7, #12]
    12dc:	613b      	str	r3, [r7, #16]
    12de:	68fb      	ldr	r3, [r7, #12]
    12e0:	2b00      	cmp	r3, #0
    12e2:	d007      	beq.n	12f4 <usart_sync_write+0x2c>
    12e4:	68bb      	ldr	r3, [r7, #8]
    12e6:	2b00      	cmp	r3, #0
    12e8:	d004      	beq.n	12f4 <usart_sync_write+0x2c>
    12ea:	88fb      	ldrh	r3, [r7, #6]
    12ec:	2b00      	cmp	r3, #0
    12ee:	d001      	beq.n	12f4 <usart_sync_write+0x2c>
    12f0:	2301      	movs	r3, #1
    12f2:	e000      	b.n	12f6 <usart_sync_write+0x2e>
    12f4:	2300      	movs	r3, #0
    12f6:	f003 0301 	and.w	r3, r3, #1
    12fa:	b2db      	uxtb	r3, r3
    12fc:	22f1      	movs	r2, #241	; 0xf1
    12fe:	491f      	ldr	r1, [pc, #124]	; (137c <usart_sync_write+0xb4>)
    1300:	4618      	mov	r0, r3
    1302:	4b1f      	ldr	r3, [pc, #124]	; (1380 <usart_sync_write+0xb8>)
    1304:	4798      	blx	r3
    1306:	bf00      	nop
    1308:	693b      	ldr	r3, [r7, #16]
    130a:	3308      	adds	r3, #8
    130c:	4618      	mov	r0, r3
    130e:	4b1d      	ldr	r3, [pc, #116]	; (1384 <usart_sync_write+0xbc>)
    1310:	4798      	blx	r3
    1312:	4603      	mov	r3, r0
    1314:	f083 0301 	eor.w	r3, r3, #1
    1318:	b2db      	uxtb	r3, r3
    131a:	2b00      	cmp	r3, #0
    131c:	d1f4      	bne.n	1308 <usart_sync_write+0x40>
    131e:	693b      	ldr	r3, [r7, #16]
    1320:	f103 0008 	add.w	r0, r3, #8
    1324:	68ba      	ldr	r2, [r7, #8]
    1326:	697b      	ldr	r3, [r7, #20]
    1328:	4413      	add	r3, r2
    132a:	781b      	ldrb	r3, [r3, #0]
    132c:	4619      	mov	r1, r3
    132e:	4b16      	ldr	r3, [pc, #88]	; (1388 <usart_sync_write+0xc0>)
    1330:	4798      	blx	r3
    1332:	bf00      	nop
    1334:	693b      	ldr	r3, [r7, #16]
    1336:	3308      	adds	r3, #8
    1338:	4618      	mov	r0, r3
    133a:	4b12      	ldr	r3, [pc, #72]	; (1384 <usart_sync_write+0xbc>)
    133c:	4798      	blx	r3
    133e:	4603      	mov	r3, r0
    1340:	f083 0301 	eor.w	r3, r3, #1
    1344:	b2db      	uxtb	r3, r3
    1346:	2b00      	cmp	r3, #0
    1348:	d1f4      	bne.n	1334 <usart_sync_write+0x6c>
    134a:	697b      	ldr	r3, [r7, #20]
    134c:	3301      	adds	r3, #1
    134e:	617b      	str	r3, [r7, #20]
    1350:	88fb      	ldrh	r3, [r7, #6]
    1352:	697a      	ldr	r2, [r7, #20]
    1354:	429a      	cmp	r2, r3
    1356:	d3e2      	bcc.n	131e <usart_sync_write+0x56>
    1358:	bf00      	nop
    135a:	693b      	ldr	r3, [r7, #16]
    135c:	3308      	adds	r3, #8
    135e:	4618      	mov	r0, r3
    1360:	4b0a      	ldr	r3, [pc, #40]	; (138c <usart_sync_write+0xc4>)
    1362:	4798      	blx	r3
    1364:	4603      	mov	r3, r0
    1366:	f083 0301 	eor.w	r3, r3, #1
    136a:	b2db      	uxtb	r3, r3
    136c:	2b00      	cmp	r3, #0
    136e:	d1f4      	bne.n	135a <usart_sync_write+0x92>
    1370:	697b      	ldr	r3, [r7, #20]
    1372:	4618      	mov	r0, r3
    1374:	3718      	adds	r7, #24
    1376:	46bd      	mov	sp, r7
    1378:	bd80      	pop	{r7, pc}
    137a:	bf00      	nop
    137c:	00002abc 	.word	0x00002abc
    1380:	00001425 	.word	0x00001425
    1384:	00001ce9 	.word	0x00001ce9
    1388:	00001c9d 	.word	0x00001c9d
    138c:	00001d09 	.word	0x00001d09

00001390 <usart_sync_read>:
    1390:	b590      	push	{r4, r7, lr}
    1392:	b087      	sub	sp, #28
    1394:	af00      	add	r7, sp, #0
    1396:	60f8      	str	r0, [r7, #12]
    1398:	60b9      	str	r1, [r7, #8]
    139a:	4613      	mov	r3, r2
    139c:	80fb      	strh	r3, [r7, #6]
    139e:	2300      	movs	r3, #0
    13a0:	617b      	str	r3, [r7, #20]
    13a2:	68fb      	ldr	r3, [r7, #12]
    13a4:	613b      	str	r3, [r7, #16]
    13a6:	68fb      	ldr	r3, [r7, #12]
    13a8:	2b00      	cmp	r3, #0
    13aa:	d007      	beq.n	13bc <usart_sync_read+0x2c>
    13ac:	68bb      	ldr	r3, [r7, #8]
    13ae:	2b00      	cmp	r3, #0
    13b0:	d004      	beq.n	13bc <usart_sync_read+0x2c>
    13b2:	88fb      	ldrh	r3, [r7, #6]
    13b4:	2b00      	cmp	r3, #0
    13b6:	d001      	beq.n	13bc <usart_sync_read+0x2c>
    13b8:	2301      	movs	r3, #1
    13ba:	e000      	b.n	13be <usart_sync_read+0x2e>
    13bc:	2300      	movs	r3, #0
    13be:	f003 0301 	and.w	r3, r3, #1
    13c2:	b2db      	uxtb	r3, r3
    13c4:	f44f 7286 	mov.w	r2, #268	; 0x10c
    13c8:	4912      	ldr	r1, [pc, #72]	; (1414 <usart_sync_read+0x84>)
    13ca:	4618      	mov	r0, r3
    13cc:	4b12      	ldr	r3, [pc, #72]	; (1418 <usart_sync_read+0x88>)
    13ce:	4798      	blx	r3
    13d0:	bf00      	nop
    13d2:	693b      	ldr	r3, [r7, #16]
    13d4:	3308      	adds	r3, #8
    13d6:	4618      	mov	r0, r3
    13d8:	4b10      	ldr	r3, [pc, #64]	; (141c <usart_sync_read+0x8c>)
    13da:	4798      	blx	r3
    13dc:	4603      	mov	r3, r0
    13de:	f083 0301 	eor.w	r3, r3, #1
    13e2:	b2db      	uxtb	r3, r3
    13e4:	2b00      	cmp	r3, #0
    13e6:	d1f4      	bne.n	13d2 <usart_sync_read+0x42>
    13e8:	68ba      	ldr	r2, [r7, #8]
    13ea:	697b      	ldr	r3, [r7, #20]
    13ec:	18d4      	adds	r4, r2, r3
    13ee:	693b      	ldr	r3, [r7, #16]
    13f0:	3308      	adds	r3, #8
    13f2:	4618      	mov	r0, r3
    13f4:	4b0a      	ldr	r3, [pc, #40]	; (1420 <usart_sync_read+0x90>)
    13f6:	4798      	blx	r3
    13f8:	4603      	mov	r3, r0
    13fa:	7023      	strb	r3, [r4, #0]
    13fc:	697b      	ldr	r3, [r7, #20]
    13fe:	3301      	adds	r3, #1
    1400:	617b      	str	r3, [r7, #20]
    1402:	88fb      	ldrh	r3, [r7, #6]
    1404:	697a      	ldr	r2, [r7, #20]
    1406:	429a      	cmp	r2, r3
    1408:	d3e2      	bcc.n	13d0 <usart_sync_read+0x40>
    140a:	697b      	ldr	r3, [r7, #20]
    140c:	4618      	mov	r0, r3
    140e:	371c      	adds	r7, #28
    1410:	46bd      	mov	sp, r7
    1412:	bd90      	pop	{r4, r7, pc}
    1414:	00002abc 	.word	0x00002abc
    1418:	00001425 	.word	0x00001425
    141c:	00001d29 	.word	0x00001d29
    1420:	00001cc5 	.word	0x00001cc5

00001424 <assert>:
    1424:	b480      	push	{r7}
    1426:	b085      	sub	sp, #20
    1428:	af00      	add	r7, sp, #0
    142a:	4603      	mov	r3, r0
    142c:	60b9      	str	r1, [r7, #8]
    142e:	607a      	str	r2, [r7, #4]
    1430:	73fb      	strb	r3, [r7, #15]
    1432:	7bfb      	ldrb	r3, [r7, #15]
    1434:	f083 0301 	eor.w	r3, r3, #1
    1438:	b2db      	uxtb	r3, r3
    143a:	2b00      	cmp	r3, #0
    143c:	d000      	beq.n	1440 <assert+0x1c>
    143e:	be00      	bkpt	0x0000
    1440:	bf00      	nop
    1442:	3714      	adds	r7, #20
    1444:	46bd      	mov	sp, r7
    1446:	f85d 7b04 	ldr.w	r7, [sp], #4
    144a:	4770      	bx	lr

0000144c <is_list_element>:
    144c:	b480      	push	{r7}
    144e:	b085      	sub	sp, #20
    1450:	af00      	add	r7, sp, #0
    1452:	6078      	str	r0, [r7, #4]
    1454:	6039      	str	r1, [r7, #0]
    1456:	687b      	ldr	r3, [r7, #4]
    1458:	681b      	ldr	r3, [r3, #0]
    145a:	60fb      	str	r3, [r7, #12]
    145c:	e008      	b.n	1470 <is_list_element+0x24>
    145e:	68fa      	ldr	r2, [r7, #12]
    1460:	683b      	ldr	r3, [r7, #0]
    1462:	429a      	cmp	r2, r3
    1464:	d101      	bne.n	146a <is_list_element+0x1e>
    1466:	2301      	movs	r3, #1
    1468:	e006      	b.n	1478 <is_list_element+0x2c>
    146a:	68fb      	ldr	r3, [r7, #12]
    146c:	681b      	ldr	r3, [r3, #0]
    146e:	60fb      	str	r3, [r7, #12]
    1470:	68fb      	ldr	r3, [r7, #12]
    1472:	2b00      	cmp	r3, #0
    1474:	d1f3      	bne.n	145e <is_list_element+0x12>
    1476:	2300      	movs	r3, #0
    1478:	4618      	mov	r0, r3
    147a:	3714      	adds	r7, #20
    147c:	46bd      	mov	sp, r7
    147e:	f85d 7b04 	ldr.w	r7, [sp], #4
    1482:	4770      	bx	lr

00001484 <list_insert_as_head>:
    1484:	b580      	push	{r7, lr}
    1486:	b082      	sub	sp, #8
    1488:	af00      	add	r7, sp, #0
    148a:	6078      	str	r0, [r7, #4]
    148c:	6039      	str	r1, [r7, #0]
    148e:	6839      	ldr	r1, [r7, #0]
    1490:	6878      	ldr	r0, [r7, #4]
    1492:	4b0f      	ldr	r3, [pc, #60]	; (14d0 <list_insert_as_head+0x4c>)
    1494:	4798      	blx	r3
    1496:	4603      	mov	r3, r0
    1498:	2b00      	cmp	r3, #0
    149a:	bf14      	ite	ne
    149c:	2301      	movne	r3, #1
    149e:	2300      	moveq	r3, #0
    14a0:	b2db      	uxtb	r3, r3
    14a2:	f083 0301 	eor.w	r3, r3, #1
    14a6:	b2db      	uxtb	r3, r3
    14a8:	f003 0301 	and.w	r3, r3, #1
    14ac:	b2db      	uxtb	r3, r3
    14ae:	2239      	movs	r2, #57	; 0x39
    14b0:	4908      	ldr	r1, [pc, #32]	; (14d4 <list_insert_as_head+0x50>)
    14b2:	4618      	mov	r0, r3
    14b4:	4b08      	ldr	r3, [pc, #32]	; (14d8 <list_insert_as_head+0x54>)
    14b6:	4798      	blx	r3
    14b8:	687b      	ldr	r3, [r7, #4]
    14ba:	681a      	ldr	r2, [r3, #0]
    14bc:	683b      	ldr	r3, [r7, #0]
    14be:	601a      	str	r2, [r3, #0]
    14c0:	687b      	ldr	r3, [r7, #4]
    14c2:	683a      	ldr	r2, [r7, #0]
    14c4:	601a      	str	r2, [r3, #0]
    14c6:	bf00      	nop
    14c8:	3708      	adds	r7, #8
    14ca:	46bd      	mov	sp, r7
    14cc:	bd80      	pop	{r7, pc}
    14ce:	bf00      	nop
    14d0:	0000144d 	.word	0x0000144d
    14d4:	00002ad8 	.word	0x00002ad8
    14d8:	00001425 	.word	0x00001425

000014dc <list_insert_after>:
    14dc:	b480      	push	{r7}
    14de:	b083      	sub	sp, #12
    14e0:	af00      	add	r7, sp, #0
    14e2:	6078      	str	r0, [r7, #4]
    14e4:	6039      	str	r1, [r7, #0]
    14e6:	687b      	ldr	r3, [r7, #4]
    14e8:	681a      	ldr	r2, [r3, #0]
    14ea:	683b      	ldr	r3, [r7, #0]
    14ec:	601a      	str	r2, [r3, #0]
    14ee:	687b      	ldr	r3, [r7, #4]
    14f0:	683a      	ldr	r2, [r7, #0]
    14f2:	601a      	str	r2, [r3, #0]
    14f4:	bf00      	nop
    14f6:	370c      	adds	r7, #12
    14f8:	46bd      	mov	sp, r7
    14fa:	f85d 7b04 	ldr.w	r7, [sp], #4
    14fe:	4770      	bx	lr

00001500 <list_remove_head>:
    1500:	b480      	push	{r7}
    1502:	b085      	sub	sp, #20
    1504:	af00      	add	r7, sp, #0
    1506:	6078      	str	r0, [r7, #4]
    1508:	687b      	ldr	r3, [r7, #4]
    150a:	681b      	ldr	r3, [r3, #0]
    150c:	2b00      	cmp	r3, #0
    150e:	d009      	beq.n	1524 <list_remove_head+0x24>
    1510:	687b      	ldr	r3, [r7, #4]
    1512:	681b      	ldr	r3, [r3, #0]
    1514:	60fb      	str	r3, [r7, #12]
    1516:	687b      	ldr	r3, [r7, #4]
    1518:	681b      	ldr	r3, [r3, #0]
    151a:	681a      	ldr	r2, [r3, #0]
    151c:	687b      	ldr	r3, [r7, #4]
    151e:	601a      	str	r2, [r3, #0]
    1520:	68fb      	ldr	r3, [r7, #12]
    1522:	e000      	b.n	1526 <list_remove_head+0x26>
    1524:	2300      	movs	r3, #0
    1526:	4618      	mov	r0, r3
    1528:	3714      	adds	r7, #20
    152a:	46bd      	mov	sp, r7
    152c:	f85d 7b04 	ldr.w	r7, [sp], #4
    1530:	4770      	bx	lr

00001532 <hri_nvmctrl_set_CTRLA_RWS_bf>:
    1532:	b480      	push	{r7}
    1534:	b083      	sub	sp, #12
    1536:	af00      	add	r7, sp, #0
    1538:	6078      	str	r0, [r7, #4]
    153a:	460b      	mov	r3, r1
    153c:	807b      	strh	r3, [r7, #2]
    153e:	687b      	ldr	r3, [r7, #4]
    1540:	881b      	ldrh	r3, [r3, #0]
    1542:	b29a      	uxth	r2, r3
    1544:	887b      	ldrh	r3, [r7, #2]
    1546:	021b      	lsls	r3, r3, #8
    1548:	b29b      	uxth	r3, r3
    154a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    154e:	b29b      	uxth	r3, r3
    1550:	4313      	orrs	r3, r2
    1552:	b29a      	uxth	r2, r3
    1554:	687b      	ldr	r3, [r7, #4]
    1556:	801a      	strh	r2, [r3, #0]
    1558:	bf00      	nop
    155a:	370c      	adds	r7, #12
    155c:	46bd      	mov	sp, r7
    155e:	f85d 7b04 	ldr.w	r7, [sp], #4
    1562:	4770      	bx	lr

00001564 <_init_chip>:
    1564:	b580      	push	{r7, lr}
    1566:	af00      	add	r7, sp, #0
    1568:	2100      	movs	r1, #0
    156a:	4808      	ldr	r0, [pc, #32]	; (158c <_init_chip+0x28>)
    156c:	4b08      	ldr	r3, [pc, #32]	; (1590 <_init_chip+0x2c>)
    156e:	4798      	blx	r3
    1570:	4b08      	ldr	r3, [pc, #32]	; (1594 <_init_chip+0x30>)
    1572:	4798      	blx	r3
    1574:	4b08      	ldr	r3, [pc, #32]	; (1598 <_init_chip+0x34>)
    1576:	4798      	blx	r3
    1578:	4b08      	ldr	r3, [pc, #32]	; (159c <_init_chip+0x38>)
    157a:	4798      	blx	r3
    157c:	4b08      	ldr	r3, [pc, #32]	; (15a0 <_init_chip+0x3c>)
    157e:	4798      	blx	r3
    1580:	f640 70ff 	movw	r0, #4095	; 0xfff
    1584:	4b07      	ldr	r3, [pc, #28]	; (15a4 <_init_chip+0x40>)
    1586:	4798      	blx	r3
    1588:	bf00      	nop
    158a:	bd80      	pop	{r7, pc}
    158c:	41004000 	.word	0x41004000
    1590:	00001533 	.word	0x00001533
    1594:	000016d1 	.word	0x000016d1
    1598:	00001769 	.word	0x00001769
    159c:	0000164d 	.word	0x0000164d
    15a0:	000017a9 	.word	0x000017a9
    15a4:	000015fd 	.word	0x000015fd

000015a8 <hri_gclk_wait_for_sync>:
    15a8:	b480      	push	{r7}
    15aa:	b083      	sub	sp, #12
    15ac:	af00      	add	r7, sp, #0
    15ae:	6078      	str	r0, [r7, #4]
    15b0:	6039      	str	r1, [r7, #0]
    15b2:	bf00      	nop
    15b4:	687b      	ldr	r3, [r7, #4]
    15b6:	685a      	ldr	r2, [r3, #4]
    15b8:	683b      	ldr	r3, [r7, #0]
    15ba:	4013      	ands	r3, r2
    15bc:	2b00      	cmp	r3, #0
    15be:	d1f9      	bne.n	15b4 <hri_gclk_wait_for_sync+0xc>
    15c0:	bf00      	nop
    15c2:	370c      	adds	r7, #12
    15c4:	46bd      	mov	sp, r7
    15c6:	f85d 7b04 	ldr.w	r7, [sp], #4
    15ca:	4770      	bx	lr

000015cc <hri_gclk_write_GENCTRL_reg>:
    15cc:	b580      	push	{r7, lr}
    15ce:	b084      	sub	sp, #16
    15d0:	af00      	add	r7, sp, #0
    15d2:	60f8      	str	r0, [r7, #12]
    15d4:	460b      	mov	r3, r1
    15d6:	607a      	str	r2, [r7, #4]
    15d8:	72fb      	strb	r3, [r7, #11]
    15da:	7afa      	ldrb	r2, [r7, #11]
    15dc:	68fb      	ldr	r3, [r7, #12]
    15de:	3208      	adds	r2, #8
    15e0:	6879      	ldr	r1, [r7, #4]
    15e2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    15e6:	f643 71fd 	movw	r1, #16381	; 0x3ffd
    15ea:	68f8      	ldr	r0, [r7, #12]
    15ec:	4b02      	ldr	r3, [pc, #8]	; (15f8 <hri_gclk_write_GENCTRL_reg+0x2c>)
    15ee:	4798      	blx	r3
    15f0:	bf00      	nop
    15f2:	3710      	adds	r7, #16
    15f4:	46bd      	mov	sp, r7
    15f6:	bd80      	pop	{r7, pc}
    15f8:	000015a9 	.word	0x000015a9

000015fc <_gclk_init_generators_by_fref>:
    15fc:	b580      	push	{r7, lr}
    15fe:	b082      	sub	sp, #8
    1600:	af00      	add	r7, sp, #0
    1602:	6078      	str	r0, [r7, #4]
    1604:	687b      	ldr	r3, [r7, #4]
    1606:	f003 0301 	and.w	r3, r3, #1
    160a:	2b00      	cmp	r3, #0
    160c:	d004      	beq.n	1618 <_gclk_init_generators_by_fref+0x1c>
    160e:	4a04      	ldr	r2, [pc, #16]	; (1620 <_gclk_init_generators_by_fref+0x24>)
    1610:	2100      	movs	r1, #0
    1612:	4804      	ldr	r0, [pc, #16]	; (1624 <_gclk_init_generators_by_fref+0x28>)
    1614:	4b04      	ldr	r3, [pc, #16]	; (1628 <_gclk_init_generators_by_fref+0x2c>)
    1616:	4798      	blx	r3
    1618:	bf00      	nop
    161a:	3708      	adds	r7, #8
    161c:	46bd      	mov	sp, r7
    161e:	bd80      	pop	{r7, pc}
    1620:	00010101 	.word	0x00010101
    1624:	40001c00 	.word	0x40001c00
    1628:	000015cd 	.word	0x000015cd

0000162c <hri_mclk_write_CPUDIV_reg>:
    162c:	b480      	push	{r7}
    162e:	b083      	sub	sp, #12
    1630:	af00      	add	r7, sp, #0
    1632:	6078      	str	r0, [r7, #4]
    1634:	460b      	mov	r3, r1
    1636:	70fb      	strb	r3, [r7, #3]
    1638:	687b      	ldr	r3, [r7, #4]
    163a:	78fa      	ldrb	r2, [r7, #3]
    163c:	715a      	strb	r2, [r3, #5]
    163e:	bf00      	nop
    1640:	370c      	adds	r7, #12
    1642:	46bd      	mov	sp, r7
    1644:	f85d 7b04 	ldr.w	r7, [sp], #4
    1648:	4770      	bx	lr
	...

0000164c <_mclk_init>:
    164c:	b580      	push	{r7, lr}
    164e:	b082      	sub	sp, #8
    1650:	af00      	add	r7, sp, #0
    1652:	4b05      	ldr	r3, [pc, #20]	; (1668 <_mclk_init+0x1c>)
    1654:	607b      	str	r3, [r7, #4]
    1656:	2101      	movs	r1, #1
    1658:	6878      	ldr	r0, [r7, #4]
    165a:	4b04      	ldr	r3, [pc, #16]	; (166c <_mclk_init+0x20>)
    165c:	4798      	blx	r3
    165e:	bf00      	nop
    1660:	3708      	adds	r7, #8
    1662:	46bd      	mov	sp, r7
    1664:	bd80      	pop	{r7, pc}
    1666:	bf00      	nop
    1668:	40000800 	.word	0x40000800
    166c:	0000162d 	.word	0x0000162d

00001670 <hri_osc32kctrl_write_RTCCTRL_reg>:
    1670:	b480      	push	{r7}
    1672:	b083      	sub	sp, #12
    1674:	af00      	add	r7, sp, #0
    1676:	6078      	str	r0, [r7, #4]
    1678:	460b      	mov	r3, r1
    167a:	70fb      	strb	r3, [r7, #3]
    167c:	687b      	ldr	r3, [r7, #4]
    167e:	78fa      	ldrb	r2, [r7, #3]
    1680:	741a      	strb	r2, [r3, #16]
    1682:	bf00      	nop
    1684:	370c      	adds	r7, #12
    1686:	46bd      	mov	sp, r7
    1688:	f85d 7b04 	ldr.w	r7, [sp], #4
    168c:	4770      	bx	lr

0000168e <hri_osc32kctrl_read_OSCULP32K_CALIB_bf>:
    168e:	b480      	push	{r7}
    1690:	b085      	sub	sp, #20
    1692:	af00      	add	r7, sp, #0
    1694:	6078      	str	r0, [r7, #4]
    1696:	687b      	ldr	r3, [r7, #4]
    1698:	69db      	ldr	r3, [r3, #28]
    169a:	60fb      	str	r3, [r7, #12]
    169c:	68fb      	ldr	r3, [r7, #12]
    169e:	0a1b      	lsrs	r3, r3, #8
    16a0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    16a4:	60fb      	str	r3, [r7, #12]
    16a6:	68fb      	ldr	r3, [r7, #12]
    16a8:	4618      	mov	r0, r3
    16aa:	3714      	adds	r7, #20
    16ac:	46bd      	mov	sp, r7
    16ae:	f85d 7b04 	ldr.w	r7, [sp], #4
    16b2:	4770      	bx	lr

000016b4 <hri_osc32kctrl_write_OSCULP32K_reg>:
    16b4:	b480      	push	{r7}
    16b6:	b083      	sub	sp, #12
    16b8:	af00      	add	r7, sp, #0
    16ba:	6078      	str	r0, [r7, #4]
    16bc:	6039      	str	r1, [r7, #0]
    16be:	687b      	ldr	r3, [r7, #4]
    16c0:	683a      	ldr	r2, [r7, #0]
    16c2:	61da      	str	r2, [r3, #28]
    16c4:	bf00      	nop
    16c6:	370c      	adds	r7, #12
    16c8:	46bd      	mov	sp, r7
    16ca:	f85d 7b04 	ldr.w	r7, [sp], #4
    16ce:	4770      	bx	lr

000016d0 <_osc32kctrl_init_sources>:
    16d0:	b580      	push	{r7, lr}
    16d2:	b082      	sub	sp, #8
    16d4:	af00      	add	r7, sp, #0
    16d6:	4b0c      	ldr	r3, [pc, #48]	; (1708 <_osc32kctrl_init_sources+0x38>)
    16d8:	607b      	str	r3, [r7, #4]
    16da:	2300      	movs	r3, #0
    16dc:	807b      	strh	r3, [r7, #2]
    16de:	6878      	ldr	r0, [r7, #4]
    16e0:	4b0a      	ldr	r3, [pc, #40]	; (170c <_osc32kctrl_init_sources+0x3c>)
    16e2:	4798      	blx	r3
    16e4:	4603      	mov	r3, r0
    16e6:	807b      	strh	r3, [r7, #2]
    16e8:	887b      	ldrh	r3, [r7, #2]
    16ea:	021b      	lsls	r3, r3, #8
    16ec:	f403 537c 	and.w	r3, r3, #16128	; 0x3f00
    16f0:	4619      	mov	r1, r3
    16f2:	6878      	ldr	r0, [r7, #4]
    16f4:	4b06      	ldr	r3, [pc, #24]	; (1710 <_osc32kctrl_init_sources+0x40>)
    16f6:	4798      	blx	r3
    16f8:	2101      	movs	r1, #1
    16fa:	6878      	ldr	r0, [r7, #4]
    16fc:	4b05      	ldr	r3, [pc, #20]	; (1714 <_osc32kctrl_init_sources+0x44>)
    16fe:	4798      	blx	r3
    1700:	bf00      	nop
    1702:	3708      	adds	r7, #8
    1704:	46bd      	mov	sp, r7
    1706:	bd80      	pop	{r7, pc}
    1708:	40001400 	.word	0x40001400
    170c:	0000168f 	.word	0x0000168f
    1710:	000016b5 	.word	0x000016b5
    1714:	00001671 	.word	0x00001671

00001718 <hri_oscctrl_get_STATUS_XOSCRDY1_bit>:
    1718:	b480      	push	{r7}
    171a:	b083      	sub	sp, #12
    171c:	af00      	add	r7, sp, #0
    171e:	6078      	str	r0, [r7, #4]
    1720:	687b      	ldr	r3, [r7, #4]
    1722:	691b      	ldr	r3, [r3, #16]
    1724:	085b      	lsrs	r3, r3, #1
    1726:	f003 0301 	and.w	r3, r3, #1
    172a:	2b00      	cmp	r3, #0
    172c:	bf14      	ite	ne
    172e:	2301      	movne	r3, #1
    1730:	2300      	moveq	r3, #0
    1732:	b2db      	uxtb	r3, r3
    1734:	4618      	mov	r0, r3
    1736:	370c      	adds	r7, #12
    1738:	46bd      	mov	sp, r7
    173a:	f85d 7b04 	ldr.w	r7, [sp], #4
    173e:	4770      	bx	lr

00001740 <hri_oscctrl_write_XOSCCTRL_reg>:
    1740:	b480      	push	{r7}
    1742:	b085      	sub	sp, #20
    1744:	af00      	add	r7, sp, #0
    1746:	60f8      	str	r0, [r7, #12]
    1748:	460b      	mov	r3, r1
    174a:	607a      	str	r2, [r7, #4]
    174c:	72fb      	strb	r3, [r7, #11]
    174e:	7afb      	ldrb	r3, [r7, #11]
    1750:	68fa      	ldr	r2, [r7, #12]
    1752:	3304      	adds	r3, #4
    1754:	009b      	lsls	r3, r3, #2
    1756:	4413      	add	r3, r2
    1758:	687a      	ldr	r2, [r7, #4]
    175a:	605a      	str	r2, [r3, #4]
    175c:	bf00      	nop
    175e:	3714      	adds	r7, #20
    1760:	46bd      	mov	sp, r7
    1762:	f85d 7b04 	ldr.w	r7, [sp], #4
    1766:	4770      	bx	lr

00001768 <_oscctrl_init_sources>:
    1768:	b580      	push	{r7, lr}
    176a:	b082      	sub	sp, #8
    176c:	af00      	add	r7, sp, #0
    176e:	4b0a      	ldr	r3, [pc, #40]	; (1798 <_oscctrl_init_sources+0x30>)
    1770:	607b      	str	r3, [r7, #4]
    1772:	4a0a      	ldr	r2, [pc, #40]	; (179c <_oscctrl_init_sources+0x34>)
    1774:	2101      	movs	r1, #1
    1776:	6878      	ldr	r0, [r7, #4]
    1778:	4b09      	ldr	r3, [pc, #36]	; (17a0 <_oscctrl_init_sources+0x38>)
    177a:	4798      	blx	r3
    177c:	bf00      	nop
    177e:	6878      	ldr	r0, [r7, #4]
    1780:	4b08      	ldr	r3, [pc, #32]	; (17a4 <_oscctrl_init_sources+0x3c>)
    1782:	4798      	blx	r3
    1784:	4603      	mov	r3, r0
    1786:	f083 0301 	eor.w	r3, r3, #1
    178a:	b2db      	uxtb	r3, r3
    178c:	2b00      	cmp	r3, #0
    178e:	d1f6      	bne.n	177e <_oscctrl_init_sources+0x16>
    1790:	bf00      	nop
    1792:	3708      	adds	r7, #8
    1794:	46bd      	mov	sp, r7
    1796:	bd80      	pop	{r7, pc}
    1798:	40001000 	.word	0x40001000
    179c:	03002606 	.word	0x03002606
    17a0:	00001741 	.word	0x00001741
    17a4:	00001719 	.word	0x00001719

000017a8 <_oscctrl_init_referenced_generators>:
    17a8:	b480      	push	{r7}
    17aa:	b083      	sub	sp, #12
    17ac:	af00      	add	r7, sp, #0
    17ae:	4b04      	ldr	r3, [pc, #16]	; (17c0 <_oscctrl_init_referenced_generators+0x18>)
    17b0:	607b      	str	r3, [r7, #4]
    17b2:	bf00      	nop
    17b4:	370c      	adds	r7, #12
    17b6:	46bd      	mov	sp, r7
    17b8:	f85d 7b04 	ldr.w	r7, [sp], #4
    17bc:	4770      	bx	lr
    17be:	bf00      	nop
    17c0:	40001000 	.word	0x40001000

000017c4 <hri_ramecc_read_INTFLAG_reg>:
    17c4:	b480      	push	{r7}
    17c6:	b083      	sub	sp, #12
    17c8:	af00      	add	r7, sp, #0
    17ca:	6078      	str	r0, [r7, #4]
    17cc:	687b      	ldr	r3, [r7, #4]
    17ce:	789b      	ldrb	r3, [r3, #2]
    17d0:	b2db      	uxtb	r3, r3
    17d2:	4618      	mov	r0, r3
    17d4:	370c      	adds	r7, #12
    17d6:	46bd      	mov	sp, r7
    17d8:	f85d 7b04 	ldr.w	r7, [sp], #4
    17dc:	4770      	bx	lr

000017de <hri_ramecc_read_ERRADDR_reg>:
    17de:	b480      	push	{r7}
    17e0:	b083      	sub	sp, #12
    17e2:	af00      	add	r7, sp, #0
    17e4:	6078      	str	r0, [r7, #4]
    17e6:	687b      	ldr	r3, [r7, #4]
    17e8:	685b      	ldr	r3, [r3, #4]
    17ea:	4618      	mov	r0, r3
    17ec:	370c      	adds	r7, #12
    17ee:	46bd      	mov	sp, r7
    17f0:	f85d 7b04 	ldr.w	r7, [sp], #4
    17f4:	4770      	bx	lr
	...

000017f8 <RAMECC_Handler>:
    17f8:	b590      	push	{r4, r7, lr}
    17fa:	b083      	sub	sp, #12
    17fc:	af00      	add	r7, sp, #0
    17fe:	4b17      	ldr	r3, [pc, #92]	; (185c <RAMECC_Handler+0x64>)
    1800:	607b      	str	r3, [r7, #4]
    1802:	4817      	ldr	r0, [pc, #92]	; (1860 <RAMECC_Handler+0x68>)
    1804:	4b17      	ldr	r3, [pc, #92]	; (1864 <RAMECC_Handler+0x6c>)
    1806:	4798      	blx	r3
    1808:	4603      	mov	r3, r0
    180a:	603b      	str	r3, [r7, #0]
    180c:	683b      	ldr	r3, [r7, #0]
    180e:	f003 0302 	and.w	r3, r3, #2
    1812:	2b00      	cmp	r3, #0
    1814:	d00c      	beq.n	1830 <RAMECC_Handler+0x38>
    1816:	687b      	ldr	r3, [r7, #4]
    1818:	681b      	ldr	r3, [r3, #0]
    181a:	2b00      	cmp	r3, #0
    181c:	d008      	beq.n	1830 <RAMECC_Handler+0x38>
    181e:	687b      	ldr	r3, [r7, #4]
    1820:	681c      	ldr	r4, [r3, #0]
    1822:	480f      	ldr	r0, [pc, #60]	; (1860 <RAMECC_Handler+0x68>)
    1824:	4b10      	ldr	r3, [pc, #64]	; (1868 <RAMECC_Handler+0x70>)
    1826:	4798      	blx	r3
    1828:	4603      	mov	r3, r0
    182a:	4618      	mov	r0, r3
    182c:	47a0      	blx	r4
    182e:	e012      	b.n	1856 <RAMECC_Handler+0x5e>
    1830:	683b      	ldr	r3, [r7, #0]
    1832:	f003 0301 	and.w	r3, r3, #1
    1836:	2b00      	cmp	r3, #0
    1838:	d00c      	beq.n	1854 <RAMECC_Handler+0x5c>
    183a:	687b      	ldr	r3, [r7, #4]
    183c:	685b      	ldr	r3, [r3, #4]
    183e:	2b00      	cmp	r3, #0
    1840:	d008      	beq.n	1854 <RAMECC_Handler+0x5c>
    1842:	687b      	ldr	r3, [r7, #4]
    1844:	685c      	ldr	r4, [r3, #4]
    1846:	4806      	ldr	r0, [pc, #24]	; (1860 <RAMECC_Handler+0x68>)
    1848:	4b07      	ldr	r3, [pc, #28]	; (1868 <RAMECC_Handler+0x70>)
    184a:	4798      	blx	r3
    184c:	4603      	mov	r3, r0
    184e:	4618      	mov	r0, r3
    1850:	47a0      	blx	r4
    1852:	e000      	b.n	1856 <RAMECC_Handler+0x5e>
    1854:	bf00      	nop
    1856:	370c      	adds	r7, #12
    1858:	46bd      	mov	sp, r7
    185a:	bd90      	pop	{r4, r7, pc}
    185c:	200000a4 	.word	0x200000a4
    1860:	41020000 	.word	0x41020000
    1864:	000017c5 	.word	0x000017c5
    1868:	000017df 	.word	0x000017df

0000186c <hri_rtcmode0_wait_for_sync>:
    186c:	b480      	push	{r7}
    186e:	b083      	sub	sp, #12
    1870:	af00      	add	r7, sp, #0
    1872:	6078      	str	r0, [r7, #4]
    1874:	6039      	str	r1, [r7, #0]
    1876:	bf00      	nop
    1878:	687b      	ldr	r3, [r7, #4]
    187a:	691a      	ldr	r2, [r3, #16]
    187c:	683b      	ldr	r3, [r7, #0]
    187e:	4013      	ands	r3, r2
    1880:	2b00      	cmp	r3, #0
    1882:	d1f9      	bne.n	1878 <hri_rtcmode0_wait_for_sync+0xc>
    1884:	bf00      	nop
    1886:	370c      	adds	r7, #12
    1888:	46bd      	mov	sp, r7
    188a:	f85d 7b04 	ldr.w	r7, [sp], #4
    188e:	4770      	bx	lr

00001890 <hri_rtcmode0_clear_interrupt_CMP0_bit>:
    1890:	b480      	push	{r7}
    1892:	b083      	sub	sp, #12
    1894:	af00      	add	r7, sp, #0
    1896:	6078      	str	r0, [r7, #4]
    1898:	687b      	ldr	r3, [r7, #4]
    189a:	f44f 7280 	mov.w	r2, #256	; 0x100
    189e:	819a      	strh	r2, [r3, #12]
    18a0:	bf00      	nop
    18a2:	370c      	adds	r7, #12
    18a4:	46bd      	mov	sp, r7
    18a6:	f85d 7b04 	ldr.w	r7, [sp], #4
    18aa:	4770      	bx	lr

000018ac <hri_rtcmode0_read_INTFLAG_reg>:
    18ac:	b480      	push	{r7}
    18ae:	b083      	sub	sp, #12
    18b0:	af00      	add	r7, sp, #0
    18b2:	6078      	str	r0, [r7, #4]
    18b4:	687b      	ldr	r3, [r7, #4]
    18b6:	899b      	ldrh	r3, [r3, #12]
    18b8:	b29b      	uxth	r3, r3
    18ba:	4618      	mov	r0, r3
    18bc:	370c      	adds	r7, #12
    18be:	46bd      	mov	sp, r7
    18c0:	f85d 7b04 	ldr.w	r7, [sp], #4
    18c4:	4770      	bx	lr

000018c6 <hri_rtcmode0_set_INTEN_CMP0_bit>:
    18c6:	b480      	push	{r7}
    18c8:	b083      	sub	sp, #12
    18ca:	af00      	add	r7, sp, #0
    18cc:	6078      	str	r0, [r7, #4]
    18ce:	687b      	ldr	r3, [r7, #4]
    18d0:	f44f 7280 	mov.w	r2, #256	; 0x100
    18d4:	815a      	strh	r2, [r3, #10]
    18d6:	bf00      	nop
    18d8:	370c      	adds	r7, #12
    18da:	46bd      	mov	sp, r7
    18dc:	f85d 7b04 	ldr.w	r7, [sp], #4
    18e0:	4770      	bx	lr
	...

000018e4 <hri_rtcmode0_write_CTRLA_reg>:
    18e4:	b580      	push	{r7, lr}
    18e6:	b082      	sub	sp, #8
    18e8:	af00      	add	r7, sp, #0
    18ea:	6078      	str	r0, [r7, #4]
    18ec:	460b      	mov	r3, r1
    18ee:	807b      	strh	r3, [r7, #2]
    18f0:	687b      	ldr	r3, [r7, #4]
    18f2:	887a      	ldrh	r2, [r7, #2]
    18f4:	801a      	strh	r2, [r3, #0]
    18f6:	f248 0103 	movw	r1, #32771	; 0x8003
    18fa:	6878      	ldr	r0, [r7, #4]
    18fc:	4b02      	ldr	r3, [pc, #8]	; (1908 <hri_rtcmode0_write_CTRLA_reg+0x24>)
    18fe:	4798      	blx	r3
    1900:	bf00      	nop
    1902:	3708      	adds	r7, #8
    1904:	46bd      	mov	sp, r7
    1906:	bd80      	pop	{r7, pc}
    1908:	0000186d 	.word	0x0000186d

0000190c <hri_rtcmode0_write_COMP_reg>:
    190c:	b580      	push	{r7, lr}
    190e:	b084      	sub	sp, #16
    1910:	af00      	add	r7, sp, #0
    1912:	60f8      	str	r0, [r7, #12]
    1914:	460b      	mov	r3, r1
    1916:	607a      	str	r2, [r7, #4]
    1918:	72fb      	strb	r3, [r7, #11]
    191a:	7afa      	ldrb	r2, [r7, #11]
    191c:	68fb      	ldr	r3, [r7, #12]
    191e:	3208      	adds	r2, #8
    1920:	6879      	ldr	r1, [r7, #4]
    1922:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    1926:	2160      	movs	r1, #96	; 0x60
    1928:	68f8      	ldr	r0, [r7, #12]
    192a:	4b03      	ldr	r3, [pc, #12]	; (1938 <hri_rtcmode0_write_COMP_reg+0x2c>)
    192c:	4798      	blx	r3
    192e:	bf00      	nop
    1930:	3710      	adds	r7, #16
    1932:	46bd      	mov	sp, r7
    1934:	bd80      	pop	{r7, pc}
    1936:	bf00      	nop
    1938:	0000186d 	.word	0x0000186d

0000193c <_timer_init>:
    193c:	b580      	push	{r7, lr}
    193e:	b082      	sub	sp, #8
    1940:	af00      	add	r7, sp, #0
    1942:	6078      	str	r0, [r7, #4]
    1944:	6039      	str	r1, [r7, #0]
    1946:	687b      	ldr	r3, [r7, #4]
    1948:	2b00      	cmp	r3, #0
    194a:	bf14      	ite	ne
    194c:	2301      	movne	r3, #1
    194e:	2300      	moveq	r3, #0
    1950:	b2db      	uxtb	r3, r3
    1952:	2230      	movs	r2, #48	; 0x30
    1954:	4916      	ldr	r1, [pc, #88]	; (19b0 <_timer_init+0x74>)
    1956:	4618      	mov	r0, r3
    1958:	4b16      	ldr	r3, [pc, #88]	; (19b4 <_timer_init+0x78>)
    195a:	4798      	blx	r3
    195c:	687b      	ldr	r3, [r7, #4]
    195e:	683a      	ldr	r2, [r7, #0]
    1960:	60da      	str	r2, [r3, #12]
    1962:	687b      	ldr	r3, [r7, #4]
    1964:	68db      	ldr	r3, [r3, #12]
    1966:	2101      	movs	r1, #1
    1968:	4618      	mov	r0, r3
    196a:	4b13      	ldr	r3, [pc, #76]	; (19b8 <_timer_init+0x7c>)
    196c:	4798      	blx	r3
    196e:	687b      	ldr	r3, [r7, #4]
    1970:	68db      	ldr	r3, [r3, #12]
    1972:	2101      	movs	r1, #1
    1974:	4618      	mov	r0, r3
    1976:	4b11      	ldr	r3, [pc, #68]	; (19bc <_timer_init+0x80>)
    1978:	4798      	blx	r3
    197a:	687b      	ldr	r3, [r7, #4]
    197c:	68db      	ldr	r3, [r3, #12]
    197e:	f248 0180 	movw	r1, #32896	; 0x8080
    1982:	4618      	mov	r0, r3
    1984:	4b0c      	ldr	r3, [pc, #48]	; (19b8 <_timer_init+0x7c>)
    1986:	4798      	blx	r3
    1988:	687b      	ldr	r3, [r7, #4]
    198a:	68db      	ldr	r3, [r3, #12]
    198c:	2220      	movs	r2, #32
    198e:	2100      	movs	r1, #0
    1990:	4618      	mov	r0, r3
    1992:	4b0b      	ldr	r3, [pc, #44]	; (19c0 <_timer_init+0x84>)
    1994:	4798      	blx	r3
    1996:	687b      	ldr	r3, [r7, #4]
    1998:	68db      	ldr	r3, [r3, #12]
    199a:	4618      	mov	r0, r3
    199c:	4b09      	ldr	r3, [pc, #36]	; (19c4 <_timer_init+0x88>)
    199e:	4798      	blx	r3
    19a0:	4a09      	ldr	r2, [pc, #36]	; (19c8 <_timer_init+0x8c>)
    19a2:	687b      	ldr	r3, [r7, #4]
    19a4:	6013      	str	r3, [r2, #0]
    19a6:	2300      	movs	r3, #0
    19a8:	4618      	mov	r0, r3
    19aa:	3708      	adds	r7, #8
    19ac:	46bd      	mov	sp, r7
    19ae:	bd80      	pop	{r7, pc}
    19b0:	00002af8 	.word	0x00002af8
    19b4:	00001425 	.word	0x00001425
    19b8:	000018e5 	.word	0x000018e5
    19bc:	0000186d 	.word	0x0000186d
    19c0:	0000190d 	.word	0x0000190d
    19c4:	000018c7 	.word	0x000018c7
    19c8:	20000058 	.word	0x20000058

000019cc <_rtc_timer_interrupt_handler>:
    19cc:	b580      	push	{r7, lr}
    19ce:	b084      	sub	sp, #16
    19d0:	af00      	add	r7, sp, #0
    19d2:	6078      	str	r0, [r7, #4]
    19d4:	687b      	ldr	r3, [r7, #4]
    19d6:	68db      	ldr	r3, [r3, #12]
    19d8:	4618      	mov	r0, r3
    19da:	4b0d      	ldr	r3, [pc, #52]	; (1a10 <_rtc_timer_interrupt_handler+0x44>)
    19dc:	4798      	blx	r3
    19de:	4603      	mov	r3, r0
    19e0:	81fb      	strh	r3, [r7, #14]
    19e2:	89fb      	ldrh	r3, [r7, #14]
    19e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
    19e8:	2b00      	cmp	r3, #0
    19ea:	d00c      	beq.n	1a06 <_rtc_timer_interrupt_handler+0x3a>
    19ec:	687b      	ldr	r3, [r7, #4]
    19ee:	681b      	ldr	r3, [r3, #0]
    19f0:	2b00      	cmp	r3, #0
    19f2:	d003      	beq.n	19fc <_rtc_timer_interrupt_handler+0x30>
    19f4:	687b      	ldr	r3, [r7, #4]
    19f6:	681b      	ldr	r3, [r3, #0]
    19f8:	6878      	ldr	r0, [r7, #4]
    19fa:	4798      	blx	r3
    19fc:	687b      	ldr	r3, [r7, #4]
    19fe:	68db      	ldr	r3, [r3, #12]
    1a00:	4618      	mov	r0, r3
    1a02:	4b04      	ldr	r3, [pc, #16]	; (1a14 <_rtc_timer_interrupt_handler+0x48>)
    1a04:	4798      	blx	r3
    1a06:	bf00      	nop
    1a08:	3710      	adds	r7, #16
    1a0a:	46bd      	mov	sp, r7
    1a0c:	bd80      	pop	{r7, pc}
    1a0e:	bf00      	nop
    1a10:	000018ad 	.word	0x000018ad
    1a14:	00001891 	.word	0x00001891

00001a18 <_rtc_get_timer>:
    1a18:	b480      	push	{r7}
    1a1a:	af00      	add	r7, sp, #0
    1a1c:	2300      	movs	r3, #0
    1a1e:	4618      	mov	r0, r3
    1a20:	46bd      	mov	sp, r7
    1a22:	f85d 7b04 	ldr.w	r7, [sp], #4
    1a26:	4770      	bx	lr

00001a28 <RTC_Handler>:
    1a28:	b580      	push	{r7, lr}
    1a2a:	af00      	add	r7, sp, #0
    1a2c:	4b03      	ldr	r3, [pc, #12]	; (1a3c <RTC_Handler+0x14>)
    1a2e:	681b      	ldr	r3, [r3, #0]
    1a30:	4618      	mov	r0, r3
    1a32:	4b03      	ldr	r3, [pc, #12]	; (1a40 <RTC_Handler+0x18>)
    1a34:	4798      	blx	r3
    1a36:	bf00      	nop
    1a38:	bd80      	pop	{r7, pc}
    1a3a:	bf00      	nop
    1a3c:	20000058 	.word	0x20000058
    1a40:	000019cd 	.word	0x000019cd

00001a44 <hri_sercomusart_wait_for_sync>:
    1a44:	b480      	push	{r7}
    1a46:	b083      	sub	sp, #12
    1a48:	af00      	add	r7, sp, #0
    1a4a:	6078      	str	r0, [r7, #4]
    1a4c:	6039      	str	r1, [r7, #0]
    1a4e:	bf00      	nop
    1a50:	687b      	ldr	r3, [r7, #4]
    1a52:	69da      	ldr	r2, [r3, #28]
    1a54:	683b      	ldr	r3, [r7, #0]
    1a56:	4013      	ands	r3, r2
    1a58:	2b00      	cmp	r3, #0
    1a5a:	d1f9      	bne.n	1a50 <hri_sercomusart_wait_for_sync+0xc>
    1a5c:	bf00      	nop
    1a5e:	370c      	adds	r7, #12
    1a60:	46bd      	mov	sp, r7
    1a62:	f85d 7b04 	ldr.w	r7, [sp], #4
    1a66:	4770      	bx	lr

00001a68 <hri_sercomusart_is_syncing>:
    1a68:	b480      	push	{r7}
    1a6a:	b083      	sub	sp, #12
    1a6c:	af00      	add	r7, sp, #0
    1a6e:	6078      	str	r0, [r7, #4]
    1a70:	6039      	str	r1, [r7, #0]
    1a72:	687b      	ldr	r3, [r7, #4]
    1a74:	69da      	ldr	r2, [r3, #28]
    1a76:	683b      	ldr	r3, [r7, #0]
    1a78:	4013      	ands	r3, r2
    1a7a:	2b00      	cmp	r3, #0
    1a7c:	bf14      	ite	ne
    1a7e:	2301      	movne	r3, #1
    1a80:	2300      	moveq	r3, #0
    1a82:	b2db      	uxtb	r3, r3
    1a84:	4618      	mov	r0, r3
    1a86:	370c      	adds	r7, #12
    1a88:	46bd      	mov	sp, r7
    1a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
    1a8e:	4770      	bx	lr

00001a90 <hri_sercomusart_get_interrupt_DRE_bit>:
    1a90:	b480      	push	{r7}
    1a92:	b083      	sub	sp, #12
    1a94:	af00      	add	r7, sp, #0
    1a96:	6078      	str	r0, [r7, #4]
    1a98:	687b      	ldr	r3, [r7, #4]
    1a9a:	7e1b      	ldrb	r3, [r3, #24]
    1a9c:	b2db      	uxtb	r3, r3
    1a9e:	f003 0301 	and.w	r3, r3, #1
    1aa2:	2b00      	cmp	r3, #0
    1aa4:	bf14      	ite	ne
    1aa6:	2301      	movne	r3, #1
    1aa8:	2300      	moveq	r3, #0
    1aaa:	b2db      	uxtb	r3, r3
    1aac:	4618      	mov	r0, r3
    1aae:	370c      	adds	r7, #12
    1ab0:	46bd      	mov	sp, r7
    1ab2:	f85d 7b04 	ldr.w	r7, [sp], #4
    1ab6:	4770      	bx	lr

00001ab8 <hri_sercomusart_get_interrupt_TXC_bit>:
    1ab8:	b480      	push	{r7}
    1aba:	b083      	sub	sp, #12
    1abc:	af00      	add	r7, sp, #0
    1abe:	6078      	str	r0, [r7, #4]
    1ac0:	687b      	ldr	r3, [r7, #4]
    1ac2:	7e1b      	ldrb	r3, [r3, #24]
    1ac4:	b2db      	uxtb	r3, r3
    1ac6:	085b      	lsrs	r3, r3, #1
    1ac8:	f003 0301 	and.w	r3, r3, #1
    1acc:	2b00      	cmp	r3, #0
    1ace:	bf14      	ite	ne
    1ad0:	2301      	movne	r3, #1
    1ad2:	2300      	moveq	r3, #0
    1ad4:	b2db      	uxtb	r3, r3
    1ad6:	4618      	mov	r0, r3
    1ad8:	370c      	adds	r7, #12
    1ada:	46bd      	mov	sp, r7
    1adc:	f85d 7b04 	ldr.w	r7, [sp], #4
    1ae0:	4770      	bx	lr

00001ae2 <hri_sercomusart_get_interrupt_RXC_bit>:
    1ae2:	b480      	push	{r7}
    1ae4:	b083      	sub	sp, #12
    1ae6:	af00      	add	r7, sp, #0
    1ae8:	6078      	str	r0, [r7, #4]
    1aea:	687b      	ldr	r3, [r7, #4]
    1aec:	7e1b      	ldrb	r3, [r3, #24]
    1aee:	b2db      	uxtb	r3, r3
    1af0:	089b      	lsrs	r3, r3, #2
    1af2:	f003 0301 	and.w	r3, r3, #1
    1af6:	2b00      	cmp	r3, #0
    1af8:	bf14      	ite	ne
    1afa:	2301      	movne	r3, #1
    1afc:	2300      	moveq	r3, #0
    1afe:	b2db      	uxtb	r3, r3
    1b00:	4618      	mov	r0, r3
    1b02:	370c      	adds	r7, #12
    1b04:	46bd      	mov	sp, r7
    1b06:	f85d 7b04 	ldr.w	r7, [sp], #4
    1b0a:	4770      	bx	lr

00001b0c <hri_sercomusart_clear_CTRLA_ENABLE_bit>:
    1b0c:	b580      	push	{r7, lr}
    1b0e:	b082      	sub	sp, #8
    1b10:	af00      	add	r7, sp, #0
    1b12:	6078      	str	r0, [r7, #4]
    1b14:	687b      	ldr	r3, [r7, #4]
    1b16:	681b      	ldr	r3, [r3, #0]
    1b18:	f023 0202 	bic.w	r2, r3, #2
    1b1c:	687b      	ldr	r3, [r7, #4]
    1b1e:	601a      	str	r2, [r3, #0]
    1b20:	2103      	movs	r1, #3
    1b22:	6878      	ldr	r0, [r7, #4]
    1b24:	4b02      	ldr	r3, [pc, #8]	; (1b30 <hri_sercomusart_clear_CTRLA_ENABLE_bit+0x24>)
    1b26:	4798      	blx	r3
    1b28:	bf00      	nop
    1b2a:	3708      	adds	r7, #8
    1b2c:	46bd      	mov	sp, r7
    1b2e:	bd80      	pop	{r7, pc}
    1b30:	00001a45 	.word	0x00001a45

00001b34 <hri_sercomusart_get_CTRLA_reg>:
    1b34:	b580      	push	{r7, lr}
    1b36:	b084      	sub	sp, #16
    1b38:	af00      	add	r7, sp, #0
    1b3a:	6078      	str	r0, [r7, #4]
    1b3c:	6039      	str	r1, [r7, #0]
    1b3e:	2103      	movs	r1, #3
    1b40:	6878      	ldr	r0, [r7, #4]
    1b42:	4b07      	ldr	r3, [pc, #28]	; (1b60 <hri_sercomusart_get_CTRLA_reg+0x2c>)
    1b44:	4798      	blx	r3
    1b46:	687b      	ldr	r3, [r7, #4]
    1b48:	681b      	ldr	r3, [r3, #0]
    1b4a:	60fb      	str	r3, [r7, #12]
    1b4c:	68fa      	ldr	r2, [r7, #12]
    1b4e:	683b      	ldr	r3, [r7, #0]
    1b50:	4013      	ands	r3, r2
    1b52:	60fb      	str	r3, [r7, #12]
    1b54:	68fb      	ldr	r3, [r7, #12]
    1b56:	4618      	mov	r0, r3
    1b58:	3710      	adds	r7, #16
    1b5a:	46bd      	mov	sp, r7
    1b5c:	bd80      	pop	{r7, pc}
    1b5e:	bf00      	nop
    1b60:	00001a45 	.word	0x00001a45

00001b64 <hri_sercomusart_write_CTRLA_reg>:
    1b64:	b580      	push	{r7, lr}
    1b66:	b082      	sub	sp, #8
    1b68:	af00      	add	r7, sp, #0
    1b6a:	6078      	str	r0, [r7, #4]
    1b6c:	6039      	str	r1, [r7, #0]
    1b6e:	687b      	ldr	r3, [r7, #4]
    1b70:	683a      	ldr	r2, [r7, #0]
    1b72:	601a      	str	r2, [r3, #0]
    1b74:	2103      	movs	r1, #3
    1b76:	6878      	ldr	r0, [r7, #4]
    1b78:	4b02      	ldr	r3, [pc, #8]	; (1b84 <hri_sercomusart_write_CTRLA_reg+0x20>)
    1b7a:	4798      	blx	r3
    1b7c:	bf00      	nop
    1b7e:	3708      	adds	r7, #8
    1b80:	46bd      	mov	sp, r7
    1b82:	bd80      	pop	{r7, pc}
    1b84:	00001a45 	.word	0x00001a45

00001b88 <hri_sercomusart_write_CTRLB_reg>:
    1b88:	b580      	push	{r7, lr}
    1b8a:	b082      	sub	sp, #8
    1b8c:	af00      	add	r7, sp, #0
    1b8e:	6078      	str	r0, [r7, #4]
    1b90:	6039      	str	r1, [r7, #0]
    1b92:	687b      	ldr	r3, [r7, #4]
    1b94:	683a      	ldr	r2, [r7, #0]
    1b96:	605a      	str	r2, [r3, #4]
    1b98:	211f      	movs	r1, #31
    1b9a:	6878      	ldr	r0, [r7, #4]
    1b9c:	4b02      	ldr	r3, [pc, #8]	; (1ba8 <hri_sercomusart_write_CTRLB_reg+0x20>)
    1b9e:	4798      	blx	r3
    1ba0:	bf00      	nop
    1ba2:	3708      	adds	r7, #8
    1ba4:	46bd      	mov	sp, r7
    1ba6:	bd80      	pop	{r7, pc}
    1ba8:	00001a45 	.word	0x00001a45

00001bac <hri_sercomusart_write_CTRLC_reg>:
    1bac:	b480      	push	{r7}
    1bae:	b083      	sub	sp, #12
    1bb0:	af00      	add	r7, sp, #0
    1bb2:	6078      	str	r0, [r7, #4]
    1bb4:	6039      	str	r1, [r7, #0]
    1bb6:	687b      	ldr	r3, [r7, #4]
    1bb8:	683a      	ldr	r2, [r7, #0]
    1bba:	609a      	str	r2, [r3, #8]
    1bbc:	bf00      	nop
    1bbe:	370c      	adds	r7, #12
    1bc0:	46bd      	mov	sp, r7
    1bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
    1bc6:	4770      	bx	lr

00001bc8 <hri_sercomusart_write_BAUD_reg>:
    1bc8:	b480      	push	{r7}
    1bca:	b083      	sub	sp, #12
    1bcc:	af00      	add	r7, sp, #0
    1bce:	6078      	str	r0, [r7, #4]
    1bd0:	460b      	mov	r3, r1
    1bd2:	807b      	strh	r3, [r7, #2]
    1bd4:	687b      	ldr	r3, [r7, #4]
    1bd6:	887a      	ldrh	r2, [r7, #2]
    1bd8:	819a      	strh	r2, [r3, #12]
    1bda:	bf00      	nop
    1bdc:	370c      	adds	r7, #12
    1bde:	46bd      	mov	sp, r7
    1be0:	f85d 7b04 	ldr.w	r7, [sp], #4
    1be4:	4770      	bx	lr

00001be6 <hri_sercomusart_write_RXPL_reg>:
    1be6:	b480      	push	{r7}
    1be8:	b083      	sub	sp, #12
    1bea:	af00      	add	r7, sp, #0
    1bec:	6078      	str	r0, [r7, #4]
    1bee:	460b      	mov	r3, r1
    1bf0:	70fb      	strb	r3, [r7, #3]
    1bf2:	687b      	ldr	r3, [r7, #4]
    1bf4:	78fa      	ldrb	r2, [r7, #3]
    1bf6:	739a      	strb	r2, [r3, #14]
    1bf8:	bf00      	nop
    1bfa:	370c      	adds	r7, #12
    1bfc:	46bd      	mov	sp, r7
    1bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
    1c02:	4770      	bx	lr

00001c04 <hri_sercomusart_write_DATA_reg>:
    1c04:	b480      	push	{r7}
    1c06:	b083      	sub	sp, #12
    1c08:	af00      	add	r7, sp, #0
    1c0a:	6078      	str	r0, [r7, #4]
    1c0c:	6039      	str	r1, [r7, #0]
    1c0e:	687b      	ldr	r3, [r7, #4]
    1c10:	683a      	ldr	r2, [r7, #0]
    1c12:	629a      	str	r2, [r3, #40]	; 0x28
    1c14:	bf00      	nop
    1c16:	370c      	adds	r7, #12
    1c18:	46bd      	mov	sp, r7
    1c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
    1c1e:	4770      	bx	lr

00001c20 <hri_sercomusart_read_DATA_reg>:
    1c20:	b480      	push	{r7}
    1c22:	b083      	sub	sp, #12
    1c24:	af00      	add	r7, sp, #0
    1c26:	6078      	str	r0, [r7, #4]
    1c28:	687b      	ldr	r3, [r7, #4]
    1c2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1c2c:	4618      	mov	r0, r3
    1c2e:	370c      	adds	r7, #12
    1c30:	46bd      	mov	sp, r7
    1c32:	f85d 7b04 	ldr.w	r7, [sp], #4
    1c36:	4770      	bx	lr

00001c38 <hri_sercomusart_write_DBGCTRL_reg>:
    1c38:	b480      	push	{r7}
    1c3a:	b083      	sub	sp, #12
    1c3c:	af00      	add	r7, sp, #0
    1c3e:	6078      	str	r0, [r7, #4]
    1c40:	460b      	mov	r3, r1
    1c42:	70fb      	strb	r3, [r7, #3]
    1c44:	687b      	ldr	r3, [r7, #4]
    1c46:	78fa      	ldrb	r2, [r7, #3]
    1c48:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
    1c4c:	bf00      	nop
    1c4e:	370c      	adds	r7, #12
    1c50:	46bd      	mov	sp, r7
    1c52:	f85d 7b04 	ldr.w	r7, [sp], #4
    1c56:	4770      	bx	lr

00001c58 <_usart_sync_init>:
    1c58:	b580      	push	{r7, lr}
    1c5a:	b082      	sub	sp, #8
    1c5c:	af00      	add	r7, sp, #0
    1c5e:	6078      	str	r0, [r7, #4]
    1c60:	6039      	str	r1, [r7, #0]
    1c62:	687b      	ldr	r3, [r7, #4]
    1c64:	2b00      	cmp	r3, #0
    1c66:	bf14      	ite	ne
    1c68:	2301      	movne	r3, #1
    1c6a:	2300      	moveq	r3, #0
    1c6c:	b2db      	uxtb	r3, r3
    1c6e:	22bb      	movs	r2, #187	; 0xbb
    1c70:	4907      	ldr	r1, [pc, #28]	; (1c90 <_usart_sync_init+0x38>)
    1c72:	4618      	mov	r0, r3
    1c74:	4b07      	ldr	r3, [pc, #28]	; (1c94 <_usart_sync_init+0x3c>)
    1c76:	4798      	blx	r3
    1c78:	687b      	ldr	r3, [r7, #4]
    1c7a:	683a      	ldr	r2, [r7, #0]
    1c7c:	601a      	str	r2, [r3, #0]
    1c7e:	6838      	ldr	r0, [r7, #0]
    1c80:	4b05      	ldr	r3, [pc, #20]	; (1c98 <_usart_sync_init+0x40>)
    1c82:	4798      	blx	r3
    1c84:	4603      	mov	r3, r0
    1c86:	4618      	mov	r0, r3
    1c88:	3708      	adds	r7, #8
    1c8a:	46bd      	mov	sp, r7
    1c8c:	bd80      	pop	{r7, pc}
    1c8e:	bf00      	nop
    1c90:	00002b10 	.word	0x00002b10
    1c94:	00001425 	.word	0x00001425
    1c98:	00001e09 	.word	0x00001e09

00001c9c <_usart_sync_write_byte>:
    1c9c:	b580      	push	{r7, lr}
    1c9e:	b082      	sub	sp, #8
    1ca0:	af00      	add	r7, sp, #0
    1ca2:	6078      	str	r0, [r7, #4]
    1ca4:	460b      	mov	r3, r1
    1ca6:	70fb      	strb	r3, [r7, #3]
    1ca8:	687b      	ldr	r3, [r7, #4]
    1caa:	681b      	ldr	r3, [r3, #0]
    1cac:	78fa      	ldrb	r2, [r7, #3]
    1cae:	4611      	mov	r1, r2
    1cb0:	4618      	mov	r0, r3
    1cb2:	4b03      	ldr	r3, [pc, #12]	; (1cc0 <_usart_sync_write_byte+0x24>)
    1cb4:	4798      	blx	r3
    1cb6:	bf00      	nop
    1cb8:	3708      	adds	r7, #8
    1cba:	46bd      	mov	sp, r7
    1cbc:	bd80      	pop	{r7, pc}
    1cbe:	bf00      	nop
    1cc0:	00001c05 	.word	0x00001c05

00001cc4 <_usart_sync_read_byte>:
    1cc4:	b580      	push	{r7, lr}
    1cc6:	b082      	sub	sp, #8
    1cc8:	af00      	add	r7, sp, #0
    1cca:	6078      	str	r0, [r7, #4]
    1ccc:	687b      	ldr	r3, [r7, #4]
    1cce:	681b      	ldr	r3, [r3, #0]
    1cd0:	4618      	mov	r0, r3
    1cd2:	4b04      	ldr	r3, [pc, #16]	; (1ce4 <_usart_sync_read_byte+0x20>)
    1cd4:	4798      	blx	r3
    1cd6:	4603      	mov	r3, r0
    1cd8:	b2db      	uxtb	r3, r3
    1cda:	4618      	mov	r0, r3
    1cdc:	3708      	adds	r7, #8
    1cde:	46bd      	mov	sp, r7
    1ce0:	bd80      	pop	{r7, pc}
    1ce2:	bf00      	nop
    1ce4:	00001c21 	.word	0x00001c21

00001ce8 <_usart_sync_is_ready_to_send>:
    1ce8:	b580      	push	{r7, lr}
    1cea:	b082      	sub	sp, #8
    1cec:	af00      	add	r7, sp, #0
    1cee:	6078      	str	r0, [r7, #4]
    1cf0:	687b      	ldr	r3, [r7, #4]
    1cf2:	681b      	ldr	r3, [r3, #0]
    1cf4:	4618      	mov	r0, r3
    1cf6:	4b03      	ldr	r3, [pc, #12]	; (1d04 <_usart_sync_is_ready_to_send+0x1c>)
    1cf8:	4798      	blx	r3
    1cfa:	4603      	mov	r3, r0
    1cfc:	4618      	mov	r0, r3
    1cfe:	3708      	adds	r7, #8
    1d00:	46bd      	mov	sp, r7
    1d02:	bd80      	pop	{r7, pc}
    1d04:	00001a91 	.word	0x00001a91

00001d08 <_usart_sync_is_transmit_done>:
    1d08:	b580      	push	{r7, lr}
    1d0a:	b082      	sub	sp, #8
    1d0c:	af00      	add	r7, sp, #0
    1d0e:	6078      	str	r0, [r7, #4]
    1d10:	687b      	ldr	r3, [r7, #4]
    1d12:	681b      	ldr	r3, [r3, #0]
    1d14:	4618      	mov	r0, r3
    1d16:	4b03      	ldr	r3, [pc, #12]	; (1d24 <_usart_sync_is_transmit_done+0x1c>)
    1d18:	4798      	blx	r3
    1d1a:	4603      	mov	r3, r0
    1d1c:	4618      	mov	r0, r3
    1d1e:	3708      	adds	r7, #8
    1d20:	46bd      	mov	sp, r7
    1d22:	bd80      	pop	{r7, pc}
    1d24:	00001ab9 	.word	0x00001ab9

00001d28 <_usart_sync_is_byte_received>:
    1d28:	b580      	push	{r7, lr}
    1d2a:	b082      	sub	sp, #8
    1d2c:	af00      	add	r7, sp, #0
    1d2e:	6078      	str	r0, [r7, #4]
    1d30:	687b      	ldr	r3, [r7, #4]
    1d32:	681b      	ldr	r3, [r3, #0]
    1d34:	4618      	mov	r0, r3
    1d36:	4b03      	ldr	r3, [pc, #12]	; (1d44 <_usart_sync_is_byte_received+0x1c>)
    1d38:	4798      	blx	r3
    1d3a:	4603      	mov	r3, r0
    1d3c:	4618      	mov	r0, r3
    1d3e:	3708      	adds	r7, #8
    1d40:	46bd      	mov	sp, r7
    1d42:	bd80      	pop	{r7, pc}
    1d44:	00001ae3 	.word	0x00001ae3

00001d48 <_sercom_get_hardware_index>:
    1d48:	b4b0      	push	{r4, r5, r7}
    1d4a:	b08d      	sub	sp, #52	; 0x34
    1d4c:	af00      	add	r7, sp, #0
    1d4e:	6078      	str	r0, [r7, #4]
    1d50:	4b13      	ldr	r3, [pc, #76]	; (1da0 <_sercom_get_hardware_index+0x58>)
    1d52:	f107 040c 	add.w	r4, r7, #12
    1d56:	461d      	mov	r5, r3
    1d58:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    1d5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    1d5c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    1d60:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    1d64:	2300      	movs	r3, #0
    1d66:	62fb      	str	r3, [r7, #44]	; 0x2c
    1d68:	e010      	b.n	1d8c <_sercom_get_hardware_index+0x44>
    1d6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1d6c:	009b      	lsls	r3, r3, #2
    1d6e:	f107 0230 	add.w	r2, r7, #48	; 0x30
    1d72:	4413      	add	r3, r2
    1d74:	f853 3c24 	ldr.w	r3, [r3, #-36]
    1d78:	461a      	mov	r2, r3
    1d7a:	687b      	ldr	r3, [r7, #4]
    1d7c:	429a      	cmp	r2, r3
    1d7e:	d102      	bne.n	1d86 <_sercom_get_hardware_index+0x3e>
    1d80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1d82:	b2db      	uxtb	r3, r3
    1d84:	e006      	b.n	1d94 <_sercom_get_hardware_index+0x4c>
    1d86:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1d88:	3301      	adds	r3, #1
    1d8a:	62fb      	str	r3, [r7, #44]	; 0x2c
    1d8c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    1d8e:	2b07      	cmp	r3, #7
    1d90:	d9eb      	bls.n	1d6a <_sercom_get_hardware_index+0x22>
    1d92:	2300      	movs	r3, #0
    1d94:	4618      	mov	r0, r3
    1d96:	3734      	adds	r7, #52	; 0x34
    1d98:	46bd      	mov	sp, r7
    1d9a:	bcb0      	pop	{r4, r5, r7}
    1d9c:	4770      	bx	lr
    1d9e:	bf00      	nop
    1da0:	00002b2c 	.word	0x00002b2c

00001da4 <_get_sercom_index>:
    1da4:	b580      	push	{r7, lr}
    1da6:	b084      	sub	sp, #16
    1da8:	af00      	add	r7, sp, #0
    1daa:	6078      	str	r0, [r7, #4]
    1dac:	6878      	ldr	r0, [r7, #4]
    1dae:	4b12      	ldr	r3, [pc, #72]	; (1df8 <_get_sercom_index+0x54>)
    1db0:	4798      	blx	r3
    1db2:	4603      	mov	r3, r0
    1db4:	73bb      	strb	r3, [r7, #14]
    1db6:	2300      	movs	r3, #0
    1db8:	73fb      	strb	r3, [r7, #15]
    1dba:	e00f      	b.n	1ddc <_get_sercom_index+0x38>
    1dbc:	7bfa      	ldrb	r2, [r7, #15]
    1dbe:	490f      	ldr	r1, [pc, #60]	; (1dfc <_get_sercom_index+0x58>)
    1dc0:	4613      	mov	r3, r2
    1dc2:	005b      	lsls	r3, r3, #1
    1dc4:	4413      	add	r3, r2
    1dc6:	00db      	lsls	r3, r3, #3
    1dc8:	440b      	add	r3, r1
    1dca:	781b      	ldrb	r3, [r3, #0]
    1dcc:	7bba      	ldrb	r2, [r7, #14]
    1dce:	429a      	cmp	r2, r3
    1dd0:	d101      	bne.n	1dd6 <_get_sercom_index+0x32>
    1dd2:	7bfb      	ldrb	r3, [r7, #15]
    1dd4:	e00c      	b.n	1df0 <_get_sercom_index+0x4c>
    1dd6:	7bfb      	ldrb	r3, [r7, #15]
    1dd8:	3301      	adds	r3, #1
    1dda:	73fb      	strb	r3, [r7, #15]
    1ddc:	7bfb      	ldrb	r3, [r7, #15]
    1dde:	2b00      	cmp	r3, #0
    1de0:	d0ec      	beq.n	1dbc <_get_sercom_index+0x18>
    1de2:	f240 2247 	movw	r2, #583	; 0x247
    1de6:	4906      	ldr	r1, [pc, #24]	; (1e00 <_get_sercom_index+0x5c>)
    1de8:	2000      	movs	r0, #0
    1dea:	4b06      	ldr	r3, [pc, #24]	; (1e04 <_get_sercom_index+0x60>)
    1dec:	4798      	blx	r3
    1dee:	2300      	movs	r3, #0
    1df0:	4618      	mov	r0, r3
    1df2:	3710      	adds	r7, #16
    1df4:	46bd      	mov	sp, r7
    1df6:	bd80      	pop	{r7, pc}
    1df8:	00001d49 	.word	0x00001d49
    1dfc:	20000000 	.word	0x20000000
    1e00:	00002b10 	.word	0x00002b10
    1e04:	00001425 	.word	0x00001425

00001e08 <_usart_init>:
    1e08:	b580      	push	{r7, lr}
    1e0a:	b084      	sub	sp, #16
    1e0c:	af00      	add	r7, sp, #0
    1e0e:	6078      	str	r0, [r7, #4]
    1e10:	6878      	ldr	r0, [r7, #4]
    1e12:	4b61      	ldr	r3, [pc, #388]	; (1f98 <_usart_init+0x190>)
    1e14:	4798      	blx	r3
    1e16:	4603      	mov	r3, r0
    1e18:	73fb      	strb	r3, [r7, #15]
    1e1a:	2101      	movs	r1, #1
    1e1c:	6878      	ldr	r0, [r7, #4]
    1e1e:	4b5f      	ldr	r3, [pc, #380]	; (1f9c <_usart_init+0x194>)
    1e20:	4798      	blx	r3
    1e22:	4603      	mov	r3, r0
    1e24:	f083 0301 	eor.w	r3, r3, #1
    1e28:	b2db      	uxtb	r3, r3
    1e2a:	2b00      	cmp	r3, #0
    1e2c:	d020      	beq.n	1e70 <_usart_init+0x68>
    1e2e:	7bfa      	ldrb	r2, [r7, #15]
    1e30:	495b      	ldr	r1, [pc, #364]	; (1fa0 <_usart_init+0x198>)
    1e32:	4613      	mov	r3, r2
    1e34:	005b      	lsls	r3, r3, #1
    1e36:	4413      	add	r3, r2
    1e38:	00db      	lsls	r3, r3, #3
    1e3a:	440b      	add	r3, r1
    1e3c:	3304      	adds	r3, #4
    1e3e:	681b      	ldr	r3, [r3, #0]
    1e40:	f003 031c 	and.w	r3, r3, #28
    1e44:	60bb      	str	r3, [r7, #8]
    1e46:	2102      	movs	r1, #2
    1e48:	6878      	ldr	r0, [r7, #4]
    1e4a:	4b56      	ldr	r3, [pc, #344]	; (1fa4 <_usart_init+0x19c>)
    1e4c:	4798      	blx	r3
    1e4e:	4603      	mov	r3, r0
    1e50:	2b00      	cmp	r3, #0
    1e52:	d006      	beq.n	1e62 <_usart_init+0x5a>
    1e54:	6878      	ldr	r0, [r7, #4]
    1e56:	4b54      	ldr	r3, [pc, #336]	; (1fa8 <_usart_init+0x1a0>)
    1e58:	4798      	blx	r3
    1e5a:	2102      	movs	r1, #2
    1e5c:	6878      	ldr	r0, [r7, #4]
    1e5e:	4b53      	ldr	r3, [pc, #332]	; (1fac <_usart_init+0x1a4>)
    1e60:	4798      	blx	r3
    1e62:	68bb      	ldr	r3, [r7, #8]
    1e64:	f043 0301 	orr.w	r3, r3, #1
    1e68:	4619      	mov	r1, r3
    1e6a:	6878      	ldr	r0, [r7, #4]
    1e6c:	4b50      	ldr	r3, [pc, #320]	; (1fb0 <_usart_init+0x1a8>)
    1e6e:	4798      	blx	r3
    1e70:	2101      	movs	r1, #1
    1e72:	6878      	ldr	r0, [r7, #4]
    1e74:	4b4d      	ldr	r3, [pc, #308]	; (1fac <_usart_init+0x1a4>)
    1e76:	4798      	blx	r3
    1e78:	7bfa      	ldrb	r2, [r7, #15]
    1e7a:	4949      	ldr	r1, [pc, #292]	; (1fa0 <_usart_init+0x198>)
    1e7c:	4613      	mov	r3, r2
    1e7e:	005b      	lsls	r3, r3, #1
    1e80:	4413      	add	r3, r2
    1e82:	00db      	lsls	r3, r3, #3
    1e84:	440b      	add	r3, r1
    1e86:	3304      	adds	r3, #4
    1e88:	681b      	ldr	r3, [r3, #0]
    1e8a:	4619      	mov	r1, r3
    1e8c:	6878      	ldr	r0, [r7, #4]
    1e8e:	4b48      	ldr	r3, [pc, #288]	; (1fb0 <_usart_init+0x1a8>)
    1e90:	4798      	blx	r3
    1e92:	7bfa      	ldrb	r2, [r7, #15]
    1e94:	4942      	ldr	r1, [pc, #264]	; (1fa0 <_usart_init+0x198>)
    1e96:	4613      	mov	r3, r2
    1e98:	005b      	lsls	r3, r3, #1
    1e9a:	4413      	add	r3, r2
    1e9c:	00db      	lsls	r3, r3, #3
    1e9e:	440b      	add	r3, r1
    1ea0:	3308      	adds	r3, #8
    1ea2:	681b      	ldr	r3, [r3, #0]
    1ea4:	4619      	mov	r1, r3
    1ea6:	6878      	ldr	r0, [r7, #4]
    1ea8:	4b42      	ldr	r3, [pc, #264]	; (1fb4 <_usart_init+0x1ac>)
    1eaa:	4798      	blx	r3
    1eac:	7bfa      	ldrb	r2, [r7, #15]
    1eae:	493c      	ldr	r1, [pc, #240]	; (1fa0 <_usart_init+0x198>)
    1eb0:	4613      	mov	r3, r2
    1eb2:	005b      	lsls	r3, r3, #1
    1eb4:	4413      	add	r3, r2
    1eb6:	00db      	lsls	r3, r3, #3
    1eb8:	440b      	add	r3, r1
    1eba:	330c      	adds	r3, #12
    1ebc:	681b      	ldr	r3, [r3, #0]
    1ebe:	4619      	mov	r1, r3
    1ec0:	6878      	ldr	r0, [r7, #4]
    1ec2:	4b3d      	ldr	r3, [pc, #244]	; (1fb8 <_usart_init+0x1b0>)
    1ec4:	4798      	blx	r3
    1ec6:	7bfa      	ldrb	r2, [r7, #15]
    1ec8:	4935      	ldr	r1, [pc, #212]	; (1fa0 <_usart_init+0x198>)
    1eca:	4613      	mov	r3, r2
    1ecc:	005b      	lsls	r3, r3, #1
    1ece:	4413      	add	r3, r2
    1ed0:	00db      	lsls	r3, r3, #3
    1ed2:	440b      	add	r3, r1
    1ed4:	3304      	adds	r3, #4
    1ed6:	681b      	ldr	r3, [r3, #0]
    1ed8:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
    1edc:	2b00      	cmp	r3, #0
    1ede:	d10c      	bne.n	1efa <_usart_init+0xf2>
    1ee0:	7bfa      	ldrb	r2, [r7, #15]
    1ee2:	492f      	ldr	r1, [pc, #188]	; (1fa0 <_usart_init+0x198>)
    1ee4:	4613      	mov	r3, r2
    1ee6:	005b      	lsls	r3, r3, #1
    1ee8:	4413      	add	r3, r2
    1eea:	00db      	lsls	r3, r3, #3
    1eec:	440b      	add	r3, r1
    1eee:	3304      	adds	r3, #4
    1ef0:	681b      	ldr	r3, [r3, #0]
    1ef2:	f403 43c0 	and.w	r3, r3, #24576	; 0x6000
    1ef6:	2b00      	cmp	r3, #0
    1ef8:	d022      	beq.n	1f40 <_usart_init+0x138>
    1efa:	7bfa      	ldrb	r2, [r7, #15]
    1efc:	4928      	ldr	r1, [pc, #160]	; (1fa0 <_usart_init+0x198>)
    1efe:	4613      	mov	r3, r2
    1f00:	005b      	lsls	r3, r3, #1
    1f02:	4413      	add	r3, r2
    1f04:	00db      	lsls	r3, r3, #3
    1f06:	440b      	add	r3, r1
    1f08:	3310      	adds	r3, #16
    1f0a:	881b      	ldrh	r3, [r3, #0]
    1f0c:	f3c3 030c 	ubfx	r3, r3, #0, #13
    1f10:	b299      	uxth	r1, r3
    1f12:	687a      	ldr	r2, [r7, #4]
    1f14:	8993      	ldrh	r3, [r2, #12]
    1f16:	f361 030c 	bfi	r3, r1, #0, #13
    1f1a:	8193      	strh	r3, [r2, #12]
    1f1c:	7bfa      	ldrb	r2, [r7, #15]
    1f1e:	4920      	ldr	r1, [pc, #128]	; (1fa0 <_usart_init+0x198>)
    1f20:	4613      	mov	r3, r2
    1f22:	005b      	lsls	r3, r3, #1
    1f24:	4413      	add	r3, r2
    1f26:	00db      	lsls	r3, r3, #3
    1f28:	440b      	add	r3, r1
    1f2a:	3312      	adds	r3, #18
    1f2c:	781b      	ldrb	r3, [r3, #0]
    1f2e:	f003 0307 	and.w	r3, r3, #7
    1f32:	b2d9      	uxtb	r1, r3
    1f34:	687a      	ldr	r2, [r7, #4]
    1f36:	8993      	ldrh	r3, [r2, #12]
    1f38:	f361 334f 	bfi	r3, r1, #13, #3
    1f3c:	8193      	strh	r3, [r2, #12]
    1f3e:	e00c      	b.n	1f5a <_usart_init+0x152>
    1f40:	7bfa      	ldrb	r2, [r7, #15]
    1f42:	4917      	ldr	r1, [pc, #92]	; (1fa0 <_usart_init+0x198>)
    1f44:	4613      	mov	r3, r2
    1f46:	005b      	lsls	r3, r3, #1
    1f48:	4413      	add	r3, r2
    1f4a:	00db      	lsls	r3, r3, #3
    1f4c:	440b      	add	r3, r1
    1f4e:	3310      	adds	r3, #16
    1f50:	881b      	ldrh	r3, [r3, #0]
    1f52:	4619      	mov	r1, r3
    1f54:	6878      	ldr	r0, [r7, #4]
    1f56:	4b19      	ldr	r3, [pc, #100]	; (1fbc <_usart_init+0x1b4>)
    1f58:	4798      	blx	r3
    1f5a:	7bfa      	ldrb	r2, [r7, #15]
    1f5c:	4910      	ldr	r1, [pc, #64]	; (1fa0 <_usart_init+0x198>)
    1f5e:	4613      	mov	r3, r2
    1f60:	005b      	lsls	r3, r3, #1
    1f62:	4413      	add	r3, r2
    1f64:	00db      	lsls	r3, r3, #3
    1f66:	440b      	add	r3, r1
    1f68:	3313      	adds	r3, #19
    1f6a:	781b      	ldrb	r3, [r3, #0]
    1f6c:	4619      	mov	r1, r3
    1f6e:	6878      	ldr	r0, [r7, #4]
    1f70:	4b13      	ldr	r3, [pc, #76]	; (1fc0 <_usart_init+0x1b8>)
    1f72:	4798      	blx	r3
    1f74:	7bfa      	ldrb	r2, [r7, #15]
    1f76:	490a      	ldr	r1, [pc, #40]	; (1fa0 <_usart_init+0x198>)
    1f78:	4613      	mov	r3, r2
    1f7a:	005b      	lsls	r3, r3, #1
    1f7c:	4413      	add	r3, r2
    1f7e:	00db      	lsls	r3, r3, #3
    1f80:	440b      	add	r3, r1
    1f82:	3314      	adds	r3, #20
    1f84:	781b      	ldrb	r3, [r3, #0]
    1f86:	4619      	mov	r1, r3
    1f88:	6878      	ldr	r0, [r7, #4]
    1f8a:	4b0e      	ldr	r3, [pc, #56]	; (1fc4 <_usart_init+0x1bc>)
    1f8c:	4798      	blx	r3
    1f8e:	2300      	movs	r3, #0
    1f90:	4618      	mov	r0, r3
    1f92:	3710      	adds	r7, #16
    1f94:	46bd      	mov	sp, r7
    1f96:	bd80      	pop	{r7, pc}
    1f98:	00001da5 	.word	0x00001da5
    1f9c:	00001a69 	.word	0x00001a69
    1fa0:	20000000 	.word	0x20000000
    1fa4:	00001b35 	.word	0x00001b35
    1fa8:	00001b0d 	.word	0x00001b0d
    1fac:	00001a45 	.word	0x00001a45
    1fb0:	00001b65 	.word	0x00001b65
    1fb4:	00001b89 	.word	0x00001b89
    1fb8:	00001bad 	.word	0x00001bad
    1fbc:	00001bc9 	.word	0x00001bc9
    1fc0:	00001be7 	.word	0x00001be7
    1fc4:	00001c39 	.word	0x00001c39

00001fc8 <_system_time_init>:
    1fc8:	b480      	push	{r7}
    1fca:	b083      	sub	sp, #12
    1fcc:	af00      	add	r7, sp, #0
    1fce:	6078      	str	r0, [r7, #4]
    1fd0:	4b06      	ldr	r3, [pc, #24]	; (1fec <_system_time_init+0x24>)
    1fd2:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
    1fd6:	605a      	str	r2, [r3, #4]
    1fd8:	4b04      	ldr	r3, [pc, #16]	; (1fec <_system_time_init+0x24>)
    1fda:	2205      	movs	r2, #5
    1fdc:	601a      	str	r2, [r3, #0]
    1fde:	bf00      	nop
    1fe0:	370c      	adds	r7, #12
    1fe2:	46bd      	mov	sp, r7
    1fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
    1fe8:	4770      	bx	lr
    1fea:	bf00      	nop
    1fec:	e000e010 	.word	0xe000e010

00001ff0 <_delay_init>:
    1ff0:	b580      	push	{r7, lr}
    1ff2:	b082      	sub	sp, #8
    1ff4:	af00      	add	r7, sp, #0
    1ff6:	6078      	str	r0, [r7, #4]
    1ff8:	6878      	ldr	r0, [r7, #4]
    1ffa:	4b03      	ldr	r3, [pc, #12]	; (2008 <_delay_init+0x18>)
    1ffc:	4798      	blx	r3
    1ffe:	bf00      	nop
    2000:	3708      	adds	r7, #8
    2002:	46bd      	mov	sp, r7
    2004:	bd80      	pop	{r7, pc}
    2006:	bf00      	nop
    2008:	00001fc9 	.word	0x00001fc9

0000200c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
    200c:	b480      	push	{r7}
    200e:	b083      	sub	sp, #12
    2010:	af00      	add	r7, sp, #0
    2012:	4603      	mov	r3, r0
    2014:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
    2016:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
    201a:	2b00      	cmp	r3, #0
    201c:	db0b      	blt.n	2036 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    201e:	4909      	ldr	r1, [pc, #36]	; (2044 <__NVIC_EnableIRQ+0x38>)
    2020:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
    2024:	095b      	lsrs	r3, r3, #5
    2026:	88fa      	ldrh	r2, [r7, #6]
    2028:	f002 021f 	and.w	r2, r2, #31
    202c:	2001      	movs	r0, #1
    202e:	fa00 f202 	lsl.w	r2, r0, r2
    2032:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
    2036:	bf00      	nop
    2038:	370c      	adds	r7, #12
    203a:	46bd      	mov	sp, r7
    203c:	f85d 7b04 	ldr.w	r7, [sp], #4
    2040:	4770      	bx	lr
    2042:	bf00      	nop
    2044:	e000e100 	.word	0xe000e100

00002048 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
    2048:	b480      	push	{r7}
    204a:	b083      	sub	sp, #12
    204c:	af00      	add	r7, sp, #0
    204e:	4603      	mov	r3, r0
    2050:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
    2052:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
    2056:	2b00      	cmp	r3, #0
    2058:	db10      	blt.n	207c <__NVIC_DisableIRQ+0x34>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    205a:	490b      	ldr	r1, [pc, #44]	; (2088 <__NVIC_DisableIRQ+0x40>)
    205c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
    2060:	095b      	lsrs	r3, r3, #5
    2062:	88fa      	ldrh	r2, [r7, #6]
    2064:	f002 021f 	and.w	r2, r2, #31
    2068:	2001      	movs	r0, #1
    206a:	fa00 f202 	lsl.w	r2, r0, r2
    206e:	3320      	adds	r3, #32
    2070:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
    2074:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    2078:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  }
}
    207c:	bf00      	nop
    207e:	370c      	adds	r7, #12
    2080:	46bd      	mov	sp, r7
    2082:	f85d 7b04 	ldr.w	r7, [sp], #4
    2086:	4770      	bx	lr
    2088:	e000e100 	.word	0xe000e100

0000208c <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
    208c:	b480      	push	{r7}
    208e:	b083      	sub	sp, #12
    2090:	af00      	add	r7, sp, #0
    2092:	4603      	mov	r3, r0
    2094:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
    2096:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
    209a:	2b00      	cmp	r3, #0
    209c:	db0c      	blt.n	20b8 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    209e:	4909      	ldr	r1, [pc, #36]	; (20c4 <__NVIC_ClearPendingIRQ+0x38>)
    20a0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
    20a4:	095b      	lsrs	r3, r3, #5
    20a6:	88fa      	ldrh	r2, [r7, #6]
    20a8:	f002 021f 	and.w	r2, r2, #31
    20ac:	2001      	movs	r0, #1
    20ae:	fa00 f202 	lsl.w	r2, r0, r2
    20b2:	3360      	adds	r3, #96	; 0x60
    20b4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
    20b8:	bf00      	nop
    20ba:	370c      	adds	r7, #12
    20bc:	46bd      	mov	sp, r7
    20be:	f85d 7b04 	ldr.w	r7, [sp], #4
    20c2:	4770      	bx	lr
    20c4:	e000e100 	.word	0xe000e100

000020c8 <hri_tc_wait_for_sync>:
    20c8:	b480      	push	{r7}
    20ca:	b083      	sub	sp, #12
    20cc:	af00      	add	r7, sp, #0
    20ce:	6078      	str	r0, [r7, #4]
    20d0:	6039      	str	r1, [r7, #0]
    20d2:	bf00      	nop
    20d4:	687b      	ldr	r3, [r7, #4]
    20d6:	691a      	ldr	r2, [r3, #16]
    20d8:	683b      	ldr	r3, [r7, #0]
    20da:	4013      	ands	r3, r2
    20dc:	2b00      	cmp	r3, #0
    20de:	d1f9      	bne.n	20d4 <hri_tc_wait_for_sync+0xc>
    20e0:	bf00      	nop
    20e2:	370c      	adds	r7, #12
    20e4:	46bd      	mov	sp, r7
    20e6:	f85d 7b04 	ldr.w	r7, [sp], #4
    20ea:	4770      	bx	lr

000020ec <hri_tc_is_syncing>:
    20ec:	b480      	push	{r7}
    20ee:	b083      	sub	sp, #12
    20f0:	af00      	add	r7, sp, #0
    20f2:	6078      	str	r0, [r7, #4]
    20f4:	6039      	str	r1, [r7, #0]
    20f6:	687b      	ldr	r3, [r7, #4]
    20f8:	691a      	ldr	r2, [r3, #16]
    20fa:	683b      	ldr	r3, [r7, #0]
    20fc:	4013      	ands	r3, r2
    20fe:	2b00      	cmp	r3, #0
    2100:	bf14      	ite	ne
    2102:	2301      	movne	r3, #1
    2104:	2300      	moveq	r3, #0
    2106:	b2db      	uxtb	r3, r3
    2108:	4618      	mov	r0, r3
    210a:	370c      	adds	r7, #12
    210c:	46bd      	mov	sp, r7
    210e:	f85d 7b04 	ldr.w	r7, [sp], #4
    2112:	4770      	bx	lr

00002114 <hri_tc_get_interrupt_OVF_bit>:
    2114:	b480      	push	{r7}
    2116:	b083      	sub	sp, #12
    2118:	af00      	add	r7, sp, #0
    211a:	6078      	str	r0, [r7, #4]
    211c:	687b      	ldr	r3, [r7, #4]
    211e:	7a9b      	ldrb	r3, [r3, #10]
    2120:	b2db      	uxtb	r3, r3
    2122:	f003 0301 	and.w	r3, r3, #1
    2126:	2b00      	cmp	r3, #0
    2128:	bf14      	ite	ne
    212a:	2301      	movne	r3, #1
    212c:	2300      	moveq	r3, #0
    212e:	b2db      	uxtb	r3, r3
    2130:	4618      	mov	r0, r3
    2132:	370c      	adds	r7, #12
    2134:	46bd      	mov	sp, r7
    2136:	f85d 7b04 	ldr.w	r7, [sp], #4
    213a:	4770      	bx	lr

0000213c <hri_tc_clear_interrupt_OVF_bit>:
    213c:	b480      	push	{r7}
    213e:	b083      	sub	sp, #12
    2140:	af00      	add	r7, sp, #0
    2142:	6078      	str	r0, [r7, #4]
    2144:	687b      	ldr	r3, [r7, #4]
    2146:	2201      	movs	r2, #1
    2148:	729a      	strb	r2, [r3, #10]
    214a:	bf00      	nop
    214c:	370c      	adds	r7, #12
    214e:	46bd      	mov	sp, r7
    2150:	f85d 7b04 	ldr.w	r7, [sp], #4
    2154:	4770      	bx	lr

00002156 <hri_tc_clear_interrupt_ERR_bit>:
    2156:	b480      	push	{r7}
    2158:	b083      	sub	sp, #12
    215a:	af00      	add	r7, sp, #0
    215c:	6078      	str	r0, [r7, #4]
    215e:	687b      	ldr	r3, [r7, #4]
    2160:	2202      	movs	r2, #2
    2162:	729a      	strb	r2, [r3, #10]
    2164:	bf00      	nop
    2166:	370c      	adds	r7, #12
    2168:	46bd      	mov	sp, r7
    216a:	f85d 7b04 	ldr.w	r7, [sp], #4
    216e:	4770      	bx	lr

00002170 <hri_tc_get_INTEN_ERR_bit>:
    2170:	b480      	push	{r7}
    2172:	b083      	sub	sp, #12
    2174:	af00      	add	r7, sp, #0
    2176:	6078      	str	r0, [r7, #4]
    2178:	687b      	ldr	r3, [r7, #4]
    217a:	7a5b      	ldrb	r3, [r3, #9]
    217c:	b2db      	uxtb	r3, r3
    217e:	085b      	lsrs	r3, r3, #1
    2180:	f003 0301 	and.w	r3, r3, #1
    2184:	2b00      	cmp	r3, #0
    2186:	bf14      	ite	ne
    2188:	2301      	movne	r3, #1
    218a:	2300      	moveq	r3, #0
    218c:	b2db      	uxtb	r3, r3
    218e:	4618      	mov	r0, r3
    2190:	370c      	adds	r7, #12
    2192:	46bd      	mov	sp, r7
    2194:	f85d 7b04 	ldr.w	r7, [sp], #4
    2198:	4770      	bx	lr
	...

0000219c <hri_tc_clear_CTRLA_ENABLE_bit>:
    219c:	b580      	push	{r7, lr}
    219e:	b082      	sub	sp, #8
    21a0:	af00      	add	r7, sp, #0
    21a2:	6078      	str	r0, [r7, #4]
    21a4:	687b      	ldr	r3, [r7, #4]
    21a6:	681b      	ldr	r3, [r3, #0]
    21a8:	f023 0202 	bic.w	r2, r3, #2
    21ac:	687b      	ldr	r3, [r7, #4]
    21ae:	601a      	str	r2, [r3, #0]
    21b0:	2103      	movs	r1, #3
    21b2:	6878      	ldr	r0, [r7, #4]
    21b4:	4b02      	ldr	r3, [pc, #8]	; (21c0 <hri_tc_clear_CTRLA_ENABLE_bit+0x24>)
    21b6:	4798      	blx	r3
    21b8:	bf00      	nop
    21ba:	3708      	adds	r7, #8
    21bc:	46bd      	mov	sp, r7
    21be:	bd80      	pop	{r7, pc}
    21c0:	000020c9 	.word	0x000020c9

000021c4 <hri_tc_get_CTRLA_reg>:
    21c4:	b580      	push	{r7, lr}
    21c6:	b084      	sub	sp, #16
    21c8:	af00      	add	r7, sp, #0
    21ca:	6078      	str	r0, [r7, #4]
    21cc:	6039      	str	r1, [r7, #0]
    21ce:	2103      	movs	r1, #3
    21d0:	6878      	ldr	r0, [r7, #4]
    21d2:	4b07      	ldr	r3, [pc, #28]	; (21f0 <hri_tc_get_CTRLA_reg+0x2c>)
    21d4:	4798      	blx	r3
    21d6:	687b      	ldr	r3, [r7, #4]
    21d8:	681b      	ldr	r3, [r3, #0]
    21da:	60fb      	str	r3, [r7, #12]
    21dc:	68fa      	ldr	r2, [r7, #12]
    21de:	683b      	ldr	r3, [r7, #0]
    21e0:	4013      	ands	r3, r2
    21e2:	60fb      	str	r3, [r7, #12]
    21e4:	68fb      	ldr	r3, [r7, #12]
    21e6:	4618      	mov	r0, r3
    21e8:	3710      	adds	r7, #16
    21ea:	46bd      	mov	sp, r7
    21ec:	bd80      	pop	{r7, pc}
    21ee:	bf00      	nop
    21f0:	000020c9 	.word	0x000020c9

000021f4 <hri_tc_write_CTRLA_reg>:
    21f4:	b580      	push	{r7, lr}
    21f6:	b082      	sub	sp, #8
    21f8:	af00      	add	r7, sp, #0
    21fa:	6078      	str	r0, [r7, #4]
    21fc:	6039      	str	r1, [r7, #0]
    21fe:	687b      	ldr	r3, [r7, #4]
    2200:	683a      	ldr	r2, [r7, #0]
    2202:	601a      	str	r2, [r3, #0]
    2204:	2103      	movs	r1, #3
    2206:	6878      	ldr	r0, [r7, #4]
    2208:	4b02      	ldr	r3, [pc, #8]	; (2214 <hri_tc_write_CTRLA_reg+0x20>)
    220a:	4798      	blx	r3
    220c:	bf00      	nop
    220e:	3708      	adds	r7, #8
    2210:	46bd      	mov	sp, r7
    2212:	bd80      	pop	{r7, pc}
    2214:	000020c9 	.word	0x000020c9

00002218 <hri_tc_write_EVCTRL_reg>:
    2218:	b480      	push	{r7}
    221a:	b083      	sub	sp, #12
    221c:	af00      	add	r7, sp, #0
    221e:	6078      	str	r0, [r7, #4]
    2220:	460b      	mov	r3, r1
    2222:	807b      	strh	r3, [r7, #2]
    2224:	687b      	ldr	r3, [r7, #4]
    2226:	887a      	ldrh	r2, [r7, #2]
    2228:	80da      	strh	r2, [r3, #6]
    222a:	bf00      	nop
    222c:	370c      	adds	r7, #12
    222e:	46bd      	mov	sp, r7
    2230:	f85d 7b04 	ldr.w	r7, [sp], #4
    2234:	4770      	bx	lr

00002236 <hri_tc_write_WAVE_reg>:
    2236:	b480      	push	{r7}
    2238:	b083      	sub	sp, #12
    223a:	af00      	add	r7, sp, #0
    223c:	6078      	str	r0, [r7, #4]
    223e:	460b      	mov	r3, r1
    2240:	70fb      	strb	r3, [r7, #3]
    2242:	687b      	ldr	r3, [r7, #4]
    2244:	78fa      	ldrb	r2, [r7, #3]
    2246:	731a      	strb	r2, [r3, #12]
    2248:	bf00      	nop
    224a:	370c      	adds	r7, #12
    224c:	46bd      	mov	sp, r7
    224e:	f85d 7b04 	ldr.w	r7, [sp], #4
    2252:	4770      	bx	lr

00002254 <hri_tc_write_DBGCTRL_reg>:
    2254:	b480      	push	{r7}
    2256:	b083      	sub	sp, #12
    2258:	af00      	add	r7, sp, #0
    225a:	6078      	str	r0, [r7, #4]
    225c:	460b      	mov	r3, r1
    225e:	70fb      	strb	r3, [r7, #3]
    2260:	687b      	ldr	r3, [r7, #4]
    2262:	78fa      	ldrb	r2, [r7, #3]
    2264:	73da      	strb	r2, [r3, #15]
    2266:	bf00      	nop
    2268:	370c      	adds	r7, #12
    226a:	46bd      	mov	sp, r7
    226c:	f85d 7b04 	ldr.w	r7, [sp], #4
    2270:	4770      	bx	lr
	...

00002274 <hri_tccount16_write_CC_reg>:
    2274:	b580      	push	{r7, lr}
    2276:	b082      	sub	sp, #8
    2278:	af00      	add	r7, sp, #0
    227a:	6078      	str	r0, [r7, #4]
    227c:	460b      	mov	r3, r1
    227e:	70fb      	strb	r3, [r7, #3]
    2280:	4613      	mov	r3, r2
    2282:	803b      	strh	r3, [r7, #0]
    2284:	78fb      	ldrb	r3, [r7, #3]
    2286:	687a      	ldr	r2, [r7, #4]
    2288:	330c      	adds	r3, #12
    228a:	005b      	lsls	r3, r3, #1
    228c:	4413      	add	r3, r2
    228e:	883a      	ldrh	r2, [r7, #0]
    2290:	809a      	strh	r2, [r3, #4]
    2292:	21c0      	movs	r1, #192	; 0xc0
    2294:	6878      	ldr	r0, [r7, #4]
    2296:	4b03      	ldr	r3, [pc, #12]	; (22a4 <hri_tccount16_write_CC_reg+0x30>)
    2298:	4798      	blx	r3
    229a:	bf00      	nop
    229c:	3708      	adds	r7, #8
    229e:	46bd      	mov	sp, r7
    22a0:	bd80      	pop	{r7, pc}
    22a2:	bf00      	nop
    22a4:	000020c9 	.word	0x000020c9

000022a8 <hri_tccount32_write_CC_reg>:
    22a8:	b580      	push	{r7, lr}
    22aa:	b084      	sub	sp, #16
    22ac:	af00      	add	r7, sp, #0
    22ae:	60f8      	str	r0, [r7, #12]
    22b0:	460b      	mov	r3, r1
    22b2:	607a      	str	r2, [r7, #4]
    22b4:	72fb      	strb	r3, [r7, #11]
    22b6:	7afb      	ldrb	r3, [r7, #11]
    22b8:	68fa      	ldr	r2, [r7, #12]
    22ba:	3306      	adds	r3, #6
    22bc:	009b      	lsls	r3, r3, #2
    22be:	4413      	add	r3, r2
    22c0:	687a      	ldr	r2, [r7, #4]
    22c2:	605a      	str	r2, [r3, #4]
    22c4:	21c0      	movs	r1, #192	; 0xc0
    22c6:	68f8      	ldr	r0, [r7, #12]
    22c8:	4b02      	ldr	r3, [pc, #8]	; (22d4 <hri_tccount32_write_CC_reg+0x2c>)
    22ca:	4798      	blx	r3
    22cc:	bf00      	nop
    22ce:	3710      	adds	r7, #16
    22d0:	46bd      	mov	sp, r7
    22d2:	bd80      	pop	{r7, pc}
    22d4:	000020c9 	.word	0x000020c9

000022d8 <_pwm_init>:
    22d8:	b580      	push	{r7, lr}
    22da:	b084      	sub	sp, #16
    22dc:	af00      	add	r7, sp, #0
    22de:	6078      	str	r0, [r7, #4]
    22e0:	6039      	str	r1, [r7, #0]
    22e2:	6838      	ldr	r0, [r7, #0]
    22e4:	4b73      	ldr	r3, [pc, #460]	; (24b4 <_pwm_init+0x1dc>)
    22e6:	4798      	blx	r3
    22e8:	4603      	mov	r3, r0
    22ea:	73fb      	strb	r3, [r7, #15]
    22ec:	687b      	ldr	r3, [r7, #4]
    22ee:	683a      	ldr	r2, [r7, #0]
    22f0:	611a      	str	r2, [r3, #16]
    22f2:	2101      	movs	r1, #1
    22f4:	6838      	ldr	r0, [r7, #0]
    22f6:	4b70      	ldr	r3, [pc, #448]	; (24b8 <_pwm_init+0x1e0>)
    22f8:	4798      	blx	r3
    22fa:	4603      	mov	r3, r0
    22fc:	f083 0301 	eor.w	r3, r3, #1
    2300:	b2db      	uxtb	r3, r3
    2302:	2b00      	cmp	r3, #0
    2304:	d011      	beq.n	232a <_pwm_init+0x52>
    2306:	2102      	movs	r1, #2
    2308:	6838      	ldr	r0, [r7, #0]
    230a:	4b6c      	ldr	r3, [pc, #432]	; (24bc <_pwm_init+0x1e4>)
    230c:	4798      	blx	r3
    230e:	4603      	mov	r3, r0
    2310:	2b00      	cmp	r3, #0
    2312:	d006      	beq.n	2322 <_pwm_init+0x4a>
    2314:	6838      	ldr	r0, [r7, #0]
    2316:	4b6a      	ldr	r3, [pc, #424]	; (24c0 <_pwm_init+0x1e8>)
    2318:	4798      	blx	r3
    231a:	2102      	movs	r1, #2
    231c:	6838      	ldr	r0, [r7, #0]
    231e:	4b69      	ldr	r3, [pc, #420]	; (24c4 <_pwm_init+0x1ec>)
    2320:	4798      	blx	r3
    2322:	2101      	movs	r1, #1
    2324:	6838      	ldr	r0, [r7, #0]
    2326:	4b68      	ldr	r3, [pc, #416]	; (24c8 <_pwm_init+0x1f0>)
    2328:	4798      	blx	r3
    232a:	2101      	movs	r1, #1
    232c:	6838      	ldr	r0, [r7, #0]
    232e:	4b65      	ldr	r3, [pc, #404]	; (24c4 <_pwm_init+0x1ec>)
    2330:	4798      	blx	r3
    2332:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2336:	4965      	ldr	r1, [pc, #404]	; (24cc <_pwm_init+0x1f4>)
    2338:	4613      	mov	r3, r2
    233a:	009b      	lsls	r3, r3, #2
    233c:	4413      	add	r3, r2
    233e:	009b      	lsls	r3, r3, #2
    2340:	440b      	add	r3, r1
    2342:	3304      	adds	r3, #4
    2344:	681b      	ldr	r3, [r3, #0]
    2346:	4619      	mov	r1, r3
    2348:	6838      	ldr	r0, [r7, #0]
    234a:	4b5f      	ldr	r3, [pc, #380]	; (24c8 <_pwm_init+0x1f0>)
    234c:	4798      	blx	r3
    234e:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2352:	495e      	ldr	r1, [pc, #376]	; (24cc <_pwm_init+0x1f4>)
    2354:	4613      	mov	r3, r2
    2356:	009b      	lsls	r3, r3, #2
    2358:	4413      	add	r3, r2
    235a:	009b      	lsls	r3, r3, #2
    235c:	440b      	add	r3, r1
    235e:	330a      	adds	r3, #10
    2360:	781b      	ldrb	r3, [r3, #0]
    2362:	4619      	mov	r1, r3
    2364:	6838      	ldr	r0, [r7, #0]
    2366:	4b5a      	ldr	r3, [pc, #360]	; (24d0 <_pwm_init+0x1f8>)
    2368:	4798      	blx	r3
    236a:	f997 200f 	ldrsb.w	r2, [r7, #15]
    236e:	4957      	ldr	r1, [pc, #348]	; (24cc <_pwm_init+0x1f4>)
    2370:	4613      	mov	r3, r2
    2372:	009b      	lsls	r3, r3, #2
    2374:	4413      	add	r3, r2
    2376:	009b      	lsls	r3, r3, #2
    2378:	440b      	add	r3, r1
    237a:	3308      	adds	r3, #8
    237c:	881b      	ldrh	r3, [r3, #0]
    237e:	4619      	mov	r1, r3
    2380:	6838      	ldr	r0, [r7, #0]
    2382:	4b54      	ldr	r3, [pc, #336]	; (24d4 <_pwm_init+0x1fc>)
    2384:	4798      	blx	r3
    2386:	2103      	movs	r1, #3
    2388:	6838      	ldr	r0, [r7, #0]
    238a:	4b53      	ldr	r3, [pc, #332]	; (24d8 <_pwm_init+0x200>)
    238c:	4798      	blx	r3
    238e:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2392:	494e      	ldr	r1, [pc, #312]	; (24cc <_pwm_init+0x1f4>)
    2394:	4613      	mov	r3, r2
    2396:	009b      	lsls	r3, r3, #2
    2398:	4413      	add	r3, r2
    239a:	009b      	lsls	r3, r3, #2
    239c:	440b      	add	r3, r1
    239e:	3304      	adds	r3, #4
    23a0:	681b      	ldr	r3, [r3, #0]
    23a2:	f003 030c 	and.w	r3, r3, #12
    23a6:	2b08      	cmp	r3, #8
    23a8:	d11e      	bne.n	23e8 <_pwm_init+0x110>
    23aa:	f997 200f 	ldrsb.w	r2, [r7, #15]
    23ae:	4947      	ldr	r1, [pc, #284]	; (24cc <_pwm_init+0x1f4>)
    23b0:	4613      	mov	r3, r2
    23b2:	009b      	lsls	r3, r3, #2
    23b4:	4413      	add	r3, r2
    23b6:	009b      	lsls	r3, r3, #2
    23b8:	440b      	add	r3, r1
    23ba:	330c      	adds	r3, #12
    23bc:	681b      	ldr	r3, [r3, #0]
    23be:	461a      	mov	r2, r3
    23c0:	2100      	movs	r1, #0
    23c2:	6838      	ldr	r0, [r7, #0]
    23c4:	4b45      	ldr	r3, [pc, #276]	; (24dc <_pwm_init+0x204>)
    23c6:	4798      	blx	r3
    23c8:	f997 200f 	ldrsb.w	r2, [r7, #15]
    23cc:	493f      	ldr	r1, [pc, #252]	; (24cc <_pwm_init+0x1f4>)
    23ce:	4613      	mov	r3, r2
    23d0:	009b      	lsls	r3, r3, #2
    23d2:	4413      	add	r3, r2
    23d4:	009b      	lsls	r3, r3, #2
    23d6:	440b      	add	r3, r1
    23d8:	3310      	adds	r3, #16
    23da:	681b      	ldr	r3, [r3, #0]
    23dc:	461a      	mov	r2, r3
    23de:	2101      	movs	r1, #1
    23e0:	6838      	ldr	r0, [r7, #0]
    23e2:	4b3e      	ldr	r3, [pc, #248]	; (24dc <_pwm_init+0x204>)
    23e4:	4798      	blx	r3
    23e6:	e031      	b.n	244c <_pwm_init+0x174>
    23e8:	f997 200f 	ldrsb.w	r2, [r7, #15]
    23ec:	4937      	ldr	r1, [pc, #220]	; (24cc <_pwm_init+0x1f4>)
    23ee:	4613      	mov	r3, r2
    23f0:	009b      	lsls	r3, r3, #2
    23f2:	4413      	add	r3, r2
    23f4:	009b      	lsls	r3, r3, #2
    23f6:	440b      	add	r3, r1
    23f8:	3304      	adds	r3, #4
    23fa:	681b      	ldr	r3, [r3, #0]
    23fc:	f003 030c 	and.w	r3, r3, #12
    2400:	2b00      	cmp	r3, #0
    2402:	d120      	bne.n	2446 <_pwm_init+0x16e>
    2404:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2408:	4930      	ldr	r1, [pc, #192]	; (24cc <_pwm_init+0x1f4>)
    240a:	4613      	mov	r3, r2
    240c:	009b      	lsls	r3, r3, #2
    240e:	4413      	add	r3, r2
    2410:	009b      	lsls	r3, r3, #2
    2412:	440b      	add	r3, r1
    2414:	330c      	adds	r3, #12
    2416:	681b      	ldr	r3, [r3, #0]
    2418:	b29b      	uxth	r3, r3
    241a:	461a      	mov	r2, r3
    241c:	2100      	movs	r1, #0
    241e:	6838      	ldr	r0, [r7, #0]
    2420:	4b2f      	ldr	r3, [pc, #188]	; (24e0 <_pwm_init+0x208>)
    2422:	4798      	blx	r3
    2424:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2428:	4928      	ldr	r1, [pc, #160]	; (24cc <_pwm_init+0x1f4>)
    242a:	4613      	mov	r3, r2
    242c:	009b      	lsls	r3, r3, #2
    242e:	4413      	add	r3, r2
    2430:	009b      	lsls	r3, r3, #2
    2432:	440b      	add	r3, r1
    2434:	3310      	adds	r3, #16
    2436:	681b      	ldr	r3, [r3, #0]
    2438:	b29b      	uxth	r3, r3
    243a:	461a      	mov	r2, r3
    243c:	2101      	movs	r1, #1
    243e:	6838      	ldr	r0, [r7, #0]
    2440:	4b27      	ldr	r3, [pc, #156]	; (24e0 <_pwm_init+0x208>)
    2442:	4798      	blx	r3
    2444:	e002      	b.n	244c <_pwm_init+0x174>
    2446:	f04f 33ff 	mov.w	r3, #4294967295
    244a:	e02e      	b.n	24aa <_pwm_init+0x1d2>
    244c:	6879      	ldr	r1, [r7, #4]
    244e:	6838      	ldr	r0, [r7, #0]
    2450:	4b24      	ldr	r3, [pc, #144]	; (24e4 <_pwm_init+0x20c>)
    2452:	4798      	blx	r3
    2454:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2458:	491c      	ldr	r1, [pc, #112]	; (24cc <_pwm_init+0x1f4>)
    245a:	4613      	mov	r3, r2
    245c:	009b      	lsls	r3, r3, #2
    245e:	4413      	add	r3, r2
    2460:	009b      	lsls	r3, r3, #2
    2462:	440b      	add	r3, r1
    2464:	3302      	adds	r3, #2
    2466:	f9b3 3000 	ldrsh.w	r3, [r3]
    246a:	4618      	mov	r0, r3
    246c:	4b1e      	ldr	r3, [pc, #120]	; (24e8 <_pwm_init+0x210>)
    246e:	4798      	blx	r3
    2470:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2474:	4915      	ldr	r1, [pc, #84]	; (24cc <_pwm_init+0x1f4>)
    2476:	4613      	mov	r3, r2
    2478:	009b      	lsls	r3, r3, #2
    247a:	4413      	add	r3, r2
    247c:	009b      	lsls	r3, r3, #2
    247e:	440b      	add	r3, r1
    2480:	3302      	adds	r3, #2
    2482:	f9b3 3000 	ldrsh.w	r3, [r3]
    2486:	4618      	mov	r0, r3
    2488:	4b18      	ldr	r3, [pc, #96]	; (24ec <_pwm_init+0x214>)
    248a:	4798      	blx	r3
    248c:	f997 200f 	ldrsb.w	r2, [r7, #15]
    2490:	490e      	ldr	r1, [pc, #56]	; (24cc <_pwm_init+0x1f4>)
    2492:	4613      	mov	r3, r2
    2494:	009b      	lsls	r3, r3, #2
    2496:	4413      	add	r3, r2
    2498:	009b      	lsls	r3, r3, #2
    249a:	440b      	add	r3, r1
    249c:	3302      	adds	r3, #2
    249e:	f9b3 3000 	ldrsh.w	r3, [r3]
    24a2:	4618      	mov	r0, r3
    24a4:	4b12      	ldr	r3, [pc, #72]	; (24f0 <_pwm_init+0x218>)
    24a6:	4798      	blx	r3
    24a8:	2300      	movs	r3, #0
    24aa:	4618      	mov	r0, r3
    24ac:	3710      	adds	r7, #16
    24ae:	46bd      	mov	sp, r7
    24b0:	bd80      	pop	{r7, pc}
    24b2:	bf00      	nop
    24b4:	0000258d 	.word	0x0000258d
    24b8:	000020ed 	.word	0x000020ed
    24bc:	000021c5 	.word	0x000021c5
    24c0:	0000219d 	.word	0x0000219d
    24c4:	000020c9 	.word	0x000020c9
    24c8:	000021f5 	.word	0x000021f5
    24cc:	20000018 	.word	0x20000018
    24d0:	00002255 	.word	0x00002255
    24d4:	00002219 	.word	0x00002219
    24d8:	00002237 	.word	0x00002237
    24dc:	000022a9 	.word	0x000022a9
    24e0:	00002275 	.word	0x00002275
    24e4:	000025f5 	.word	0x000025f5
    24e8:	00002049 	.word	0x00002049
    24ec:	0000208d 	.word	0x0000208d
    24f0:	0000200d 	.word	0x0000200d

000024f4 <_tc_get_pwm>:
    24f4:	b480      	push	{r7}
    24f6:	af00      	add	r7, sp, #0
    24f8:	2300      	movs	r3, #0
    24fa:	4618      	mov	r0, r3
    24fc:	46bd      	mov	sp, r7
    24fe:	f85d 7b04 	ldr.w	r7, [sp], #4
    2502:	4770      	bx	lr

00002504 <tc_pwm_interrupt_handler>:
    2504:	b580      	push	{r7, lr}
    2506:	b084      	sub	sp, #16
    2508:	af00      	add	r7, sp, #0
    250a:	6078      	str	r0, [r7, #4]
    250c:	687b      	ldr	r3, [r7, #4]
    250e:	691b      	ldr	r3, [r3, #16]
    2510:	60fb      	str	r3, [r7, #12]
    2512:	68f8      	ldr	r0, [r7, #12]
    2514:	4b12      	ldr	r3, [pc, #72]	; (2560 <tc_pwm_interrupt_handler+0x5c>)
    2516:	4798      	blx	r3
    2518:	4603      	mov	r3, r0
    251a:	2b00      	cmp	r3, #0
    251c:	d00a      	beq.n	2534 <tc_pwm_interrupt_handler+0x30>
    251e:	68f8      	ldr	r0, [r7, #12]
    2520:	4b10      	ldr	r3, [pc, #64]	; (2564 <tc_pwm_interrupt_handler+0x60>)
    2522:	4798      	blx	r3
    2524:	687b      	ldr	r3, [r7, #4]
    2526:	681b      	ldr	r3, [r3, #0]
    2528:	2b00      	cmp	r3, #0
    252a:	d003      	beq.n	2534 <tc_pwm_interrupt_handler+0x30>
    252c:	687b      	ldr	r3, [r7, #4]
    252e:	681b      	ldr	r3, [r3, #0]
    2530:	6878      	ldr	r0, [r7, #4]
    2532:	4798      	blx	r3
    2534:	68f8      	ldr	r0, [r7, #12]
    2536:	4b0c      	ldr	r3, [pc, #48]	; (2568 <tc_pwm_interrupt_handler+0x64>)
    2538:	4798      	blx	r3
    253a:	4603      	mov	r3, r0
    253c:	2b00      	cmp	r3, #0
    253e:	d00a      	beq.n	2556 <tc_pwm_interrupt_handler+0x52>
    2540:	68f8      	ldr	r0, [r7, #12]
    2542:	4b0a      	ldr	r3, [pc, #40]	; (256c <tc_pwm_interrupt_handler+0x68>)
    2544:	4798      	blx	r3
    2546:	687b      	ldr	r3, [r7, #4]
    2548:	685b      	ldr	r3, [r3, #4]
    254a:	2b00      	cmp	r3, #0
    254c:	d003      	beq.n	2556 <tc_pwm_interrupt_handler+0x52>
    254e:	687b      	ldr	r3, [r7, #4]
    2550:	685b      	ldr	r3, [r3, #4]
    2552:	6878      	ldr	r0, [r7, #4]
    2554:	4798      	blx	r3
    2556:	bf00      	nop
    2558:	3710      	adds	r7, #16
    255a:	46bd      	mov	sp, r7
    255c:	bd80      	pop	{r7, pc}
    255e:	bf00      	nop
    2560:	00002115 	.word	0x00002115
    2564:	0000213d 	.word	0x0000213d
    2568:	00002171 	.word	0x00002171
    256c:	00002157 	.word	0x00002157

00002570 <TC0_Handler>:
    2570:	b580      	push	{r7, lr}
    2572:	af00      	add	r7, sp, #0
    2574:	4b03      	ldr	r3, [pc, #12]	; (2584 <TC0_Handler+0x14>)
    2576:	681b      	ldr	r3, [r3, #0]
    2578:	4618      	mov	r0, r3
    257a:	4b03      	ldr	r3, [pc, #12]	; (2588 <TC0_Handler+0x18>)
    257c:	4798      	blx	r3
    257e:	bf00      	nop
    2580:	bd80      	pop	{r7, pc}
    2582:	bf00      	nop
    2584:	2000005c 	.word	0x2000005c
    2588:	00002505 	.word	0x00002505

0000258c <get_tc_index>:
    258c:	b580      	push	{r7, lr}
    258e:	b084      	sub	sp, #16
    2590:	af00      	add	r7, sp, #0
    2592:	6078      	str	r0, [r7, #4]
    2594:	6878      	ldr	r0, [r7, #4]
    2596:	4b13      	ldr	r3, [pc, #76]	; (25e4 <get_tc_index+0x58>)
    2598:	4798      	blx	r3
    259a:	4603      	mov	r3, r0
    259c:	73bb      	strb	r3, [r7, #14]
    259e:	2300      	movs	r3, #0
    25a0:	73fb      	strb	r3, [r7, #15]
    25a2:	e010      	b.n	25c6 <get_tc_index+0x3a>
    25a4:	7bfa      	ldrb	r2, [r7, #15]
    25a6:	4910      	ldr	r1, [pc, #64]	; (25e8 <get_tc_index+0x5c>)
    25a8:	4613      	mov	r3, r2
    25aa:	009b      	lsls	r3, r3, #2
    25ac:	4413      	add	r3, r2
    25ae:	009b      	lsls	r3, r3, #2
    25b0:	440b      	add	r3, r1
    25b2:	781b      	ldrb	r3, [r3, #0]
    25b4:	7bba      	ldrb	r2, [r7, #14]
    25b6:	429a      	cmp	r2, r3
    25b8:	d102      	bne.n	25c0 <get_tc_index+0x34>
    25ba:	f997 300f 	ldrsb.w	r3, [r7, #15]
    25be:	e00d      	b.n	25dc <get_tc_index+0x50>
    25c0:	7bfb      	ldrb	r3, [r7, #15]
    25c2:	3301      	adds	r3, #1
    25c4:	73fb      	strb	r3, [r7, #15]
    25c6:	7bfb      	ldrb	r3, [r7, #15]
    25c8:	2b00      	cmp	r3, #0
    25ca:	d0eb      	beq.n	25a4 <get_tc_index+0x18>
    25cc:	f44f 72a9 	mov.w	r2, #338	; 0x152
    25d0:	4906      	ldr	r1, [pc, #24]	; (25ec <get_tc_index+0x60>)
    25d2:	2000      	movs	r0, #0
    25d4:	4b06      	ldr	r3, [pc, #24]	; (25f0 <get_tc_index+0x64>)
    25d6:	4798      	blx	r3
    25d8:	f04f 33ff 	mov.w	r3, #4294967295
    25dc:	4618      	mov	r0, r3
    25de:	3710      	adds	r7, #16
    25e0:	46bd      	mov	sp, r7
    25e2:	bd80      	pop	{r7, pc}
    25e4:	00002621 	.word	0x00002621
    25e8:	20000018 	.word	0x20000018
    25ec:	00002b60 	.word	0x00002b60
    25f0:	00001425 	.word	0x00001425

000025f4 <_tc_init_irq_param>:
    25f4:	b480      	push	{r7}
    25f6:	b083      	sub	sp, #12
    25f8:	af00      	add	r7, sp, #0
    25fa:	6078      	str	r0, [r7, #4]
    25fc:	6039      	str	r1, [r7, #0]
    25fe:	687b      	ldr	r3, [r7, #4]
    2600:	4a05      	ldr	r2, [pc, #20]	; (2618 <_tc_init_irq_param+0x24>)
    2602:	4293      	cmp	r3, r2
    2604:	d102      	bne.n	260c <_tc_init_irq_param+0x18>
    2606:	4a05      	ldr	r2, [pc, #20]	; (261c <_tc_init_irq_param+0x28>)
    2608:	683b      	ldr	r3, [r7, #0]
    260a:	6013      	str	r3, [r2, #0]
    260c:	bf00      	nop
    260e:	370c      	adds	r7, #12
    2610:	46bd      	mov	sp, r7
    2612:	f85d 7b04 	ldr.w	r7, [sp], #4
    2616:	4770      	bx	lr
    2618:	40003800 	.word	0x40003800
    261c:	2000005c 	.word	0x2000005c

00002620 <_get_hardware_offset>:
    2620:	b4b0      	push	{r4, r5, r7}
    2622:	b08d      	sub	sp, #52	; 0x34
    2624:	af00      	add	r7, sp, #0
    2626:	6078      	str	r0, [r7, #4]
    2628:	4b13      	ldr	r3, [pc, #76]	; (2678 <_get_hardware_offset+0x58>)
    262a:	f107 040c 	add.w	r4, r7, #12
    262e:	461d      	mov	r5, r3
    2630:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    2632:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    2634:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    2638:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    263c:	2300      	movs	r3, #0
    263e:	62fb      	str	r3, [r7, #44]	; 0x2c
    2640:	e010      	b.n	2664 <_get_hardware_offset+0x44>
    2642:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2644:	009b      	lsls	r3, r3, #2
    2646:	f107 0230 	add.w	r2, r7, #48	; 0x30
    264a:	4413      	add	r3, r2
    264c:	f853 3c24 	ldr.w	r3, [r3, #-36]
    2650:	461a      	mov	r2, r3
    2652:	687b      	ldr	r3, [r7, #4]
    2654:	429a      	cmp	r2, r3
    2656:	d102      	bne.n	265e <_get_hardware_offset+0x3e>
    2658:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    265a:	b2db      	uxtb	r3, r3
    265c:	e006      	b.n	266c <_get_hardware_offset+0x4c>
    265e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2660:	3301      	adds	r3, #1
    2662:	62fb      	str	r3, [r7, #44]	; 0x2c
    2664:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2666:	2b07      	cmp	r3, #7
    2668:	d9eb      	bls.n	2642 <_get_hardware_offset+0x22>
    266a:	2300      	movs	r3, #0
    266c:	4618      	mov	r0, r3
    266e:	3734      	adds	r7, #52	; 0x34
    2670:	46bd      	mov	sp, r7
    2672:	bcb0      	pop	{r4, r5, r7}
    2674:	4770      	bx	lr
    2676:	bf00      	nop
    2678:	00002b74 	.word	0x00002b74

0000267c <hri_port_set_OUT_reg>:
{
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = PORT_OUT_OUT(mask);
}

static inline void hri_port_set_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
    267c:	b480      	push	{r7}
    267e:	b085      	sub	sp, #20
    2680:	af00      	add	r7, sp, #0
    2682:	60f8      	str	r0, [r7, #12]
    2684:	460b      	mov	r3, r1
    2686:	607a      	str	r2, [r7, #4]
    2688:	72fb      	strb	r3, [r7, #11]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    268a:	7afb      	ldrb	r3, [r7, #11]
    268c:	68fa      	ldr	r2, [r7, #12]
    268e:	01db      	lsls	r3, r3, #7
    2690:	4413      	add	r3, r2
    2692:	3318      	adds	r3, #24
    2694:	687a      	ldr	r2, [r7, #4]
    2696:	601a      	str	r2, [r3, #0]
}
    2698:	bf00      	nop
    269a:	3714      	adds	r7, #20
    269c:	46bd      	mov	sp, r7
    269e:	f85d 7b04 	ldr.w	r7, [sp], #4
    26a2:	4770      	bx	lr

000026a4 <hri_port_clear_OUT_reg>:
	((Port *)hw)->Group[submodule_index].OUTSET.reg = data;
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
    26a4:	b480      	push	{r7}
    26a6:	b085      	sub	sp, #20
    26a8:	af00      	add	r7, sp, #0
    26aa:	60f8      	str	r0, [r7, #12]
    26ac:	460b      	mov	r3, r1
    26ae:	607a      	str	r2, [r7, #4]
    26b0:	72fb      	strb	r3, [r7, #11]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    26b2:	7afb      	ldrb	r3, [r7, #11]
    26b4:	68fa      	ldr	r2, [r7, #12]
    26b6:	01db      	lsls	r3, r3, #7
    26b8:	4413      	add	r3, r2
    26ba:	3314      	adds	r3, #20
    26bc:	687a      	ldr	r2, [r7, #4]
    26be:	601a      	str	r2, [r3, #0]
}
    26c0:	bf00      	nop
    26c2:	3714      	adds	r7, #20
    26c4:	46bd      	mov	sp, r7
    26c6:	f85d 7b04 	ldr.w	r7, [sp], #4
    26ca:	4770      	bx	lr

000026cc <_gpio_set_level>:

/**
 * \brief Set output level on port with mask
 */
static inline void _gpio_set_level(const enum gpio_port port, const uint32_t mask, const bool level)
{
    26cc:	b580      	push	{r7, lr}
    26ce:	b082      	sub	sp, #8
    26d0:	af00      	add	r7, sp, #0
    26d2:	4603      	mov	r3, r0
    26d4:	6039      	str	r1, [r7, #0]
    26d6:	71fb      	strb	r3, [r7, #7]
    26d8:	4613      	mov	r3, r2
    26da:	71bb      	strb	r3, [r7, #6]
	if (level) {
    26dc:	79bb      	ldrb	r3, [r7, #6]
    26de:	2b00      	cmp	r3, #0
    26e0:	d006      	beq.n	26f0 <_gpio_set_level+0x24>
		hri_port_set_OUT_reg(PORT, port, mask);
    26e2:	79fb      	ldrb	r3, [r7, #7]
    26e4:	683a      	ldr	r2, [r7, #0]
    26e6:	4619      	mov	r1, r3
    26e8:	4806      	ldr	r0, [pc, #24]	; (2704 <_gpio_set_level+0x38>)
    26ea:	4b07      	ldr	r3, [pc, #28]	; (2708 <_gpio_set_level+0x3c>)
    26ec:	4798      	blx	r3
	} else {
		hri_port_clear_OUT_reg(PORT, port, mask);
	}
}
    26ee:	e005      	b.n	26fc <_gpio_set_level+0x30>
		hri_port_clear_OUT_reg(PORT, port, mask);
    26f0:	79fb      	ldrb	r3, [r7, #7]
    26f2:	683a      	ldr	r2, [r7, #0]
    26f4:	4619      	mov	r1, r3
    26f6:	4803      	ldr	r0, [pc, #12]	; (2704 <_gpio_set_level+0x38>)
    26f8:	4b04      	ldr	r3, [pc, #16]	; (270c <_gpio_set_level+0x40>)
    26fa:	4798      	blx	r3
}
    26fc:	bf00      	nop
    26fe:	3708      	adds	r7, #8
    2700:	46bd      	mov	sp, r7
    2702:	bd80      	pop	{r7, pc}
    2704:	41008000 	.word	0x41008000
    2708:	0000267d 	.word	0x0000267d
    270c:	000026a5 	.word	0x000026a5

00002710 <gpio_set_pin_level>:
 * \param[in] pin       The pin number for device
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void gpio_set_pin_level(const uint8_t pin, const bool level)
{
    2710:	b580      	push	{r7, lr}
    2712:	b082      	sub	sp, #8
    2714:	af00      	add	r7, sp, #0
    2716:	4603      	mov	r3, r0
    2718:	460a      	mov	r2, r1
    271a:	71fb      	strb	r3, [r7, #7]
    271c:	4613      	mov	r3, r2
    271e:	71bb      	strb	r3, [r7, #6]
	_gpio_set_level((enum gpio_port)GPIO_PORT(pin), 1U << GPIO_PIN(pin), level);
    2720:	79fb      	ldrb	r3, [r7, #7]
    2722:	095b      	lsrs	r3, r3, #5
    2724:	b2d8      	uxtb	r0, r3
    2726:	79fb      	ldrb	r3, [r7, #7]
    2728:	f003 031f 	and.w	r3, r3, #31
    272c:	2201      	movs	r2, #1
    272e:	fa02 f303 	lsl.w	r3, r2, r3
    2732:	79ba      	ldrb	r2, [r7, #6]
    2734:	4619      	mov	r1, r3
    2736:	4b03      	ldr	r3, [pc, #12]	; (2744 <gpio_set_pin_level+0x34>)
    2738:	4798      	blx	r3
}
    273a:	bf00      	nop
    273c:	3708      	adds	r7, #8
    273e:	46bd      	mov	sp, r7
    2740:	bd80      	pop	{r7, pc}
    2742:	bf00      	nop
    2744:	000026cd 	.word	0x000026cd

00002748 <main>:
#include <atmel_start.h>
#include <string.h>
#include <custom_functions.h>

int main(void){
    2748:	b580      	push	{r7, lr}
    274a:	b08c      	sub	sp, #48	; 0x30
    274c:	af00      	add	r7, sp, #0
	
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    274e:	4ba7      	ldr	r3, [pc, #668]	; (29ec <main+0x2a4>)
    2750:	4798      	blx	r3
	
	/* Initialize the value */
	bool input[4];
	bool clock_edge_event = 0;
    2752:	2300      	movs	r3, #0
    2754:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
	
	int value = 0;
    2758:	2300      	movs	r3, #0
    275a:	627b      	str	r3, [r7, #36]	; 0x24
	int result = 0;
    275c:	2300      	movs	r3, #0
    275e:	62fb      	str	r3, [r7, #44]	; 0x2c
	
	while (1) {
		clock_edge_event = edge_detector();
    2760:	4ba3      	ldr	r3, [pc, #652]	; (29f0 <main+0x2a8>)
    2762:	4798      	blx	r3
    2764:	4603      	mov	r3, r0
    2766:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
		
		if(clock_edge_event){
    276a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
    276e:	2b00      	cmp	r3, #0
    2770:	d042      	beq.n	27f8 <main+0xb0>
			//get the 4 bit from the DIP switch
			input[3] = (PORT->Group[BIT1/32].IN.reg & (1<<(BIT1%32))); //PB04
    2772:	4ba0      	ldr	r3, [pc, #640]	; (29f4 <main+0x2ac>)
    2774:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    2778:	f003 0310 	and.w	r3, r3, #16
    277c:	2b00      	cmp	r3, #0
    277e:	bf14      	ite	ne
    2780:	2301      	movne	r3, #1
    2782:	2300      	moveq	r3, #0
    2784:	b2db      	uxtb	r3, r3
    2786:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
			input[2] = (PORT->Group[BIT2/32].IN.reg & (1<<(BIT2%32))); //PB05
    278a:	4b9a      	ldr	r3, [pc, #616]	; (29f4 <main+0x2ac>)
    278c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    2790:	f003 0320 	and.w	r3, r3, #32
    2794:	2b00      	cmp	r3, #0
    2796:	bf14      	ite	ne
    2798:	2301      	movne	r3, #1
    279a:	2300      	moveq	r3, #0
    279c:	b2db      	uxtb	r3, r3
    279e:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
			input[1] = (PORT->Group[BIT3/32].IN.reg & (1<<(BIT3%32))); //PB06
    27a2:	4b94      	ldr	r3, [pc, #592]	; (29f4 <main+0x2ac>)
    27a4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    27a8:	f003 0340 	and.w	r3, r3, #64	; 0x40
    27ac:	2b00      	cmp	r3, #0
    27ae:	bf14      	ite	ne
    27b0:	2301      	movne	r3, #1
    27b2:	2300      	moveq	r3, #0
    27b4:	b2db      	uxtb	r3, r3
    27b6:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
			input[0] = (PORT->Group[BIT4/32].IN.reg & (1<<(BIT4%32))); //PB07
    27ba:	4b8e      	ldr	r3, [pc, #568]	; (29f4 <main+0x2ac>)
    27bc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    27c0:	f003 0380 	and.w	r3, r3, #128	; 0x80
    27c4:	2b00      	cmp	r3, #0
    27c6:	bf14      	ite	ne
    27c8:	2301      	movne	r3, #1
    27ca:	2300      	moveq	r3, #0
    27cc:	b2db      	uxtb	r3, r3
    27ce:	f887 3020 	strb.w	r3, [r7, #32]
			//convert the 4-bit value into integer
			value = input[3]*8 + input[2]*4 + input[1]*2 + input[0];
    27d2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
    27d6:	005b      	lsls	r3, r3, #1
    27d8:	f897 2022 	ldrb.w	r2, [r7, #34]	; 0x22
    27dc:	4413      	add	r3, r2
    27de:	005b      	lsls	r3, r3, #1
    27e0:	f897 2021 	ldrb.w	r2, [r7, #33]	; 0x21
    27e4:	4413      	add	r3, r2
    27e6:	005b      	lsls	r3, r3, #1
    27e8:	f897 2020 	ldrb.w	r2, [r7, #32]
    27ec:	4413      	add	r3, r2
    27ee:	627b      	str	r3, [r7, #36]	; 0x24
			//state machine for detecting the right sequence for counting up and down
			result = HandleEvent(value);
    27f0:	6a78      	ldr	r0, [r7, #36]	; 0x24
    27f2:	4b81      	ldr	r3, [pc, #516]	; (29f8 <main+0x2b0>)
    27f4:	4798      	blx	r3
    27f6:	62f8      	str	r0, [r7, #44]	; 0x2c
		}
		
		int seven_seg[7];
		//convert the count value into a sequence for the 7 segment display
		switch(result){
    27f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    27fa:	2b09      	cmp	r3, #9
    27fc:	f200 80ae 	bhi.w	295c <main+0x214>
    2800:	a201      	add	r2, pc, #4	; (adr r2, 2808 <main+0xc0>)
    2802:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    2806:	bf00      	nop
    2808:	00002831 	.word	0x00002831
    280c:	0000284f 	.word	0x0000284f
    2810:	0000286d 	.word	0x0000286d
    2814:	0000288b 	.word	0x0000288b
    2818:	000028a9 	.word	0x000028a9
    281c:	000028c7 	.word	0x000028c7
    2820:	000028e5 	.word	0x000028e5
    2824:	00002903 	.word	0x00002903
    2828:	00002921 	.word	0x00002921
    282c:	0000293f 	.word	0x0000293f
			case 0:
				seven_seg[0] = 1;
    2830:	2301      	movs	r3, #1
    2832:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    2834:	2301      	movs	r3, #1
    2836:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    2838:	2301      	movs	r3, #1
    283a:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 1;
    283c:	2301      	movs	r3, #1
    283e:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 1;
    2840:	2301      	movs	r3, #1
    2842:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 1;
    2844:	2301      	movs	r3, #1
    2846:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 0;
    2848:	2300      	movs	r3, #0
    284a:	61fb      	str	r3, [r7, #28]
			break;
    284c:	e086      	b.n	295c <main+0x214>
			case 1:
				seven_seg[0] = 0;
    284e:	2300      	movs	r3, #0
    2850:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    2852:	2301      	movs	r3, #1
    2854:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    2856:	2301      	movs	r3, #1
    2858:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 0;
    285a:	2300      	movs	r3, #0
    285c:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 0;
    285e:	2300      	movs	r3, #0
    2860:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 0;
    2862:	2300      	movs	r3, #0
    2864:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 0;			
    2866:	2300      	movs	r3, #0
    2868:	61fb      	str	r3, [r7, #28]
			break;
    286a:	e077      	b.n	295c <main+0x214>
			case 2:
				seven_seg[0] = 1;
    286c:	2301      	movs	r3, #1
    286e:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    2870:	2301      	movs	r3, #1
    2872:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 0;
    2874:	2300      	movs	r3, #0
    2876:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 1;
    2878:	2301      	movs	r3, #1
    287a:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 1;
    287c:	2301      	movs	r3, #1
    287e:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 0;
    2880:	2300      	movs	r3, #0
    2882:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 1;
    2884:	2301      	movs	r3, #1
    2886:	61fb      	str	r3, [r7, #28]
			break;
    2888:	e068      	b.n	295c <main+0x214>
			case 3:
				seven_seg[0] = 1;
    288a:	2301      	movs	r3, #1
    288c:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    288e:	2301      	movs	r3, #1
    2890:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    2892:	2301      	movs	r3, #1
    2894:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 1;
    2896:	2301      	movs	r3, #1
    2898:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 0;
    289a:	2300      	movs	r3, #0
    289c:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 0;
    289e:	2300      	movs	r3, #0
    28a0:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 1;
    28a2:	2301      	movs	r3, #1
    28a4:	61fb      	str	r3, [r7, #28]
			break;
    28a6:	e059      	b.n	295c <main+0x214>
			case 4:
				seven_seg[0] = 0;
    28a8:	2300      	movs	r3, #0
    28aa:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    28ac:	2301      	movs	r3, #1
    28ae:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    28b0:	2301      	movs	r3, #1
    28b2:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 0;
    28b4:	2300      	movs	r3, #0
    28b6:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 0;
    28b8:	2300      	movs	r3, #0
    28ba:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 1;
    28bc:	2301      	movs	r3, #1
    28be:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 1;
    28c0:	2301      	movs	r3, #1
    28c2:	61fb      	str	r3, [r7, #28]
			break;
    28c4:	e04a      	b.n	295c <main+0x214>
			case 5:
				seven_seg[0] = 1;
    28c6:	2301      	movs	r3, #1
    28c8:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 0;
    28ca:	2300      	movs	r3, #0
    28cc:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    28ce:	2301      	movs	r3, #1
    28d0:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 1;
    28d2:	2301      	movs	r3, #1
    28d4:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 0;
    28d6:	2300      	movs	r3, #0
    28d8:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 1;
    28da:	2301      	movs	r3, #1
    28dc:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 1;
    28de:	2301      	movs	r3, #1
    28e0:	61fb      	str	r3, [r7, #28]
			break;
    28e2:	e03b      	b.n	295c <main+0x214>
			case 6:
				seven_seg[0] = 1;
    28e4:	2301      	movs	r3, #1
    28e6:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 0;
    28e8:	2300      	movs	r3, #0
    28ea:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    28ec:	2301      	movs	r3, #1
    28ee:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 1;
    28f0:	2301      	movs	r3, #1
    28f2:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 1;
    28f4:	2301      	movs	r3, #1
    28f6:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 1;
    28f8:	2301      	movs	r3, #1
    28fa:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 1;
    28fc:	2301      	movs	r3, #1
    28fe:	61fb      	str	r3, [r7, #28]
			break;
    2900:	e02c      	b.n	295c <main+0x214>
			case 7:
				seven_seg[0] = 1;
    2902:	2301      	movs	r3, #1
    2904:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    2906:	2301      	movs	r3, #1
    2908:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    290a:	2301      	movs	r3, #1
    290c:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 0;
    290e:	2300      	movs	r3, #0
    2910:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 0;
    2912:	2300      	movs	r3, #0
    2914:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 0;
    2916:	2300      	movs	r3, #0
    2918:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 0;
    291a:	2300      	movs	r3, #0
    291c:	61fb      	str	r3, [r7, #28]
			break;
    291e:	e01d      	b.n	295c <main+0x214>
			case 8:
				seven_seg[0] = 1;
    2920:	2301      	movs	r3, #1
    2922:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    2924:	2301      	movs	r3, #1
    2926:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    2928:	2301      	movs	r3, #1
    292a:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 1;
    292c:	2301      	movs	r3, #1
    292e:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 1;
    2930:	2301      	movs	r3, #1
    2932:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 1;
    2934:	2301      	movs	r3, #1
    2936:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 1;
    2938:	2301      	movs	r3, #1
    293a:	61fb      	str	r3, [r7, #28]
			break;
    293c:	e00e      	b.n	295c <main+0x214>
			case 9:
				seven_seg[0] = 1;
    293e:	2301      	movs	r3, #1
    2940:	607b      	str	r3, [r7, #4]
				seven_seg[1] = 1;
    2942:	2301      	movs	r3, #1
    2944:	60bb      	str	r3, [r7, #8]
				seven_seg[2] = 1;
    2946:	2301      	movs	r3, #1
    2948:	60fb      	str	r3, [r7, #12]
				seven_seg[3] = 1;
    294a:	2301      	movs	r3, #1
    294c:	613b      	str	r3, [r7, #16]
				seven_seg[4] = 0;
    294e:	2300      	movs	r3, #0
    2950:	617b      	str	r3, [r7, #20]
				seven_seg[5] = 1;
    2952:	2301      	movs	r3, #1
    2954:	61bb      	str	r3, [r7, #24]
				seven_seg[6] = 1;
    2956:	2301      	movs	r3, #1
    2958:	61fb      	str	r3, [r7, #28]
			break;
    295a:	bf00      	nop
		}
		
		gpio_set_pin_level(OUT1,!seven_seg[0]);  //port PB08 - A in the 7seg
    295c:	687b      	ldr	r3, [r7, #4]
    295e:	2b00      	cmp	r3, #0
    2960:	bf0c      	ite	eq
    2962:	2301      	moveq	r3, #1
    2964:	2300      	movne	r3, #0
    2966:	b2db      	uxtb	r3, r3
    2968:	4619      	mov	r1, r3
    296a:	2028      	movs	r0, #40	; 0x28
    296c:	4b23      	ldr	r3, [pc, #140]	; (29fc <main+0x2b4>)
    296e:	4798      	blx	r3
		gpio_set_pin_level(OUT2,!seven_seg[1]);  //port PB09
    2970:	68bb      	ldr	r3, [r7, #8]
    2972:	2b00      	cmp	r3, #0
    2974:	bf0c      	ite	eq
    2976:	2301      	moveq	r3, #1
    2978:	2300      	movne	r3, #0
    297a:	b2db      	uxtb	r3, r3
    297c:	4619      	mov	r1, r3
    297e:	2029      	movs	r0, #41	; 0x29
    2980:	4b1e      	ldr	r3, [pc, #120]	; (29fc <main+0x2b4>)
    2982:	4798      	blx	r3
		gpio_set_pin_level(OUT3,!seven_seg[2]);  //port PB14
    2984:	68fb      	ldr	r3, [r7, #12]
    2986:	2b00      	cmp	r3, #0
    2988:	bf0c      	ite	eq
    298a:	2301      	moveq	r3, #1
    298c:	2300      	movne	r3, #0
    298e:	b2db      	uxtb	r3, r3
    2990:	4619      	mov	r1, r3
    2992:	202e      	movs	r0, #46	; 0x2e
    2994:	4b19      	ldr	r3, [pc, #100]	; (29fc <main+0x2b4>)
    2996:	4798      	blx	r3
		gpio_set_pin_level(OUT4,!seven_seg[3]);  //port PB15
    2998:	693b      	ldr	r3, [r7, #16]
    299a:	2b00      	cmp	r3, #0
    299c:	bf0c      	ite	eq
    299e:	2301      	moveq	r3, #1
    29a0:	2300      	movne	r3, #0
    29a2:	b2db      	uxtb	r3, r3
    29a4:	4619      	mov	r1, r3
    29a6:	202f      	movs	r0, #47	; 0x2f
    29a8:	4b14      	ldr	r3, [pc, #80]	; (29fc <main+0x2b4>)
    29aa:	4798      	blx	r3
		gpio_set_pin_level(OUT5,!seven_seg[4]);  //port PB26
    29ac:	697b      	ldr	r3, [r7, #20]
    29ae:	2b00      	cmp	r3, #0
    29b0:	bf0c      	ite	eq
    29b2:	2301      	moveq	r3, #1
    29b4:	2300      	movne	r3, #0
    29b6:	b2db      	uxtb	r3, r3
    29b8:	4619      	mov	r1, r3
    29ba:	203a      	movs	r0, #58	; 0x3a
    29bc:	4b0f      	ldr	r3, [pc, #60]	; (29fc <main+0x2b4>)
    29be:	4798      	blx	r3
		gpio_set_pin_level(OUT6,!seven_seg[5]);  //port PB27
    29c0:	69bb      	ldr	r3, [r7, #24]
    29c2:	2b00      	cmp	r3, #0
    29c4:	bf0c      	ite	eq
    29c6:	2301      	moveq	r3, #1
    29c8:	2300      	movne	r3, #0
    29ca:	b2db      	uxtb	r3, r3
    29cc:	4619      	mov	r1, r3
    29ce:	203b      	movs	r0, #59	; 0x3b
    29d0:	4b0a      	ldr	r3, [pc, #40]	; (29fc <main+0x2b4>)
    29d2:	4798      	blx	r3
		gpio_set_pin_level(OUT7,!seven_seg[6]);  //port PB28
    29d4:	69fb      	ldr	r3, [r7, #28]
    29d6:	2b00      	cmp	r3, #0
    29d8:	bf0c      	ite	eq
    29da:	2301      	moveq	r3, #1
    29dc:	2300      	movne	r3, #0
    29de:	b2db      	uxtb	r3, r3
    29e0:	4619      	mov	r1, r3
    29e2:	203c      	movs	r0, #60	; 0x3c
    29e4:	4b05      	ldr	r3, [pc, #20]	; (29fc <main+0x2b4>)
    29e6:	4798      	blx	r3
	while (1) {
    29e8:	e6ba      	b.n	2760 <main+0x18>
    29ea:	bf00      	nop
    29ec:	000002d1 	.word	0x000002d1
    29f0:	00000471 	.word	0x00000471
    29f4:	41008000 	.word	0x41008000
    29f8:	000002e1 	.word	0x000002e1
    29fc:	00002711 	.word	0x00002711

00002a00 <__libc_init_array>:
    2a00:	b570      	push	{r4, r5, r6, lr}
    2a02:	4e0d      	ldr	r6, [pc, #52]	; (2a38 <__libc_init_array+0x38>)
    2a04:	4c0d      	ldr	r4, [pc, #52]	; (2a3c <__libc_init_array+0x3c>)
    2a06:	1ba4      	subs	r4, r4, r6
    2a08:	10a4      	asrs	r4, r4, #2
    2a0a:	2500      	movs	r5, #0
    2a0c:	42a5      	cmp	r5, r4
    2a0e:	d109      	bne.n	2a24 <__libc_init_array+0x24>
    2a10:	4e0b      	ldr	r6, [pc, #44]	; (2a40 <__libc_init_array+0x40>)
    2a12:	4c0c      	ldr	r4, [pc, #48]	; (2a44 <__libc_init_array+0x44>)
    2a14:	f000 f8be 	bl	2b94 <_init>
    2a18:	1ba4      	subs	r4, r4, r6
    2a1a:	10a4      	asrs	r4, r4, #2
    2a1c:	2500      	movs	r5, #0
    2a1e:	42a5      	cmp	r5, r4
    2a20:	d105      	bne.n	2a2e <__libc_init_array+0x2e>
    2a22:	bd70      	pop	{r4, r5, r6, pc}
    2a24:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    2a28:	4798      	blx	r3
    2a2a:	3501      	adds	r5, #1
    2a2c:	e7ee      	b.n	2a0c <__libc_init_array+0xc>
    2a2e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    2a32:	4798      	blx	r3
    2a34:	3501      	adds	r5, #1
    2a36:	e7f2      	b.n	2a1e <__libc_init_array+0x1e>
    2a38:	00002ba0 	.word	0x00002ba0
    2a3c:	00002ba0 	.word	0x00002ba0
    2a40:	00002ba0 	.word	0x00002ba0
    2a44:	00002ba4 	.word	0x00002ba4
    2a48:	00000000 	.word	0x00000000
    2a4c:	00000004 	.word	0x00000004
    2a50:	00000006 	.word	0x00000006
    2a54:	00000002 	.word	0x00000002
	...
    2a60:	00000004 	.word	0x00000004
    2a64:	00000005 	.word	0x00000005
    2a68:	00000001 	.word	0x00000001
    2a6c:	00000000 	.word	0x00000000
    2a70:	682f2e2e 	.word	0x682f2e2e
    2a74:	702f6c70 	.word	0x702f6c70
    2a78:	2f74726f 	.word	0x2f74726f
    2a7c:	5f6c7068 	.word	0x5f6c7068
    2a80:	6f697067 	.word	0x6f697067
    2a84:	7361625f 	.word	0x7361625f
    2a88:	00682e65 	.word	0x00682e65
    2a8c:	682f2e2e 	.word	0x682f2e2e
    2a90:	732f6c61 	.word	0x732f6c61
    2a94:	682f6372 	.word	0x682f6372
    2a98:	705f6c61 	.word	0x705f6c61
    2a9c:	632e6d77 	.word	0x632e6d77
    2aa0:	00000000 	.word	0x00000000
    2aa4:	682f2e2e 	.word	0x682f2e2e
    2aa8:	732f6c61 	.word	0x732f6c61
    2aac:	682f6372 	.word	0x682f6372
    2ab0:	745f6c61 	.word	0x745f6c61
    2ab4:	72656d69 	.word	0x72656d69
    2ab8:	0000632e 	.word	0x0000632e
    2abc:	682f2e2e 	.word	0x682f2e2e
    2ac0:	732f6c61 	.word	0x732f6c61
    2ac4:	682f6372 	.word	0x682f6372
    2ac8:	755f6c61 	.word	0x755f6c61
    2acc:	74726173 	.word	0x74726173
    2ad0:	6e79735f 	.word	0x6e79735f
    2ad4:	00632e63 	.word	0x00632e63
    2ad8:	682f2e2e 	.word	0x682f2e2e
    2adc:	752f6c61 	.word	0x752f6c61
    2ae0:	736c6974 	.word	0x736c6974
    2ae4:	6372732f 	.word	0x6372732f
    2ae8:	6974752f 	.word	0x6974752f
    2aec:	6c5f736c 	.word	0x6c5f736c
    2af0:	2e747369 	.word	0x2e747369
    2af4:	00000063 	.word	0x00000063
    2af8:	682f2e2e 	.word	0x682f2e2e
    2afc:	722f6c70 	.word	0x722f6c70
    2b00:	682f6374 	.word	0x682f6374
    2b04:	725f6c70 	.word	0x725f6c70
    2b08:	632e6374 	.word	0x632e6374
    2b0c:	00000000 	.word	0x00000000
    2b10:	682f2e2e 	.word	0x682f2e2e
    2b14:	732f6c70 	.word	0x732f6c70
    2b18:	6f637265 	.word	0x6f637265
    2b1c:	70682f6d 	.word	0x70682f6d
    2b20:	65735f6c 	.word	0x65735f6c
    2b24:	6d6f6372 	.word	0x6d6f6372
    2b28:	0000632e 	.word	0x0000632e
    2b2c:	40003000 	.word	0x40003000
    2b30:	40003400 	.word	0x40003400
    2b34:	41012000 	.word	0x41012000
    2b38:	41014000 	.word	0x41014000
    2b3c:	43000000 	.word	0x43000000
    2b40:	43000400 	.word	0x43000400
    2b44:	43000800 	.word	0x43000800
    2b48:	43000c00 	.word	0x43000c00

00002b4c <sercomspi_regs>:
	...
    2b60:	682f2e2e 742f6c70 70682f63 63745f6c     ../hpl/tc/hpl_tc
    2b70:	0000632e 40003800 40003c00 4101a000     .c...8.@.<.@...A
    2b80:	4101c000 42001400 42001800 43001400     ...A...B...B...C
    2b90:	43001800                                ...C

00002b94 <_init>:
    2b94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2b96:	bf00      	nop
    2b98:	bcf8      	pop	{r3, r4, r5, r6, r7}
    2b9a:	bc08      	pop	{r3}
    2b9c:	469e      	mov	lr, r3
    2b9e:	4770      	bx	lr

00002ba0 <__init_array_start>:
    2ba0:	00000289 	.word	0x00000289

00002ba4 <_fini>:
    2ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2ba6:	bf00      	nop
    2ba8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    2baa:	bc08      	pop	{r3}
    2bac:	469e      	mov	lr, r3
    2bae:	4770      	bx	lr

00002bb0 <__fini_array_start>:
    2bb0:	00000265 	.word	0x00000265
